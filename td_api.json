{
    "version": "1.8.35",
    "sha": "cb798a2df8a7f0415f90b8ac7a2ae1a42a6ad644",
    "updated_at": "2024-08-31 14:30:46.810635",
    "abstract_classes": [
        {
            "name": "AuthenticationCodeType",
            "description": "Provides information about the method by which an authentication code is delivered to the user"
        },
        {
            "name": "EmailAddressAuthentication",
            "description": "Contains authentication data for an email address"
        },
        {
            "name": "EmailAddressResetState",
            "description": "Describes reset state of an email address"
        },
        {
            "name": "AuthorizationState",
            "description": "Represents the current authorization state of the TDLib client"
        },
        {
            "name": "FirebaseDeviceVerificationParameters",
            "description": "Describes parameters to be used for device verification"
        },
        {
            "name": "InputFile",
            "description": "Points to a file"
        },
        {
            "name": "ThumbnailFormat",
            "description": "Describes format of a thumbnail"
        },
        {
            "name": "MaskPoint",
            "description": "Part of the face, relative to which a mask is placed"
        },
        {
            "name": "StickerFormat",
            "description": "Describes format of a sticker"
        },
        {
            "name": "StickerType",
            "description": "Describes type of sticker"
        },
        {
            "name": "StickerFullType",
            "description": "Contains full information about sticker type"
        },
        {
            "name": "PollType",
            "description": "Describes the type of poll"
        },
        {
            "name": "UserType",
            "description": "Represents the type of user. The following types are possible: regular users, deleted users and bots"
        },
        {
            "name": "BusinessAwayMessageSchedule",
            "description": "Describes conditions for sending of away messages by a Telegram Business account"
        },
        {
            "name": "ChatPhotoStickerType",
            "description": "Describes type of sticker, which was used to create a chat photo"
        },
        {
            "name": "InputChatPhoto",
            "description": "Describes a photo to be set as a user profile or chat photo"
        },
        {
            "name": "StarTransactionDirection",
            "description": "Describes direction of a transaction with Telegram Stars"
        },
        {
            "name": "BotTransactionPurpose",
            "description": "Describes purpose of a transaction with a bot"
        },
        {
            "name": "ChannelTransactionPurpose",
            "description": "Describes purpose of a transaction with a channel"
        },
        {
            "name": "StarTransactionPartner",
            "description": "Describes source or recipient of a transaction with Telegram Stars"
        },
        {
            "name": "PremiumGiveawayParticipantStatus",
            "description": "Contains information about status of a user in a Telegram Premium giveaway"
        },
        {
            "name": "PremiumGiveawayInfo",
            "description": "Contains information about Telegram Premium giveaway"
        },
        {
            "name": "ChatMemberStatus",
            "description": "Provides information about the status of a member in a chat"
        },
        {
            "name": "ChatMembersFilter",
            "description": "Specifies the kind of chat members to return in searchChatMembers"
        },
        {
            "name": "SupergroupMembersFilter",
            "description": "Specifies the kind of chat members to return in getSupergroupMembers"
        },
        {
            "name": "InviteLinkChatType",
            "description": "Describes the type of chat to which points an invite link"
        },
        {
            "name": "SecretChatState",
            "description": "Describes the current secret chat state"
        },
        {
            "name": "MessageSender",
            "description": "Contains information about the sender of a message"
        },
        {
            "name": "MessageReadDate",
            "description": "Describes read date of a recent outgoing message in a private chat"
        },
        {
            "name": "MessageOrigin",
            "description": "Contains information about the origin of a message"
        },
        {
            "name": "ReactionType",
            "description": "Describes type of message reaction"
        },
        {
            "name": "MessageEffectType",
            "description": "Describes type of emoji effect"
        },
        {
            "name": "MessageSendingState",
            "description": "Contains information about the sending state of the message"
        },
        {
            "name": "MessageReplyTo",
            "description": "Contains information about the message or the story a message is replying to"
        },
        {
            "name": "InputMessageReplyTo",
            "description": "Contains information about the message or the story to be replied"
        },
        {
            "name": "MessageSource",
            "description": "Describes source of a message"
        },
        {
            "name": "ReportChatSponsoredMessageResult",
            "description": "Describes result of sponsored message report"
        },
        {
            "name": "NotificationSettingsScope",
            "description": "Describes the types of chats to which notification settings are relevant"
        },
        {
            "name": "ReactionNotificationSource",
            "description": "Describes sources of reactions for which notifications will be shown"
        },
        {
            "name": "ChatType",
            "description": "Describes the type of chat"
        },
        {
            "name": "ChatList",
            "description": "Describes a list of chats"
        },
        {
            "name": "ChatSource",
            "description": "Describes a reason why an external chat is shown in a chat list"
        },
        {
            "name": "ChatAvailableReactions",
            "description": "Describes reactions available in the chat"
        },
        {
            "name": "PublicChatType",
            "description": "Describes type of public chat"
        },
        {
            "name": "ChatActionBar",
            "description": "Describes actions which must be possible to do through a chat action bar"
        },
        {
            "name": "KeyboardButtonType",
            "description": "Describes a keyboard button type"
        },
        {
            "name": "InlineKeyboardButtonType",
            "description": "Describes the type of inline keyboard button"
        },
        {
            "name": "ReplyMarkup",
            "description": "Contains a description of a custom keyboard and actions that can be done with it to quickly reply to bots"
        },
        {
            "name": "LoginUrlInfo",
            "description": "Contains information about an inline button of type inlineKeyboardButtonTypeLoginUrl"
        },
        {
            "name": "SavedMessagesTopicType",
            "description": "Describes type of Saved Messages topic"
        },
        {
            "name": "RichText",
            "description": "Describes a formatted text object"
        },
        {
            "name": "PageBlockHorizontalAlignment",
            "description": "Describes a horizontal alignment of a table cell content"
        },
        {
            "name": "PageBlockVerticalAlignment",
            "description": "Describes a Vertical alignment of a table cell content"
        },
        {
            "name": "PageBlock",
            "description": "Describes a block of an instant view for a web page"
        },
        {
            "name": "LinkPreviewAlbumMedia",
            "description": "Describes a media from a link preview album"
        },
        {
            "name": "LinkPreviewType",
            "description": "Describes type of link preview"
        },
        {
            "name": "CollectibleItemType",
            "description": "Describes a collectible item that can be purchased at https://fragment.com"
        },
        {
            "name": "InputCredentials",
            "description": "Contains information about the payment method chosen by the user"
        },
        {
            "name": "PaymentProvider",
            "description": "Contains information about a payment provider"
        },
        {
            "name": "PaymentFormType",
            "description": "Describes type of payment form"
        },
        {
            "name": "PaymentReceiptType",
            "description": "Describes type of successful payment"
        },
        {
            "name": "InputInvoice",
            "description": "Describes an invoice to process"
        },
        {
            "name": "PaidMedia",
            "description": "Describes a paid media"
        },
        {
            "name": "PassportElementType",
            "description": "Contains the type of Telegram Passport element"
        },
        {
            "name": "PassportElement",
            "description": "Contains information about a Telegram Passport element"
        },
        {
            "name": "InputPassportElement",
            "description": "Contains information about a Telegram Passport element to be saved"
        },
        {
            "name": "PassportElementErrorSource",
            "description": "Contains the description of an error in a Telegram Passport element"
        },
        {
            "name": "InputPassportElementErrorSource",
            "description": "Contains the description of an error in a Telegram Passport element; for bots only"
        },
        {
            "name": "MessageContent",
            "description": "Contains the content of a message"
        },
        {
            "name": "TextEntityType",
            "description": "Represents a part of the text which must be formatted differently"
        },
        {
            "name": "InputPaidMediaType",
            "description": "Describes type of paid media to sent"
        },
        {
            "name": "MessageSchedulingState",
            "description": "Contains information about the time when a scheduled message will be sent"
        },
        {
            "name": "MessageSelfDestructType",
            "description": "Describes when a message will be self-destructed"
        },
        {
            "name": "InputMessageContent",
            "description": "The content of a message to send"
        },
        {
            "name": "SearchMessagesFilter",
            "description": "Represents a filter for message search results"
        },
        {
            "name": "ChatAction",
            "description": "Describes the different types of activity in a chat"
        },
        {
            "name": "UserStatus",
            "description": "Describes the last time the user was online"
        },
        {
            "name": "EmojiCategorySource",
            "description": "Describes source of stickers for an emoji category"
        },
        {
            "name": "EmojiCategoryType",
            "description": "Describes type of emoji category"
        },
        {
            "name": "StoryAreaType",
            "description": "Describes type of clickable area on a story media"
        },
        {
            "name": "InputStoryAreaType",
            "description": "Describes type of clickable area on a story media to be added"
        },
        {
            "name": "StoryContent",
            "description": "Contains the content of a story"
        },
        {
            "name": "InputStoryContent",
            "description": "The content of a story to send"
        },
        {
            "name": "StoryList",
            "description": "Describes a list of stories"
        },
        {
            "name": "StoryOrigin",
            "description": "Contains information about the origin of a story that was reposted"
        },
        {
            "name": "StoryInteractionType",
            "description": "Describes type of interaction with a story"
        },
        {
            "name": "PublicForward",
            "description": "Describes a public forward or repost of a story"
        },
        {
            "name": "ChatBoostSource",
            "description": "Describes source of a chat boost"
        },
        {
            "name": "ResendCodeReason",
            "description": "Describes the reason why a code needs to be re-sent"
        },
        {
            "name": "CallDiscardReason",
            "description": "Describes the reason why a call was discarded"
        },
        {
            "name": "CallServerType",
            "description": "Describes the type of call server"
        },
        {
            "name": "CallState",
            "description": "Describes the current call state"
        },
        {
            "name": "GroupCallVideoQuality",
            "description": "Describes the quality of a group call video"
        },
        {
            "name": "CallProblem",
            "description": "Describes the exact type of problem with a call"
        },
        {
            "name": "FirebaseAuthenticationSettings",
            "description": "Contains settings for Firebase Authentication in the official applications"
        },
        {
            "name": "ReactionUnavailabilityReason",
            "description": "Describes why the current user can't add reactions to the message, despite some other users can"
        },
        {
            "name": "DiceStickers",
            "description": "Contains animated stickers which must be used for dice animation rendering"
        },
        {
            "name": "SpeechRecognitionResult",
            "description": "Describes result of speech recognition in a voice note"
        },
        {
            "name": "BotWriteAccessAllowReason",
            "description": "Describes a reason why a bot was allowed to write messages to the current user"
        },
        {
            "name": "InputInlineQueryResult",
            "description": "Represents a single result of an inline query; for bots only"
        },
        {
            "name": "InlineQueryResult",
            "description": "Represents a single result of an inline query"
        },
        {
            "name": "InlineQueryResultsButtonType",
            "description": "Represents type of button in results of inline query"
        },
        {
            "name": "CallbackQueryPayload",
            "description": "Represents a payload of a callback query"
        },
        {
            "name": "ChatEventAction",
            "description": "Represents a chat event"
        },
        {
            "name": "LanguagePackStringValue",
            "description": "Represents the value of a string in a language pack"
        },
        {
            "name": "PremiumLimitType",
            "description": "Describes type of limit, increased for Premium users"
        },
        {
            "name": "PremiumFeature",
            "description": "Describes a feature available to Premium users"
        },
        {
            "name": "BusinessFeature",
            "description": "Describes a feature available to Business user accounts"
        },
        {
            "name": "PremiumStoryFeature",
            "description": "Describes a story feature available to Premium users"
        },
        {
            "name": "PremiumSource",
            "description": "Describes a source from which the Premium features screen is opened"
        },
        {
            "name": "StorePaymentPurpose",
            "description": "Describes a purpose of an in-store payment"
        },
        {
            "name": "TelegramPaymentPurpose",
            "description": "Describes a purpose of a payment toward Telegram"
        },
        {
            "name": "DeviceToken",
            "description": "Represents a data needed to subscribe for push notifications through registerDevice method."
        },
        {
            "name": "BackgroundFill",
            "description": "Describes a fill of a background"
        },
        {
            "name": "BackgroundType",
            "description": "Describes the type of background"
        },
        {
            "name": "InputBackground",
            "description": "Contains information about background to set"
        },
        {
            "name": "CanSendStoryResult",
            "description": "Represents result of checking whether the current user can send a story in the specific chat"
        },
        {
            "name": "CanTransferOwnershipResult",
            "description": "Represents result of checking whether the current session can be used to transfer a chat ownership to another user"
        },
        {
            "name": "CheckChatUsernameResult",
            "description": "Represents result of checking whether a username can be set for a chat"
        },
        {
            "name": "CheckStickerSetNameResult",
            "description": "Represents result of checking whether a name can be used for a new sticker set"
        },
        {
            "name": "ResetPasswordResult",
            "description": "Represents result of 2-step verification password reset"
        },
        {
            "name": "MessageFileType",
            "description": "Contains information about a file with messages exported from another app"
        },
        {
            "name": "PushMessageContent",
            "description": "Contains content of a push message notification"
        },
        {
            "name": "NotificationType",
            "description": "Contains detailed information about a notification"
        },
        {
            "name": "NotificationGroupType",
            "description": "Describes the type of notifications in a notification group"
        },
        {
            "name": "OptionValue",
            "description": "Represents the value of an option"
        },
        {
            "name": "JsonValue",
            "description": "Represents a JSON value"
        },
        {
            "name": "StoryPrivacySettings",
            "description": "Describes privacy settings of a story"
        },
        {
            "name": "UserPrivacySettingRule",
            "description": "Represents a single rule for managing user privacy settings"
        },
        {
            "name": "UserPrivacySetting",
            "description": "Describes available user privacy settings"
        },
        {
            "name": "CanSendMessageToUserResult",
            "description": "Describes result of canSendMessageToUser"
        },
        {
            "name": "SessionType",
            "description": "Represents the type of session"
        },
        {
            "name": "ReportReason",
            "description": "Describes the reason why a chat is reported"
        },
        {
            "name": "TargetChat",
            "description": "Describes the target chat to be opened"
        },
        {
            "name": "InternalLinkType",
            "description": "Describes an internal https://t.me or tg: link, which must be processed by the application in a special way"
        },
        {
            "name": "BlockList",
            "description": "Describes type of block list"
        },
        {
            "name": "FileType",
            "description": "Represents the type of file"
        },
        {
            "name": "NetworkType",
            "description": "Represents the type of network"
        },
        {
            "name": "NetworkStatisticsEntry",
            "description": "Contains statistics about network usage"
        },
        {
            "name": "AutosaveSettingsScope",
            "description": "Describes scope of autosave settings"
        },
        {
            "name": "ConnectionState",
            "description": "Describes the current state of the connection to Telegram servers"
        },
        {
            "name": "TopChatCategory",
            "description": "Represents the categories of chats for which a list of frequently used chats can be retrieved"
        },
        {
            "name": "TMeUrlType",
            "description": "Describes the type of URL linking to an internal Telegram entity"
        },
        {
            "name": "SuggestedAction",
            "description": "Describes an action suggested to the current user"
        },
        {
            "name": "TextParseMode",
            "description": "Describes the way the text needs to be parsed for text entities"
        },
        {
            "name": "ProxyType",
            "description": "Describes the type of proxy server"
        },
        {
            "name": "StatisticalGraph",
            "description": "Describes a statistical graph"
        },
        {
            "name": "ChatStatisticsObjectType",
            "description": "Describes type of object, for which statistics are provided"
        },
        {
            "name": "ChatStatistics",
            "description": "Contains a detailed statistics about a chat"
        },
        {
            "name": "RevenueWithdrawalState",
            "description": "Describes state of a revenue withdrawal"
        },
        {
            "name": "ChatRevenueTransactionType",
            "description": "Describes type of transaction for revenue earned from sponsored messages in a chat"
        },
        {
            "name": "VectorPathCommand",
            "description": "Represents a vector path command"
        },
        {
            "name": "BotCommandScope",
            "description": "Represents the scope to which bot commands are relevant"
        },
        {
            "name": "PhoneNumberCodeType",
            "description": "Describes type of the request for which a code is sent to a phone number"
        },
        {
            "name": "Update",
            "description": "Contains notifications about data changes"
        },
        {
            "name": "LogStream",
            "description": "Describes a stream to which TDLib internal log is written"
        }
    ],
    "methods": [
        {
            "name": "getAuthorizationState",
            "description": "Returns the current authorization state; this is an offline request. For informational purposes only. Use updateAuthorizationState instead to maintain the current authorization state. Can be called before initialization",
            "type": "AuthorizationState",
            "annotations": []
        },
        {
            "name": "setTdlibParameters",
            "description": "Sets the parameters for TDLib initialization. Works only when the current authorization state is authorizationStateWaitTdlibParameters",
            "type": "Ok",
            "annotations": [
                {
                    "name": "use_test_dc",
                    "type": "Bool",
                    "description": "Pass true to use Telegram test environment instead of the production environment",
                    "required": true
                },
                {
                    "name": "database_directory",
                    "type": "string",
                    "description": "The path to the directory for the persistent database; if empty, the current working directory will be used",
                    "required": true
                },
                {
                    "name": "files_directory",
                    "type": "string",
                    "description": "The path to the directory for storing files; if empty, database_directory will be used",
                    "required": true
                },
                {
                    "name": "database_encryption_key",
                    "type": "bytes",
                    "description": "Encryption key for the database. If the encryption key is invalid, then an error with code 401 will be returned",
                    "required": true
                },
                {
                    "name": "use_file_database",
                    "type": "Bool",
                    "description": "Pass true to keep information about downloaded and uploaded files between application restarts",
                    "required": true
                },
                {
                    "name": "use_chat_info_database",
                    "type": "Bool",
                    "description": "Pass true to keep cache of users, basic groups, supergroups, channels and secret chats between restarts. Implies use_file_database",
                    "required": true
                },
                {
                    "name": "use_message_database",
                    "type": "Bool",
                    "description": "Pass true to keep cache of chats and messages between restarts. Implies use_chat_info_database",
                    "required": true
                },
                {
                    "name": "use_secret_chats",
                    "type": "Bool",
                    "description": "Pass true to enable support for secret chats",
                    "required": true
                },
                {
                    "name": "api_id",
                    "type": "int32",
                    "description": "Application identifier for Telegram API access, which can be obtained at https://my.telegram.org",
                    "required": true
                },
                {
                    "name": "api_hash",
                    "type": "string",
                    "description": "Application identifier hash for Telegram API access, which can be obtained at https://my.telegram.org",
                    "required": true
                },
                {
                    "name": "system_language_code",
                    "type": "string",
                    "description": "IETF language tag of the user's operating system language; must be non-empty",
                    "required": true
                },
                {
                    "name": "device_model",
                    "type": "string",
                    "description": "Model of the device the application is being run on; must be non-empty",
                    "required": true
                },
                {
                    "name": "system_version",
                    "type": "string",
                    "description": "Version of the operating system the application is being run on. If empty, the version is automatically detected by TDLib",
                    "required": true
                },
                {
                    "name": "application_version",
                    "type": "string",
                    "description": "Application version; must be non-empty",
                    "required": true
                }
            ]
        },
        {
            "name": "setAuthenticationPhoneNumber",
            "description": "Sets the phone number of the user and sends an authentication code to the user. Works only when the current authorization state is authorizationStateWaitPhoneNumber,",
            "type": "Ok",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "The phone number of the user, in international format",
                    "required": true
                },
                {
                    "name": "settings",
                    "type": "phoneNumberAuthenticationSettings",
                    "description": "Settings for the authentication of the user's phone number; pass null to use default settings",
                    "required": false
                }
            ]
        },
        {
            "name": "setAuthenticationEmailAddress",
            "description": "Sets the email address of the user and sends an authentication code to the email address. Works only when the current authorization state is authorizationStateWaitEmailAddress",
            "type": "Ok",
            "annotations": [
                {
                    "name": "email_address",
                    "type": "string",
                    "description": "The email address of the user",
                    "required": true
                }
            ]
        },
        {
            "name": "resendAuthenticationCode",
            "description": "Resends an authentication code to the user. Works only when the current authorization state is authorizationStateWaitCode, the next_code_type of the result is not null",
            "type": "Ok",
            "annotations": [
                {
                    "name": "reason",
                    "type": "ResendCodeReason",
                    "description": "Reason of code resending; pass null if unknown",
                    "required": false
                }
            ]
        },
        {
            "name": "checkAuthenticationEmailCode",
            "description": "Checks the authentication of an email address. Works only when the current authorization state is authorizationStateWaitEmailCode",
            "type": "Ok",
            "annotations": [
                {
                    "name": "code",
                    "type": "EmailAddressAuthentication",
                    "description": "Email address authentication to check",
                    "required": true
                }
            ]
        },
        {
            "name": "checkAuthenticationCode",
            "description": "Checks the authentication code. Works only when the current authorization state is authorizationStateWaitCode",
            "type": "Ok",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "Authentication code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "requestQrCodeAuthentication",
            "description": "Requests QR code authentication by scanning a QR code on another logged in device. Works only when the current authorization state is authorizationStateWaitPhoneNumber,",
            "type": "Ok",
            "annotations": [
                {
                    "name": "other_user_ids",
                    "type": "vector<int53>",
                    "description": "List of user identifiers of other users currently using the application",
                    "required": true
                }
            ]
        },
        {
            "name": "registerUser",
            "description": "Finishes user registration. Works only when the current authorization state is authorizationStateWaitRegistration",
            "type": "Ok",
            "annotations": [
                {
                    "name": "first_name",
                    "type": "string",
                    "description": "The first name of the user; 1-64 characters",
                    "required": true
                },
                {
                    "name": "last_name",
                    "type": "string",
                    "description": "The last name of the user; 0-64 characters",
                    "required": true
                },
                {
                    "name": "disable_notification",
                    "type": "Bool",
                    "description": "Pass true to disable notification about the current user joining Telegram for other users that added them to contact list",
                    "required": true
                }
            ]
        },
        {
            "name": "resetAuthenticationEmailAddress",
            "description": "Resets the login email address. May return an error with a message 'TASK_ALREADY_EXISTS' if reset is still pending.",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "checkAuthenticationPassword",
            "description": "Checks the 2-step verification password for correctness. Works only when the current authorization state is authorizationStateWaitPassword",
            "type": "Ok",
            "annotations": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password to check",
                    "required": true
                }
            ]
        },
        {
            "name": "requestAuthenticationPasswordRecovery",
            "description": "Requests to send a 2-step verification password recovery code to an email address that was previously set up. Works only when the current authorization state is authorizationStateWaitPassword",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "checkAuthenticationPasswordRecoveryCode",
            "description": "Checks whether a 2-step verification password recovery code sent to an email address is valid. Works only when the current authorization state is authorizationStateWaitPassword",
            "type": "Ok",
            "annotations": [
                {
                    "name": "recovery_code",
                    "type": "string",
                    "description": "Recovery code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "recoverAuthenticationPassword",
            "description": "Recovers the 2-step verification password with a password recovery code sent to an email address that was previously set up. Works only when the current authorization state is authorizationStateWaitPassword",
            "type": "Ok",
            "annotations": [
                {
                    "name": "recovery_code",
                    "type": "string",
                    "description": "Recovery code to check",
                    "required": true
                },
                {
                    "name": "new_password",
                    "type": "string",
                    "description": "New 2-step verification password of the user; may be empty to remove the password",
                    "required": false
                },
                {
                    "name": "new_hint",
                    "type": "string",
                    "description": "New password hint; may be empty",
                    "required": false
                }
            ]
        },
        {
            "name": "sendAuthenticationFirebaseSms",
            "description": "Sends Firebase Authentication SMS to the phone number of the user. Works only when the current authorization state is authorizationStateWaitCode and the server returned code of the type authenticationCodeTypeFirebaseAndroid or authenticationCodeTypeFirebaseIos",
            "type": "Ok",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Play Integrity API or SafetyNet Attestation API token for the Android application, or secret from push notification for the iOS application",
                    "required": true
                }
            ]
        },
        {
            "name": "reportAuthenticationCodeMissing",
            "description": "Reports that authentication code wasn't delivered via SMS; for official mobile applications only. Works only when the current authorization state is authorizationStateWaitCode",
            "type": "Ok",
            "annotations": [
                {
                    "name": "mobile_network_code",
                    "type": "string",
                    "description": "Current mobile network code",
                    "required": true
                }
            ]
        },
        {
            "name": "checkAuthenticationBotToken",
            "description": "Checks the authentication token of a bot; to log in as a bot. Works only when the current authorization state is authorizationStateWaitPhoneNumber. Can be used instead of setAuthenticationPhoneNumber and checkAuthenticationCode to log in",
            "type": "Ok",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "The bot token",
                    "required": true
                }
            ]
        },
        {
            "name": "logOut",
            "description": "Closes the TDLib instance after a proper logout. Requires an available network connection. All local data will be destroyed. After the logout completes, updateAuthorizationState with authorizationStateClosed will be sent",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "close",
            "description": "Closes the TDLib instance. All databases will be flushed to disk and properly closed. After the close completes, updateAuthorizationState with authorizationStateClosed will be sent. Can be called before initialization",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "destroy",
            "description": "Closes the TDLib instance, destroying all local data without a proper logout. The current user session will remain in the list of all active sessions. All local data will be destroyed.",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "confirmQrCodeAuthentication",
            "description": "Confirms QR code authentication on another device. Returns created session on success",
            "type": "Session",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "A link from a QR code. The link must be scanned by the in-app camera",
                    "required": true
                }
            ]
        },
        {
            "name": "getCurrentState",
            "description": "Returns all updates needed to restore current TDLib state, i.e. all actual updateAuthorizationState/updateUser/updateNewChat and others. This is especially useful if TDLib is run in a separate process. Can be called before initialization",
            "type": "Updates",
            "annotations": []
        },
        {
            "name": "setDatabaseEncryptionKey",
            "description": "Changes the database encryption key. Usually the encryption key is never changed and is stored in some OS keychain",
            "type": "Ok",
            "annotations": [
                {
                    "name": "new_encryption_key",
                    "type": "bytes",
                    "description": "New encryption key",
                    "required": true
                }
            ]
        },
        {
            "name": "getPasswordState",
            "description": "Returns the current state of 2-step verification",
            "type": "PasswordState",
            "annotations": []
        },
        {
            "name": "setPassword",
            "description": "Changes the 2-step verification password for the current user. If a new recovery email address is specified, then the change will not be applied until the new recovery email address is confirmed",
            "type": "PasswordState",
            "annotations": [
                {
                    "name": "old_password",
                    "type": "string",
                    "description": "Previous 2-step verification password of the user",
                    "required": true
                },
                {
                    "name": "new_password",
                    "type": "string",
                    "description": "New 2-step verification password of the user; may be empty to remove the password",
                    "required": false
                },
                {
                    "name": "new_hint",
                    "type": "string",
                    "description": "New password hint; may be empty",
                    "required": false
                },
                {
                    "name": "set_recovery_email_address",
                    "type": "Bool",
                    "description": "Pass true to change also the recovery email address",
                    "required": true
                },
                {
                    "name": "new_recovery_email_address",
                    "type": "string",
                    "description": "New recovery email address; may be empty",
                    "required": false
                }
            ]
        },
        {
            "name": "setLoginEmailAddress",
            "description": "Changes the login email address of the user. The email address can be changed only if the current user already has login email and passwordState.login_email_address_pattern is non-empty.",
            "type": "EmailAddressAuthenticationCodeInfo",
            "annotations": [
                {
                    "name": "new_login_email_address",
                    "type": "string",
                    "description": "New login email address",
                    "required": true
                }
            ]
        },
        {
            "name": "resendLoginEmailAddressCode",
            "description": "Resends the login email address verification code",
            "type": "EmailAddressAuthenticationCodeInfo",
            "annotations": []
        },
        {
            "name": "checkLoginEmailAddressCode",
            "description": "Checks the login email address authentication",
            "type": "Ok",
            "annotations": [
                {
                    "name": "code",
                    "type": "EmailAddressAuthentication",
                    "description": "Email address authentication to check",
                    "required": true
                }
            ]
        },
        {
            "name": "getRecoveryEmailAddress",
            "description": "Returns a 2-step verification recovery email address that was previously set up. This method can be used to verify a password provided by the user",
            "type": "RecoveryEmailAddress",
            "annotations": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password for the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "setRecoveryEmailAddress",
            "description": "Changes the 2-step verification recovery email address of the user. If a new recovery email address is specified, then the change will not be applied until the new recovery email address is confirmed.",
            "type": "PasswordState",
            "annotations": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                },
                {
                    "name": "new_recovery_email_address",
                    "type": "string",
                    "description": "New recovery email address",
                    "required": true
                }
            ]
        },
        {
            "name": "checkRecoveryEmailAddressCode",
            "description": "Checks the 2-step verification recovery email address verification code",
            "type": "PasswordState",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "Verification code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "resendRecoveryEmailAddressCode",
            "description": "Resends the 2-step verification recovery email address verification code",
            "type": "PasswordState",
            "annotations": []
        },
        {
            "name": "cancelRecoveryEmailAddressVerification",
            "description": "Cancels verification of the 2-step verification recovery email address",
            "type": "PasswordState",
            "annotations": []
        },
        {
            "name": "requestPasswordRecovery",
            "description": "Requests to send a 2-step verification password recovery code to an email address that was previously set up",
            "type": "EmailAddressAuthenticationCodeInfo",
            "annotations": []
        },
        {
            "name": "checkPasswordRecoveryCode",
            "description": "Checks whether a 2-step verification password recovery code sent to an email address is valid",
            "type": "Ok",
            "annotations": [
                {
                    "name": "recovery_code",
                    "type": "string",
                    "description": "Recovery code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "recoverPassword",
            "description": "Recovers the 2-step verification password using a recovery code sent to an email address that was previously set up",
            "type": "PasswordState",
            "annotations": [
                {
                    "name": "recovery_code",
                    "type": "string",
                    "description": "Recovery code to check",
                    "required": true
                },
                {
                    "name": "new_password",
                    "type": "string",
                    "description": "New 2-step verification password of the user; may be empty to remove the password",
                    "required": false
                },
                {
                    "name": "new_hint",
                    "type": "string",
                    "description": "New password hint; may be empty",
                    "required": false
                }
            ]
        },
        {
            "name": "resetPassword",
            "description": "Removes 2-step verification password without previous password and access to recovery email address. The password can't be reset immediately and the request needs to be repeated after the specified time",
            "type": "ResetPasswordResult",
            "annotations": []
        },
        {
            "name": "cancelPasswordReset",
            "description": "Cancels reset of 2-step verification password. The method can be called if passwordState.pending_reset_date > 0",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "createTemporaryPassword",
            "description": "Creates a new temporary password for processing payments",
            "type": "TemporaryPasswordState",
            "annotations": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                },
                {
                    "name": "valid_for",
                    "type": "int32",
                    "description": "Time during which the temporary password will be valid, in seconds; must be between 60 and 86400",
                    "required": true
                }
            ]
        },
        {
            "name": "getTemporaryPasswordState",
            "description": "Returns information about the current temporary password",
            "type": "TemporaryPasswordState",
            "annotations": []
        },
        {
            "name": "getMe",
            "description": "Returns the current user",
            "type": "User",
            "annotations": []
        },
        {
            "name": "getUser",
            "description": "Returns information about a user by their identifier. This is an offline request if the current user is not a bot",
            "type": "User",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getUserFullInfo",
            "description": "Returns full information about a user by their identifier",
            "type": "UserFullInfo",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getBasicGroup",
            "description": "Returns information about a basic group by its identifier. This is an offline request if the current user is not a bot",
            "type": "BasicGroup",
            "annotations": [
                {
                    "name": "basic_group_id",
                    "type": "int53",
                    "description": "Basic group identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getBasicGroupFullInfo",
            "description": "Returns full information about a basic group by its identifier",
            "type": "BasicGroupFullInfo",
            "annotations": [
                {
                    "name": "basic_group_id",
                    "type": "int53",
                    "description": "Basic group identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getSupergroup",
            "description": "Returns information about a supergroup or a channel by its identifier. This is an offline request if the current user is not a bot",
            "type": "Supergroup",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup or channel identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getSupergroupFullInfo",
            "description": "Returns full information about a supergroup or a channel by its identifier, cached for up to 1 minute",
            "type": "SupergroupFullInfo",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup or channel identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getSecretChat",
            "description": "Returns information about a secret chat by its identifier. This is an offline request",
            "type": "SecretChat",
            "annotations": [
                {
                    "name": "secret_chat_id",
                    "type": "int32",
                    "description": "Secret chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getChat",
            "description": "Returns information about a chat by its identifier; this is an offline request if the current user is not a bot",
            "type": "Chat",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessage",
            "description": "Returns information about a message",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message to get",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageLocally",
            "description": "Returns information about a message, if it is available without sending network request. This is an offline request",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message to get",
                    "required": true
                }
            ]
        },
        {
            "name": "getRepliedMessage",
            "description": "Returns information about a non-bundled message that is replied by a given message. Also, returns the pinned message, the game message, the invoice message,",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the reply message",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatPinnedMessage",
            "description": "Returns information about a newest pinned message in the chat",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat the message belongs to",
                    "required": true
                }
            ]
        },
        {
            "name": "getCallbackQueryMessage",
            "description": "Returns information about a message with the callback button that originated a callback query; for bots only",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "callback_query_id",
                    "type": "int64",
                    "description": "Identifier of the callback query",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessages",
            "description": "Returns information about messages. If a message is not found, returns null on the corresponding position of the result",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat the messages belong to",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the messages to get",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageProperties",
            "description": "Returns properties of a message; this is an offline request",
            "type": "MessageProperties",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageThread",
            "description": "Returns information about a message thread. Can be used only if messageProperties.can_get_message_thread == true",
            "type": "MessageThreadInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageReadDate",
            "description": "Returns read date of a recent outgoing message in a private chat. The method can be called if messageProperties.can_get_read_date == true",
            "type": "MessageReadDate",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageViewers",
            "description": "Returns viewers of a recent outgoing message in a basic group or a supergroup chat. For video notes and voice notes only users, opened content of the message, are returned. The method can be called if messageProperties.can_get_viewers == true",
            "type": "MessageViewers",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                }
            ]
        },
        {
            "name": "getFile",
            "description": "Returns information about a file; this is an offline request",
            "type": "File",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file to get",
                    "required": true
                }
            ]
        },
        {
            "name": "getRemoteFile",
            "description": "Returns information about a file by its remote identifier; this is an offline request. Can be used to register a URL as a file for further uploading, or sending as a message. Even the request succeeds, the file can be used only if it is still accessible to the user.",
            "type": "File",
            "annotations": [
                {
                    "name": "remote_file_id",
                    "type": "string",
                    "description": "Remote identifier of the file to get",
                    "required": true
                },
                {
                    "name": "file_type",
                    "type": "FileType",
                    "description": "File type; pass null if unknown",
                    "required": false
                }
            ]
        },
        {
            "name": "loadChats",
            "description": "Loads more chats from a chat list. The loaded chats and their positions in the chat list will be sent through updates. Chats are sorted by the pair (chat.position.order, chat.id) in descending order. Returns a 404 error if all chats have been loaded",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list in which to load chats; pass null to load chats from the main chat list",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be loaded. For optimal performance, the number of loaded chats is chosen by TDLib and can be smaller than the specified limit, even if the end of the list is not reached",
                    "required": true
                }
            ]
        },
        {
            "name": "getChats",
            "description": "Returns an ordered list of chats from the beginning of a chat list. For informational purposes only. Use loadChats and updates processing instead to maintain chat lists in a consistent state",
            "type": "Chats",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list in which to return chats; pass null to get chats from the main chat list",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "searchPublicChat",
            "description": "Searches a public chat by its username. Currently, only private chats, supergroups and channels can be public. Returns the chat if found; otherwise, an error is returned",
            "type": "Chat",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username to be resolved",
                    "required": true
                }
            ]
        },
        {
            "name": "searchPublicChats",
            "description": "Searches public chats by looking for specified query in their username and title. Currently, only private chats, supergroups and channels can be public. Returns a meaningful number of results.",
            "type": "Chats",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                }
            ]
        },
        {
            "name": "searchChats",
            "description": "Searches for the specified query in the title and username of already known chats; this is an offline request. Returns chats in the order seen in the main chat list",
            "type": "Chats",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for. If the query is empty, returns up to 50 recently found chats",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "searchChatsOnServer",
            "description": "Searches for the specified query in the title and username of already known chats via request to the server. Returns chats in the order seen in the main chat list",
            "type": "Chats",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "searchChatsNearby",
            "description": "Returns a list of users and location-based supergroups nearby. The list of users nearby will be updated for 60 seconds after the request by the updates updateUsersNearby.",
            "type": "ChatsNearby",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "Current user location",
                    "required": true
                }
            ]
        },
        {
            "name": "getRecommendedChats",
            "description": "Returns a list of channel chats recommended to the current user",
            "type": "Chats",
            "annotations": []
        },
        {
            "name": "getChatSimilarChats",
            "description": "Returns a list of chats similar to the given chat",
            "type": "Chats",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the target chat; must be an identifier of a channel chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatSimilarChatCount",
            "description": "Returns approximate number of chats similar to the given chat",
            "type": "Count",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the target chat; must be an identifier of a channel chat",
                    "required": true
                },
                {
                    "name": "return_local",
                    "type": "Bool",
                    "description": "Pass true to get the number of chats without sending network requests, or -1 if the number of chats is unknown locally",
                    "required": true
                }
            ]
        },
        {
            "name": "openChatSimilarChat",
            "description": "Informs TDLib that a chat was opened from the list of similar chats. The method is independent of openChat and closeChat methods",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the original chat, which similar chats were requested",
                    "required": true
                },
                {
                    "name": "opened_chat_id",
                    "type": "int53",
                    "description": "Identifier of the opened chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getTopChats",
            "description": "Returns a list of frequently used chats",
            "type": "Chats",
            "annotations": [
                {
                    "name": "category",
                    "type": "TopChatCategory",
                    "description": "Category of chats to be returned",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned; up to 30",
                    "required": true
                }
            ]
        },
        {
            "name": "removeTopChat",
            "description": "Removes a chat from the list of frequently used chats. Supported only if the chat info database is enabled",
            "type": "Ok",
            "annotations": [
                {
                    "name": "category",
                    "type": "TopChatCategory",
                    "description": "Category of frequently used chats",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "searchRecentlyFoundChats",
            "description": "Searches for the specified query in the title and username of up to 50 recently found chats; this is an offline request",
            "type": "Chats",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "addRecentlyFoundChat",
            "description": "Adds a chat to the list of recently found chats. The chat is added to the beginning of the list. If the chat is already in the list, it will be removed from the list first",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to add",
                    "required": true
                }
            ]
        },
        {
            "name": "removeRecentlyFoundChat",
            "description": "Removes a chat from the list of recently found chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to be removed",
                    "required": true
                }
            ]
        },
        {
            "name": "clearRecentlyFoundChats",
            "description": "Clears the list of recently found chats",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getRecentlyOpenedChats",
            "description": "Returns recently opened chats; this is an offline request. Returns chats in the order of last opening",
            "type": "Chats",
            "annotations": [
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "checkChatUsername",
            "description": "Checks whether a username can be set for a chat",
            "type": "CheckChatUsernameResult",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier; must be identifier of a supergroup chat, or a channel chat, or a private chat with self, or 0 if the chat is being created",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username to be checked",
                    "required": true
                }
            ]
        },
        {
            "name": "getCreatedPublicChats",
            "description": "Returns a list of public chats of the specified type, owned by the user",
            "type": "Chats",
            "annotations": [
                {
                    "name": "type",
                    "type": "PublicChatType",
                    "description": "Type of the public chats to return",
                    "required": true
                }
            ]
        },
        {
            "name": "checkCreatedPublicChatsLimit",
            "description": "Checks whether the maximum number of owned public chats has been reached. Returns corresponding error if the limit was reached. The limit can be increased with Telegram Premium",
            "type": "Ok",
            "annotations": [
                {
                    "name": "type",
                    "type": "PublicChatType",
                    "description": "Type of the public chats, for which to check the limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getSuitableDiscussionChats",
            "description": "Returns a list of basic group and supergroup chats, which can be used as a discussion group for a channel. Returned basic group chats must be first upgraded to supergroups before they can be set as a discussion group.",
            "type": "Chats",
            "annotations": []
        },
        {
            "name": "getInactiveSupergroupChats",
            "description": "Returns a list of recently inactive supergroups and channels. Can be used when user reaches limit on the number of joined supergroups and channels and receives CHANNELS_TOO_MUCH error. Also, the limit can be increased with Telegram Premium",
            "type": "Chats",
            "annotations": []
        },
        {
            "name": "getSuitablePersonalChats",
            "description": "Returns a list of channel chats, which can be used as a personal chat",
            "type": "Chats",
            "annotations": []
        },
        {
            "name": "loadSavedMessagesTopics",
            "description": "Loads more Saved Messages topics. The loaded topics will be sent through updateSavedMessagesTopic. Topics are sorted by their topic.order in descending order. Returns a 404 error if all topics have been loaded",
            "type": "Ok",
            "annotations": [
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of topics to be loaded. For optimal performance, the number of loaded topics is chosen by TDLib and can be smaller than the specified limit, even if the end of the list is not reached",
                    "required": true
                }
            ]
        },
        {
            "name": "getSavedMessagesTopicHistory",
            "description": "Returns messages in a Saved Messages topic. The messages are returned in reverse chronological order (i.e., in order of decreasing message_id)",
            "type": "Messages",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic which messages will be fetched",
                    "required": true
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "Identifier of the message starting from which messages must be fetched; use 0 to get results from the last message",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Specify 0 to get results from exactly the message from_message_id or a negative offset up to 99 to get additionally some newer messages",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset.",
                    "required": true
                }
            ]
        },
        {
            "name": "getSavedMessagesTopicMessageByDate",
            "description": "Returns the last message sent in a Saved Messages topic no later than the specified date",
            "type": "Message",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic which message will be returned",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) relative to which to search for messages",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteSavedMessagesTopicHistory",
            "description": "Deletes all messages in a Saved Messages topic",
            "type": "Ok",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic which messages will be deleted",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteSavedMessagesTopicMessagesByDate",
            "description": "Deletes all messages between the specified dates in a Saved Messages topic. Messages sent in the last 30 seconds will not be deleted",
            "type": "Ok",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic which messages will be deleted",
                    "required": true
                },
                {
                    "name": "min_date",
                    "type": "int32",
                    "description": "The minimum date of the messages to delete",
                    "required": true
                },
                {
                    "name": "max_date",
                    "type": "int32",
                    "description": "The maximum date of the messages to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSavedMessagesTopicIsPinned",
            "description": "Changes the pinned state of a Saved Messages topic. There can be up to getOption('pinned_saved_messages_topic_count_max') pinned topics. The limit can be increased with Telegram Premium",
            "type": "Ok",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic to pin or unpin",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "Pass true to pin the topic; pass false to unpin it",
                    "required": true
                }
            ]
        },
        {
            "name": "setPinnedSavedMessagesTopics",
            "description": "Changes the order of pinned Saved Messages topics",
            "type": "Ok",
            "annotations": [
                {
                    "name": "saved_messages_topic_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the new pinned Saved Messages topics",
                    "required": true
                }
            ]
        },
        {
            "name": "getGroupsInCommon",
            "description": "Returns a list of common group chats with a given user. Chats are sorted by their type and creation date",
            "type": "Chats",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "offset_chat_id",
                    "type": "int53",
                    "description": "Chat identifier starting from which to return chats; use 0 for the first request",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chats to be returned; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatHistory",
            "description": "Returns messages in a chat. The messages are returned in reverse chronological order (i.e., in order of decreasing message_id).",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "Identifier of the message starting from which history must be fetched; use 0 to get results from the last message",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Specify 0 to get results from exactly the message from_message_id or a negative offset up to 99 to get additionally some newer messages",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset.",
                    "required": true
                },
                {
                    "name": "only_local",
                    "type": "Bool",
                    "description": "Pass true to get only messages that are available without sending network requests",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageThreadHistory",
            "description": "Returns messages in a message thread of a message. Can be used only if messageProperties.can_get_message_thread == true. Message thread of a channel message is in the channel's linked supergroup.",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier, which thread history needs to be returned",
                    "required": true
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "Identifier of the message starting from which history must be fetched; use 0 to get results from the last message",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Specify 0 to get results from exactly the message from_message_id or a negative offset up to 99 to get additionally some newer messages",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset.",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatHistory",
            "description": "Deletes all messages in the chat. Use chat.can_be_deleted_only_for_self and chat.can_be_deleted_for_all_users fields to find whether and how the method can be applied to the chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "remove_from_chat_list",
                    "type": "Bool",
                    "description": "Pass true to remove the chat from all chat lists",
                    "required": true
                },
                {
                    "name": "revoke",
                    "type": "Bool",
                    "description": "Pass true to delete chat history for all users",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChat",
            "description": "Deletes a chat along with all messages in the corresponding chat for all chat members. For group chats this will release the usernames and remove all members.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "searchChatMessages",
            "description": "Searches for messages with given words in the chat. Returns the results in reverse chronological order, i.e. in order of decreasing message_id. Cannot be used in secret chats with a non-empty query",
            "type": "FoundChatMessages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which to search messages",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of messages to search for; pass null to search for messages from any sender. Not supported in secret chats",
                    "required": false
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "Identifier of the message starting from which history must be fetched; use 0 to get results from the last message",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Specify 0 to get results from exactly the message from_message_id or a negative offset to get the specified message and some newer messages",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than -offset.",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Additional filter for messages to search; pass null to search for all messages",
                    "required": false
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified thread will be returned; supergroups only",
                    "required": true
                },
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified Saved Messages topic will be returned; pass 0 to return all messages, or for chats other than Saved Messages",
                    "required": true
                }
            ]
        },
        {
            "name": "searchMessages",
            "description": "Searches for messages in all chats except secret chats. Returns the results in reverse chronological order (i.e., in order of decreasing (date, chat_id, message_id)).",
            "type": "FoundMessages",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "Chat list in which to search messages; pass null to search in all chats regardless of their chat list. Only Main and Archive chat lists are supported",
                    "required": false
                },
                {
                    "name": "only_in_channels",
                    "type": "Bool",
                    "description": "Pass true to search only for messages in channels",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Additional filter for messages to search; pass null to search for all messages. Filters searchMessagesFilterMention, searchMessagesFilterUnreadMention, searchMessagesFilterUnreadReaction, searchMessagesFilterFailedToSend, and searchMessagesFilterPinned are unsupported in this function",
                    "required": false
                },
                {
                    "name": "min_date",
                    "type": "int32",
                    "description": "If not 0, the minimum date of the messages to return",
                    "required": true
                },
                {
                    "name": "max_date",
                    "type": "int32",
                    "description": "If not 0, the maximum date of the messages to return",
                    "required": true
                }
            ]
        },
        {
            "name": "searchSecretMessages",
            "description": "Searches for messages in secret chats. Returns the results in reverse chronological order. For optimal performance, the number of returned messages is chosen by TDLib",
            "type": "FoundMessages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which to search. Specify 0 to search in all secret chats",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for. If empty, searchChatMessages must be used instead",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Additional filter for messages to search; pass null to search for all messages",
                    "required": false
                }
            ]
        },
        {
            "name": "searchSavedMessages",
            "description": "Searches for messages tagged by the given reaction and with the given words in the Saved Messages chat; for Telegram Premium users only.",
            "type": "FoundChatMessages",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified Saved Messages topic will be considered; pass 0 to consider all messages",
                    "required": true
                },
                {
                    "name": "tag",
                    "type": "ReactionType",
                    "description": "Tag to search for; pass null to return all suitable messages",
                    "required": false
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "Identifier of the message starting from which messages must be fetched; use 0 to get results from the last message",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Specify 0 to get results from exactly the message from_message_id or a negative offset to get the specified message and some newer messages",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than -offset.",
                    "required": true
                }
            ]
        },
        {
            "name": "searchCallMessages",
            "description": "Searches for call messages. Returns the results in reverse chronological order (i.e., in order of decreasing message_id). For optimal performance, the number of returned messages is chosen by TDLib",
            "type": "FoundMessages",
            "annotations": [
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                },
                {
                    "name": "only_missed",
                    "type": "Bool",
                    "description": "Pass true to search only for messages with missed/declined calls",
                    "required": true
                }
            ]
        },
        {
            "name": "searchOutgoingDocumentMessages",
            "description": "Searches for outgoing messages with content of the type messageDocument in all chats except secret chats. Returns the results in reverse chronological order",
            "type": "FoundMessages",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for in document file name and message caption",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "searchPublicMessagesByTag",
            "description": "Searches for public channel posts containing the given hashtag or cashtag. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit",
            "type": "FoundMessages",
            "annotations": [
                {
                    "name": "tag",
                    "type": "string",
                    "description": "Hashtag or cashtag to search for",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "searchPublicStoriesByTag",
            "description": "Searches for public stories containing the given hashtag or cashtag. For optimal performance, the number of returned stories is chosen by TDLib and can be smaller than the specified limit",
            "type": "FoundStories",
            "annotations": [
                {
                    "name": "tag",
                    "type": "string",
                    "description": "Hashtag or cashtag to search for",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stories to be returned; up to 100. For optimal performance, the number of returned stories is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "searchPublicStoriesByLocation",
            "description": "Searches for public stories by the given address location. For optimal performance, the number of returned stories is chosen by TDLib and can be smaller than the specified limit",
            "type": "FoundStories",
            "annotations": [
                {
                    "name": "address",
                    "type": "locationAddress",
                    "description": "Address of the location",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stories to be returned; up to 100. For optimal performance, the number of returned stories is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "searchPublicStoriesByVenue",
            "description": "Searches for public stories from the given venue. For optimal performance, the number of returned stories is chosen by TDLib and can be smaller than the specified limit",
            "type": "FoundStories",
            "annotations": [
                {
                    "name": "venue_provider",
                    "type": "string",
                    "description": "Provider of the venue",
                    "required": true
                },
                {
                    "name": "venue_id",
                    "type": "string",
                    "description": "Identifier of the venue in the provider database",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stories to be returned; up to 100. For optimal performance, the number of returned stories is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getSearchedForTags",
            "description": "Returns recently searched for hashtags or cashtags by their prefix",
            "type": "Hashtags",
            "annotations": [
                {
                    "name": "tag_prefix",
                    "type": "string",
                    "description": "Prefix of hashtags or cashtags to return",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of items to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "removeSearchedForTag",
            "description": "Removes a hashtag or a cashtag from the list of recently searched for hashtags or cashtags",
            "type": "Ok",
            "annotations": [
                {
                    "name": "tag",
                    "type": "string",
                    "description": "Hashtag or cashtag to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "clearSearchedForTags",
            "description": "Clears the list of recently searched for hashtags or cashtags",
            "type": "Ok",
            "annotations": [
                {
                    "name": "clear_cashtags",
                    "type": "Bool",
                    "description": "Pass true to clear the list of recently searched for cashtags; otherwise, the list of recently searched for hashtags will be cleared",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteAllCallMessages",
            "description": "Deletes all call messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "revoke",
                    "type": "Bool",
                    "description": "Pass true to delete the messages for all users",
                    "required": true
                }
            ]
        },
        {
            "name": "searchChatRecentLocationMessages",
            "description": "Returns information about the recent locations of chat members that were sent to the chat. Returns up to 1 location message per user",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatMessageByDate",
            "description": "Returns the last message sent in a chat no later than the specified date",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) relative to which to search for messages",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatSparseMessagePositions",
            "description": "Returns sparse positions of messages of the specified type in the chat to be used for shared media scroll implementation. Returns the results in reverse chronological order (i.e., in order of decreasing message_id).",
            "type": "MessagePositions",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which to return information about message positions",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Filter for message content. Filters searchMessagesFilterEmpty, searchMessagesFilterMention, searchMessagesFilterUnreadMention, and searchMessagesFilterUnreadReaction are unsupported in this function",
                    "required": true
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "The message identifier from which to return information about message positions",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The expected number of message positions to be returned; 50-2000. A smaller number of positions can be returned, if there are not enough appropriate messages",
                    "required": true
                },
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified Saved Messages topic will be considered; pass 0 to consider all messages, or for chats other than Saved Messages",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatMessageCalendar",
            "description": "Returns information about the next messages of the specified type in the chat split by days. Returns the results in reverse chronological order. Can return partial result for the last returned day. Behavior of this method depends on the value of the option 'utc_time_offset'",
            "type": "MessageCalendar",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which to return information about messages",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Filter for message content. Filters searchMessagesFilterEmpty, searchMessagesFilterMention, searchMessagesFilterUnreadMention, and searchMessagesFilterUnreadReaction are unsupported in this function",
                    "required": true
                },
                {
                    "name": "from_message_id",
                    "type": "int53",
                    "description": "The message identifier from which to return information about messages; use 0 to get results from the last message",
                    "required": true
                },
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "If not0, only messages in the specified Saved Messages topic will be considered; pass 0 to consider all messages, or for chats other than Saved Messages",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatMessageCount",
            "description": "Returns approximate number of messages of the specified type in the chat",
            "type": "Count",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which to count messages",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Filter for message content; searchMessagesFilterEmpty is unsupported in this function",
                    "required": true
                },
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified Saved Messages topic will be counted; pass 0 to count all messages, or for chats other than Saved Messages",
                    "required": true
                },
                {
                    "name": "return_local",
                    "type": "Bool",
                    "description": "Pass true to get the number of messages without sending network requests, or -1 if the number of messages is unknown locally",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatMessagePosition",
            "description": "Returns approximate 1-based position of a message among messages, which can be found by the specified filter in the chat. Cannot be used in secret chats",
            "type": "Count",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which to find message position",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SearchMessagesFilter",
                    "description": "Filter for message content; searchMessagesFilterEmpty, searchMessagesFilterUnreadMention, searchMessagesFilterUnreadReaction, and searchMessagesFilterFailedToSend are unsupported in this function",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified thread will be considered; supergroups only",
                    "required": true
                },
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "If not 0, only messages in the specified Saved Messages topic will be considered; pass 0 to consider all relevant messages, or for chats other than Saved Messages",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatScheduledMessages",
            "description": "Returns all scheduled messages in a chat. The messages are returned in reverse chronological order (i.e., in order of decreasing message_id)",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatSponsoredMessages",
            "description": "Returns sponsored messages to be shown in a chat; for channel chats only",
            "type": "SponsoredMessages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "clickChatSponsoredMessage",
            "description": "Informs TDLib that the user opened the sponsored chat via the button, the name, the photo, or a mention in the sponsored message",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the sponsored message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the sponsored message",
                    "required": true
                }
            ]
        },
        {
            "name": "reportChatSponsoredMessage",
            "description": "Reports a sponsored message to Telegram moderators",
            "type": "ReportChatSponsoredMessageResult",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the sponsored message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the sponsored message",
                    "required": true
                },
                {
                    "name": "option_id",
                    "type": "bytes",
                    "description": "Option identifier chosen by the user; leave empty for the initial request",
                    "required": true
                }
            ]
        },
        {
            "name": "removeNotification",
            "description": "Removes an active notification from notification list. Needs to be called only if the notification is removed by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "notification_group_id",
                    "type": "int32",
                    "description": "Identifier of notification group to which the notification belongs",
                    "required": true
                },
                {
                    "name": "notification_id",
                    "type": "int32",
                    "description": "Identifier of removed notification",
                    "required": true
                }
            ]
        },
        {
            "name": "removeNotificationGroup",
            "description": "Removes a group of active notifications. Needs to be called only if the notification group is removed by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "notification_group_id",
                    "type": "int32",
                    "description": "Notification group identifier",
                    "required": true
                },
                {
                    "name": "max_notification_id",
                    "type": "int32",
                    "description": "The maximum identifier of removed notifications",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageLink",
            "description": "Returns an HTTPS link to a message in a chat. Available only if messageProperties.can_get_link, or if messageProperties.can_get_media_timestamp_links and a media timestamp link is generated. This is an offline request",
            "type": "MessageLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "media_timestamp",
                    "type": "int32",
                    "description": "If not 0, timestamp from which the video/audio/video note/voice note/story playing must start, in seconds. The media can be in the message content or in its link preview",
                    "required": true
                },
                {
                    "name": "for_album",
                    "type": "Bool",
                    "description": "Pass true to create a link for the whole media album",
                    "required": true
                },
                {
                    "name": "in_message_thread",
                    "type": "Bool",
                    "description": "Pass true to create a link to the message as a channel post comment, in a message thread, or a forum topic",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageEmbeddingCode",
            "description": "Returns an HTML code for embedding the message. Available only if messageProperties.can_get_embedding_code",
            "type": "Text",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "for_album",
                    "type": "Bool",
                    "description": "Pass true to return an HTML code for embedding of the whole media album",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageLinkInfo",
            "description": "Returns information about a public or private message link. Can be called for any internal link of the type internalLinkTypeMessage",
            "type": "MessageLinkInfo",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The message link",
                    "required": true
                }
            ]
        },
        {
            "name": "translateText",
            "description": "Translates a text to the given language. If the current user is a Telegram Premium user, then text formatting is preserved",
            "type": "FormattedText",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text to translate",
                    "required": true
                },
                {
                    "name": "to_language_code",
                    "type": "string",
                    "description": "Language code of the language to which the message is translated. Must be one of",
                    "required": true
                }
            ]
        },
        {
            "name": "translateMessageText",
            "description": "Extracts text or caption of the given message and translates it to the given language. If the current user is a Telegram Premium user, then text formatting is preserved",
            "type": "FormattedText",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "to_language_code",
                    "type": "string",
                    "description": "Language code of the language to which the message is translated. Must be one of",
                    "required": true
                }
            ]
        },
        {
            "name": "recognizeSpeech",
            "description": "Recognizes speech in a video note or a voice note message",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_recognize_speech to check whether the message is suitable",
                    "required": true
                }
            ]
        },
        {
            "name": "rateSpeechRecognition",
            "description": "Rates recognized speech in a video note or a voice note message",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "is_good",
                    "type": "Bool",
                    "description": "Pass true if the speech recognition is good",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatAvailableMessageSenders",
            "description": "Returns the list of message sender identifiers, which can be used to send messages in a chat",
            "type": "ChatMessageSenders",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatMessageSender",
            "description": "Selects a message sender to send messages in a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_sender_id",
                    "type": "MessageSender",
                    "description": "New message sender for the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "sendMessage",
            "description": "Sends a message. Returns the sent message",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Target chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the message will be sent",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message or story to be replied; pass null if none",
                    "required": false
                },
                {
                    "name": "options",
                    "type": "messageSendOptions",
                    "description": "Options to be used to send the message; pass null to use default options",
                    "required": false
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "Markup for replying to the message; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent",
                    "required": true
                }
            ]
        },
        {
            "name": "sendMessageAlbum",
            "description": "Sends 2-10 messages grouped together into an album. Currently, only audio, document, photo and video messages can be grouped into an album.",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Target chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the messages will be sent",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message or story to be replied; pass null if none",
                    "required": false
                },
                {
                    "name": "options",
                    "type": "messageSendOptions",
                    "description": "Options to be used to send the messages; pass null to use default options",
                    "required": false
                },
                {
                    "name": "input_message_contents",
                    "type": "vector<InputMessageContent>",
                    "description": "Contents of messages to be sent. At most 10 messages can be added to an album. All messages must have the same value of show_caption_above_media",
                    "required": true
                }
            ]
        },
        {
            "name": "sendBotStartMessage",
            "description": "Invites a bot to a chat (if it is not yet a member) and sends it the /start command; requires can_invite_users member right. Bots can't be invited to a private chat other than the chat with the bot.",
            "type": "Message",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the bot",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the target chat",
                    "required": true
                },
                {
                    "name": "parameter",
                    "type": "string",
                    "description": "A hidden parameter sent to the bot for deep linking purposes (https://core.telegram.org/bots#deep-linking)",
                    "required": true
                }
            ]
        },
        {
            "name": "sendInlineQueryResultMessage",
            "description": "Sends the result of an inline query as a message. Returns the sent message. Always clears a chat draft message",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Target chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the message will be sent",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message or story to be replied; pass null if none",
                    "required": false
                },
                {
                    "name": "options",
                    "type": "messageSendOptions",
                    "description": "Options to be used to send the message; pass null to use default options",
                    "required": false
                },
                {
                    "name": "query_id",
                    "type": "int64",
                    "description": "Identifier of the inline query",
                    "required": true
                },
                {
                    "name": "result_id",
                    "type": "string",
                    "description": "Identifier of the inline query result",
                    "required": true
                },
                {
                    "name": "hide_via_bot",
                    "type": "Bool",
                    "description": "Pass true to hide the bot, via which the message is sent. Can be used only for bots getOption('animation_search_bot_username'), getOption('photo_search_bot_username'), and getOption('venue_search_bot_username')",
                    "required": true
                }
            ]
        },
        {
            "name": "forwardMessages",
            "description": "Forwards previously sent messages. Returns the forwarded messages in the same order as the message identifiers passed in message_ids. If a message can't be forwarded, null will be returned instead of the message",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which to forward messages",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the message will be sent; for forum threads only",
                    "required": true
                },
                {
                    "name": "from_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat from which to forward messages",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the messages to forward. Message identifiers must be in a strictly increasing order. At most 100 messages can be forwarded simultaneously. A message can be forwarded only if messageProperties.can_be_forwarded",
                    "required": true
                },
                {
                    "name": "options",
                    "type": "messageSendOptions",
                    "description": "Options to be used to send the messages; pass null to use default options",
                    "required": false
                },
                {
                    "name": "send_copy",
                    "type": "Bool",
                    "description": "Pass true to copy content of the messages without reference to the original sender. Always true if the messages are forwarded to a secret chat or are local",
                    "required": true
                },
                {
                    "name": "remove_caption",
                    "type": "Bool",
                    "description": "Pass true to remove media captions of message copies. Ignored if send_copy is false",
                    "required": true
                }
            ]
        },
        {
            "name": "sendQuickReplyShortcutMessages",
            "description": "Sends messages from a quick reply shortcut. Requires Telegram Business subscription",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which to send messages. The chat must be a private chat with a regular user",
                    "required": true
                },
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique identifier of the quick reply shortcut",
                    "required": true
                },
                {
                    "name": "sending_id",
                    "type": "int32",
                    "description": "Non-persistent identifier, which will be returned back in messageSendingStatePending object and can be used to match sent messages and corresponding updateNewMessage updates",
                    "required": true
                }
            ]
        },
        {
            "name": "resendMessages",
            "description": "Resends messages which failed to send. Can be called only for messages for which messageSendingStateFailed.can_retry is true and after specified in messageSendingStateFailed.retry_after time passed.",
            "type": "Messages",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to send messages",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the messages to resend. Message identifiers must be in a strictly increasing order",
                    "required": true
                },
                {
                    "name": "quote",
                    "type": "inputTextQuote",
                    "description": "New manually chosen quote from the message to be replied; pass null if none. Ignored if more than one message is re-sent, or if messageSendingStateFailed.need_another_reply_quote == false",
                    "required": false
                }
            ]
        },
        {
            "name": "addLocalMessage",
            "description": "Adds a local message to a chat. The message is persistent across application restarts only if the message database is used. Returns the added message",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Target chat",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of the message",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message or story to be replied; pass null if none",
                    "required": false
                },
                {
                    "name": "disable_notification",
                    "type": "Bool",
                    "description": "Pass true to disable notification for the message",
                    "required": true
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be added",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteMessages",
            "description": "Deletes messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the messages to be deleted. Use messageProperties.can_be_deleted_only_for_self and messageProperties.can_be_deleted_for_all_users to get suitable messages",
                    "required": true
                },
                {
                    "name": "revoke",
                    "type": "Bool",
                    "description": "Pass true to delete messages for all chat members. Always true for supergroups, channels and secret chats",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatMessagesBySender",
            "description": "Deletes all messages sent by the specified message sender in a chat. Supported only for supergroups; requires can_delete_messages administrator privileges",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of messages to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatMessagesByDate",
            "description": "Deletes all messages between the specified dates in a chat. Supported only for private chats and basic groups. Messages sent in the last 30 seconds will not be deleted",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "min_date",
                    "type": "int32",
                    "description": "The minimum date of the messages to delete",
                    "required": true
                },
                {
                    "name": "max_date",
                    "type": "int32",
                    "description": "The maximum date of the messages to delete",
                    "required": true
                },
                {
                    "name": "revoke",
                    "type": "Bool",
                    "description": "Pass true to delete chat messages for all users; private chats only",
                    "required": true
                }
            ]
        },
        {
            "name": "editMessageText",
            "description": "Edits the text of a message (or a text of a game message). Returns the edited message after the edit is completed on the server side",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_be_edited to check whether the message can be edited",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New text content of the message. Must be of type inputMessageText",
                    "required": true
                }
            ]
        },
        {
            "name": "editMessageLiveLocation",
            "description": "Edits the message content of a live location. Messages can be edited for a limited period of time specified in the live location.",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_be_edited to check whether the message can be edited",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "location",
                    "type": "location",
                    "description": "New location content of the message; pass null to stop sharing the live location",
                    "required": false
                },
                {
                    "name": "live_period",
                    "type": "int32",
                    "description": "New time relative to the message send date, for which the location can be updated, in seconds. If 0x7FFFFFFF specified, then the location can be updated forever.",
                    "required": true
                },
                {
                    "name": "heading",
                    "type": "int32",
                    "description": "The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown",
                    "required": true
                },
                {
                    "name": "proximity_alert_radius",
                    "type": "int32",
                    "description": "The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled",
                    "required": true
                }
            ]
        },
        {
            "name": "editMessageMedia",
            "description": "Edits the content of a message with an animation, an audio, a document, a photo or a video, including message caption. If only the caption needs to be edited, use editMessageCaption instead.",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_be_edited to check whether the message can be edited",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New content of the message. Must be one of the following types: inputMessageAnimation, inputMessageAudio, inputMessageDocument, inputMessagePhoto or inputMessageVideo",
                    "required": true
                }
            ]
        },
        {
            "name": "editMessageCaption",
            "description": "Edits the message content caption. Returns the edited message after the edit is completed on the server side",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_be_edited to check whether the message can be edited",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "New message content caption; 0-getOption('message_caption_length_max') characters; pass null to remove caption",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "Pass true to show the caption above the media; otherwise, the caption will be shown below the media. Can be true only for animation, photo, and video messages",
                    "required": true
                }
            ]
        },
        {
            "name": "editMessageReplyMarkup",
            "description": "Edits the message reply markup; for bots only. Returns the edited message after the edit is completed on the server side",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_be_edited to check whether the message can be edited",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                }
            ]
        },
        {
            "name": "editInlineMessageText",
            "description": "Edits the text of an inline text or game message sent via a bot; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New text content of the message. Must be of type inputMessageText",
                    "required": true
                }
            ]
        },
        {
            "name": "editInlineMessageLiveLocation",
            "description": "Edits the content of a live location in an inline message sent via a bot; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                },
                {
                    "name": "location",
                    "type": "location",
                    "description": "New location content of the message; pass null to stop sharing the live location",
                    "required": false
                },
                {
                    "name": "live_period",
                    "type": "int32",
                    "description": "New time relative to the message send date, for which the location can be updated, in seconds. If 0x7FFFFFFF specified, then the location can be updated forever.",
                    "required": true
                },
                {
                    "name": "heading",
                    "type": "int32",
                    "description": "The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown",
                    "required": true
                },
                {
                    "name": "proximity_alert_radius",
                    "type": "int32",
                    "description": "The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled",
                    "required": true
                }
            ]
        },
        {
            "name": "editInlineMessageMedia",
            "description": "Edits the content of a message with an animation, an audio, a document, a photo or a video in an inline message sent via a bot; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New content of the message. Must be one of the following types: inputMessageAnimation, inputMessageAudio, inputMessageDocument, inputMessagePhoto or inputMessageVideo",
                    "required": true
                }
            ]
        },
        {
            "name": "editInlineMessageCaption",
            "description": "Edits the caption of an inline message sent via a bot; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "New message content caption; pass null to remove caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "Pass true to show the caption above the media; otherwise, the caption will be shown below the media. Can be true only for animation, photo, and video messages",
                    "required": true
                }
            ]
        },
        {
            "name": "editInlineMessageReplyMarkup",
            "description": "Edits the reply markup of an inline message sent via a bot; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                }
            ]
        },
        {
            "name": "editMessageSchedulingState",
            "description": "Edits the time when a scheduled message will be sent. Scheduling state of all messages in the same album or forwarded together with the message will be also changed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_edit_scheduling_state to check whether the message is suitable",
                    "required": true
                },
                {
                    "name": "scheduling_state",
                    "type": "MessageSchedulingState",
                    "description": "The new message scheduling state; pass null to send the message immediately",
                    "required": false
                }
            ]
        },
        {
            "name": "setMessageFactCheck",
            "description": "Changes the fact-check of a message. Can be only used if messageProperties.can_set_fact_check == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The channel chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "New text of the fact-check; 0-getOption('fact_check_length_max') characters; pass null to remove it. Only Bold, Italic, and TextUrl entities with https://t.me/ links are supported",
                    "required": false
                }
            ]
        },
        {
            "name": "sendBusinessMessage",
            "description": "Sends a message on behalf of a business account; for bots only. Returns the message after it was sent",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which to send the request",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Target chat",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message to be replied; pass null if none",
                    "required": false
                },
                {
                    "name": "disable_notification",
                    "type": "Bool",
                    "description": "Pass true to disable notification for the message",
                    "required": true
                },
                {
                    "name": "protect_content",
                    "type": "Bool",
                    "description": "Pass true if the content of the message must be protected from forwarding and saving",
                    "required": true
                },
                {
                    "name": "effect_id",
                    "type": "int64",
                    "description": "Identifier of the effect to apply to the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "Markup for replying to the message; pass null if none",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent",
                    "required": true
                }
            ]
        },
        {
            "name": "sendBusinessMessageAlbum",
            "description": "Sends 2-10 messages grouped together into an album on behalf of a business account; for bots only. Currently, only audio, document, photo and video messages can be grouped into an album.",
            "type": "BusinessMessages",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which to send the request",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Target chat",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message to be replied; pass null if none",
                    "required": false
                },
                {
                    "name": "disable_notification",
                    "type": "Bool",
                    "description": "Pass true to disable notification for the message",
                    "required": true
                },
                {
                    "name": "protect_content",
                    "type": "Bool",
                    "description": "Pass true if the content of the message must be protected from forwarding and saving",
                    "required": true
                },
                {
                    "name": "effect_id",
                    "type": "int64",
                    "description": "Identifier of the effect to apply to the message",
                    "required": true
                },
                {
                    "name": "input_message_contents",
                    "type": "vector<InputMessageContent>",
                    "description": "Contents of messages to be sent. At most 10 messages can be added to an album. All messages must have the same value of show_caption_above_media",
                    "required": true
                }
            ]
        },
        {
            "name": "editBusinessMessageText",
            "description": "Edits the text of a text or game message sent on behalf of a business account; for bots only",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New text content of the message. Must be of type inputMessageText",
                    "required": true
                }
            ]
        },
        {
            "name": "editBusinessMessageLiveLocation",
            "description": "Edits the content of a live location in a message sent on behalf of a business account; for bots only",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                },
                {
                    "name": "location",
                    "type": "location",
                    "description": "New location content of the message; pass null to stop sharing the live location",
                    "required": false
                },
                {
                    "name": "live_period",
                    "type": "int32",
                    "description": "New time relative to the message send date, for which the location can be updated, in seconds. If 0x7FFFFFFF specified, then the location can be updated forever.",
                    "required": true
                },
                {
                    "name": "heading",
                    "type": "int32",
                    "description": "The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown",
                    "required": true
                },
                {
                    "name": "proximity_alert_radius",
                    "type": "int32",
                    "description": "The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled",
                    "required": true
                }
            ]
        },
        {
            "name": "editBusinessMessageMedia",
            "description": "Edits the content of a message with an animation, an audio, a document, a photo or a video in a message sent on behalf of a business account; for bots only",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New content of the message. Must be one of the following types: inputMessageAnimation, inputMessageAudio, inputMessageDocument, inputMessagePhoto or inputMessageVideo",
                    "required": true
                }
            ]
        },
        {
            "name": "editBusinessMessageCaption",
            "description": "Edits the caption of a message sent on behalf of a business account; for bots only",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "New message content caption; pass null to remove caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "Pass true to show the caption above the media; otherwise, the caption will be shown below the media. Can be true only for animation, photo, and video messages",
                    "required": true
                }
            ]
        },
        {
            "name": "editBusinessMessageReplyMarkup",
            "description": "Edits the reply markup of a message sent on behalf of a business account; for bots only",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                }
            ]
        },
        {
            "name": "stopBusinessPoll",
            "description": "Stops a poll sent on behalf of a business account; for bots only",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message with the poll was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message containing the poll",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none",
                    "required": false
                }
            ]
        },
        {
            "name": "setBusinessMessageIsPinned",
            "description": "Pins or unpins a message sent on behalf of a business account; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which the message was sent",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat the message belongs to",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "Pass true to pin the message, pass false to unpin it",
                    "required": true
                }
            ]
        },
        {
            "name": "checkQuickReplyShortcutName",
            "description": "Checks validness of a name for a quick reply shortcut. Can be called synchronously",
            "type": "Ok",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the shortcut; 1-32 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "loadQuickReplyShortcuts",
            "description": "Loads quick reply shortcuts created by the current user. The loaded topics will be sent through updateQuickReplyShortcuts",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "setQuickReplyShortcutName",
            "description": "Changes name of a quick reply shortcut",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique identifier of the quick reply shortcut",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "New name for the shortcut. Use checkQuickReplyShortcutName to check its validness",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteQuickReplyShortcut",
            "description": "Deletes a quick reply shortcut",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique identifier of the quick reply shortcut",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderQuickReplyShortcuts",
            "description": "Changes the order of quick reply shortcuts",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shortcut_ids",
                    "type": "vector<int32>",
                    "description": "The new order of quick reply shortcuts",
                    "required": true
                }
            ]
        },
        {
            "name": "loadQuickReplyShortcutMessages",
            "description": "Loads quick reply messages that can be sent by a given quick reply shortcut. The loaded messages will be sent through updateQuickReplyShortcutMessages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique identifier of the quick reply shortcut",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteQuickReplyShortcutMessages",
            "description": "Deletes specified quick reply messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique identifier of the quick reply shortcut to which the messages belong",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Unique identifiers of the messages",
                    "required": true
                }
            ]
        },
        {
            "name": "addQuickReplyShortcutMessage",
            "description": "Adds a message to a quick reply shortcut. If shortcut doesn't exist and there are less than getOption('quick_reply_shortcut_count_max') shortcuts, then a new shortcut is created.",
            "type": "QuickReplyMessage",
            "annotations": [
                {
                    "name": "shortcut_name",
                    "type": "string",
                    "description": "Name of the target shortcut",
                    "required": true
                },
                {
                    "name": "reply_to_message_id",
                    "type": "int53",
                    "description": "Identifier of a quick reply message in the same shortcut to be replied; pass 0 if none",
                    "required": true
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be added; inputMessagePoll, inputMessageForwarded and inputMessageLocation with live_period aren't supported",
                    "required": true
                }
            ]
        },
        {
            "name": "addQuickReplyShortcutInlineQueryResultMessage",
            "description": "Adds a message to a quick reply shortcut via inline bot. If shortcut doesn't exist and there are less than getOption('quick_reply_shortcut_count_max') shortcuts, then a new shortcut is created.",
            "type": "QuickReplyMessage",
            "annotations": [
                {
                    "name": "shortcut_name",
                    "type": "string",
                    "description": "Name of the target shortcut",
                    "required": true
                },
                {
                    "name": "reply_to_message_id",
                    "type": "int53",
                    "description": "Identifier of a quick reply message in the same shortcut to be replied; pass 0 if none",
                    "required": true
                },
                {
                    "name": "query_id",
                    "type": "int64",
                    "description": "Identifier of the inline query",
                    "required": true
                },
                {
                    "name": "result_id",
                    "type": "string",
                    "description": "Identifier of the inline query result",
                    "required": true
                },
                {
                    "name": "hide_via_bot",
                    "type": "Bool",
                    "description": "Pass true to hide the bot, via which the message is sent. Can be used only for bots getOption('animation_search_bot_username'), getOption('photo_search_bot_username'), and getOption('venue_search_bot_username')",
                    "required": true
                }
            ]
        },
        {
            "name": "addQuickReplyShortcutMessageAlbum",
            "description": "Adds 2-10 messages grouped together into an album to a quick reply shortcut. Currently, only audio, document, photo and video messages can be grouped into an album.",
            "type": "QuickReplyMessages",
            "annotations": [
                {
                    "name": "shortcut_name",
                    "type": "string",
                    "description": "Name of the target shortcut",
                    "required": true
                },
                {
                    "name": "reply_to_message_id",
                    "type": "int53",
                    "description": "Identifier of a quick reply message in the same shortcut to be replied; pass 0 if none",
                    "required": true
                },
                {
                    "name": "input_message_contents",
                    "type": "vector<InputMessageContent>",
                    "description": "Contents of messages to be sent. At most 10 messages can be added to an album. All messages must have the same value of show_caption_above_media",
                    "required": true
                }
            ]
        },
        {
            "name": "readdQuickReplyShortcutMessages",
            "description": "Readds quick reply messages which failed to add. Can be called only for messages for which messageSendingStateFailed.can_retry is true and after specified in messageSendingStateFailed.retry_after time passed.",
            "type": "QuickReplyMessages",
            "annotations": [
                {
                    "name": "shortcut_name",
                    "type": "string",
                    "description": "Name of the target shortcut",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the quick reply messages to readd. Message identifiers must be in a strictly increasing order",
                    "required": true
                }
            ]
        },
        {
            "name": "editQuickReplyMessage",
            "description": "Asynchronously edits the text, media or caption of a quick reply message. Use quickReplyMessage.can_be_edited to check whether a message can be edited.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique identifier of the quick reply shortcut with the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "New content of the message. Must be one of the following types: inputMessageText, inputMessageAnimation, inputMessageAudio, inputMessageDocument, inputMessagePhoto or inputMessageVideo",
                    "required": true
                }
            ]
        },
        {
            "name": "getForumTopicDefaultIcons",
            "description": "Returns the list of custom emoji, which can be used as forum topic icon by all users",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "createForumTopic",
            "description": "Creates a topic in a forum supergroup chat; requires can_manage_topics administrator or can_create_topics member right in the supergroup",
            "type": "ForumTopicInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the topic; 1-128 characters",
                    "required": true
                },
                {
                    "name": "icon",
                    "type": "forumTopicIcon",
                    "description": "Icon of the topic. Icon color must be one of 0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, or 0xFB6F5F. Telegram Premium users can use any custom emoji as topic icon, other users can use only a custom emoji returned by getForumTopicDefaultIcons",
                    "required": true
                }
            ]
        },
        {
            "name": "editForumTopic",
            "description": "Edits title and icon of a topic in a forum supergroup chat; requires can_manage_topics right in the supergroup unless the user is creator of the topic",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "New name of the topic; 0-128 characters. If empty, the previous topic name is kept",
                    "required": true
                },
                {
                    "name": "edit_icon_custom_emoji",
                    "type": "Bool",
                    "description": "Pass true to edit the icon of the topic. Icon of the General topic can't be edited",
                    "required": true
                },
                {
                    "name": "icon_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of the new custom emoji for topic icon; pass 0 to remove the custom emoji. Ignored if edit_icon_custom_emoji is false. Telegram Premium users can use any custom emoji, other users can use only a custom emoji returned by getForumTopicDefaultIcons",
                    "required": true
                }
            ]
        },
        {
            "name": "getForumTopic",
            "description": "Returns information about a forum topic",
            "type": "ForumTopic",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                }
            ]
        },
        {
            "name": "getForumTopicLink",
            "description": "Returns an HTTPS link to a topic in a forum chat. This is an offline request",
            "type": "MessageLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                }
            ]
        },
        {
            "name": "getForumTopics",
            "description": "Returns found forum topics in a forum chat. This is a temporary method for getting information about topic list from the server",
            "type": "ForumTopics",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the forum chat",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for in the forum topic's name",
                    "required": true
                },
                {
                    "name": "offset_date",
                    "type": "int32",
                    "description": "The date starting from which the results need to be fetched. Use 0 or any date in the future to get results from the last topic",
                    "required": true
                },
                {
                    "name": "offset_message_id",
                    "type": "int53",
                    "description": "The message identifier of the last message in the last found topic, or 0 for the first request",
                    "required": true
                },
                {
                    "name": "offset_message_thread_id",
                    "type": "int53",
                    "description": "The message thread identifier of the last found topic, or 0 for the first request",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of forum topics to be returned; up to 100. For optimal performance, the number of returned forum topics is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "setForumTopicNotificationSettings",
            "description": "Changes the notification settings of a forum topic",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "chatNotificationSettings",
                    "description": "New notification settings for the forum topic. If the topic is muted for more than 366 days, it is considered to be muted forever",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleForumTopicIsClosed",
            "description": "Toggles whether a topic is closed in a forum supergroup chat; requires can_manage_topics right in the supergroup unless the user is creator of the topic",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                },
                {
                    "name": "is_closed",
                    "type": "Bool",
                    "description": "Pass true to close the topic; pass false to reopen it",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGeneralForumTopicIsHidden",
            "description": "Toggles whether a General topic is hidden in a forum supergroup chat; requires can_manage_topics right in the supergroup",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "is_hidden",
                    "type": "Bool",
                    "description": "Pass true to hide and close the General topic; pass false to unhide it",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleForumTopicIsPinned",
            "description": "Changes the pinned state of a forum topic; requires can_manage_topics right in the supergroup. There can be up to getOption('pinned_forum_topic_count_max') pinned forum topics",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "Pass true to pin the topic; pass false to unpin it",
                    "required": true
                }
            ]
        },
        {
            "name": "setPinnedForumTopics",
            "description": "Changes the order of pinned forum topics; requires can_manage_topics right in the supergroup",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_ids",
                    "type": "vector<int53>",
                    "description": "The new list of pinned forum topics",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteForumTopic",
            "description": "Deletes all messages in a forum topic; requires can_delete_messages administrator right in the supergroup unless the user is creator of the topic, the topic has no messages from other users and has at most 11 messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the forum topic",
                    "required": true
                }
            ]
        },
        {
            "name": "getEmojiReaction",
            "description": "Returns information about an emoji reaction. Returns a 404 error if the reaction is not found",
            "type": "EmojiReaction",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Text representation of the reaction",
                    "required": true
                }
            ]
        },
        {
            "name": "getCustomEmojiReactionAnimations",
            "description": "Returns TGS stickers with generic animations for custom emoji reactions",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "getMessageAvailableReactions",
            "description": "Returns reactions, which can be added to a message. The list can change after updateActiveEmojiReactions, updateChatAvailableReactions for the chat, or updateMessageInteractionInfo for the message",
            "type": "AvailableReactions",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "row_size",
                    "type": "int32",
                    "description": "Number of reaction per row, 5-25",
                    "required": true
                }
            ]
        },
        {
            "name": "clearRecentReactions",
            "description": "Clears the list of recently used reactions",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "addMessageReaction",
            "description": "Adds a reaction or a tag to a message. Use getMessageAvailableReactions to receive the list of available reactions for the message",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reaction to add. Use addPaidMessageReaction instead to add the paid reaction",
                    "required": true
                },
                {
                    "name": "is_big",
                    "type": "Bool",
                    "description": "Pass true if the reaction is added with a big animation",
                    "required": true
                },
                {
                    "name": "update_recent_reactions",
                    "type": "Bool",
                    "description": "Pass true if the reaction needs to be added to recent reactions; tags are never added to the list of recent reactions",
                    "required": true
                }
            ]
        },
        {
            "name": "removeMessageReaction",
            "description": "Removes a reaction from a message. A chosen reaction can always be removed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reaction to remove. The paid reaction can't be removed",
                    "required": true
                }
            ]
        },
        {
            "name": "addPaidMessageReaction",
            "description": "Adds the paid message reaction to a message. Use getMessageAvailableReactions to receive the list of available reactions for the message",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars to be used for the reaction; 1-getOption('paid_reaction_star_count_max')",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "Pass true to make paid reaction of the user on the message anonymous; pass false to make the user's profile visible among top reactors",
                    "required": true
                }
            ]
        },
        {
            "name": "removePendingPaidMessageReactions",
            "description": "Removes all pending paid reactions on a message. Can be called within 5 seconds after the last addPaidMessageReaction call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                }
            ]
        },
        {
            "name": "togglePaidMessageReactionIsAnonymous",
            "description": "Changes whether the paid message reaction of the user to a message is anonymous. The message must have paid reaction added by the user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "Pass true to make paid reaction of the user on the message anonymous; pass false to make the user's profile visible among top reactors",
                    "required": true
                }
            ]
        },
        {
            "name": "setMessageReactions",
            "description": "Sets reactions on a message; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "reaction_types",
                    "type": "vector<ReactionType>",
                    "description": "Types of the reaction to set",
                    "required": true
                },
                {
                    "name": "is_big",
                    "type": "Bool",
                    "description": "Pass true if the reactions are added with a big animation",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageAddedReactions",
            "description": "Returns reactions added for a message, along with their sender",
            "type": "AddedReactions",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use message.interaction_info.reactions.can_get_added_reactions to check whether added reactions can be received for the message",
                    "required": true
                },
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reactions to return; pass null to return all added reactions; reactionTypePaid isn't supported",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of reactions to be returned; must be positive and can't be greater than 100",
                    "required": true
                }
            ]
        },
        {
            "name": "setDefaultReactionType",
            "description": "Changes type of default reaction for the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "New type of the default reaction. The paid reaction can't be set as default",
                    "required": true
                }
            ]
        },
        {
            "name": "getSavedMessagesTags",
            "description": "Returns tags used in Saved Messages or a Saved Messages topic",
            "type": "SavedMessagesTags",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic which tags will be returned; pass 0 to get all Saved Messages tags",
                    "required": true
                }
            ]
        },
        {
            "name": "setSavedMessagesTagLabel",
            "description": "Changes label of a Saved Messages tag; for Telegram Premium users only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "tag",
                    "type": "ReactionType",
                    "description": "The tag which label will be changed",
                    "required": true
                },
                {
                    "name": "label",
                    "type": "string",
                    "description": "New label for the tag; 0-12 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageEffect",
            "description": "Returns information about a message effect. Returns a 404 error if the effect is not found",
            "type": "MessageEffect",
            "annotations": [
                {
                    "name": "effect_id",
                    "type": "int64",
                    "description": "Unique identifier of the effect",
                    "required": true
                }
            ]
        },
        {
            "name": "searchQuote",
            "description": "Searches for a given quote in a text. Returns found quote start position in UTF-16 code units. Returns a 404 error if the quote is not found. Can be called synchronously",
            "type": "FoundPosition",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text in which to search for the quote",
                    "required": true
                },
                {
                    "name": "quote",
                    "type": "formattedText",
                    "description": "Quote to search for",
                    "required": true
                },
                {
                    "name": "quote_position",
                    "type": "int32",
                    "description": "Approximate quote position in UTF-16 code units",
                    "required": true
                }
            ]
        },
        {
            "name": "getTextEntities",
            "description": "Returns all entities (mentions, hashtags, cashtags, bot commands, bank card numbers, URLs, and email addresses) found in the text. Can be called synchronously",
            "type": "TextEntities",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "The text in which to look for entities",
                    "required": true
                }
            ]
        },
        {
            "name": "parseTextEntities",
            "description": "Parses Bold, Italic, Underline, Strikethrough, Spoiler, CustomEmoji, BlockQuote, ExpandableBlockQuote, Code, Pre, PreCode, TextUrl",
            "type": "FormattedText",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "The text to parse",
                    "required": true
                },
                {
                    "name": "parse_mode",
                    "type": "TextParseMode",
                    "description": "Text parse mode",
                    "required": true
                }
            ]
        },
        {
            "name": "parseMarkdown",
            "description": "Parses Markdown entities in a human-friendly format, ignoring markup errors. Can be called synchronously",
            "type": "FormattedText",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "The text to parse. For example, '__italic__ ~~strikethrough~~ ||spoiler|| **bold** `code` ```pre``` __[italic__ text_url](telegram.org) __italic**bold italic__bold**'",
                    "required": true
                }
            ]
        },
        {
            "name": "getMarkdownText",
            "description": "Replaces text entities with Markdown formatting in a human-friendly format. Entities that can't be represented in Markdown unambiguously are kept as is. Can be called synchronously",
            "type": "FormattedText",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "The text",
                    "required": true
                }
            ]
        },
        {
            "name": "getCountryFlagEmoji",
            "description": "Returns an emoji for the given country. Returns an empty string on failure. Can be called synchronously",
            "type": "Text",
            "annotations": [
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code as received from getCountries",
                    "required": true
                }
            ]
        },
        {
            "name": "getFileMimeType",
            "description": "Returns the MIME type of a file, guessed by its extension. Returns an empty string on failure. Can be called synchronously",
            "type": "Text",
            "annotations": [
                {
                    "name": "file_name",
                    "type": "string",
                    "description": "The name of the file or path to the file",
                    "required": true
                }
            ]
        },
        {
            "name": "getFileExtension",
            "description": "Returns the extension of a file, guessed by its MIME type. Returns an empty string on failure. Can be called synchronously",
            "type": "Text",
            "annotations": [
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "The MIME type of the file",
                    "required": true
                }
            ]
        },
        {
            "name": "cleanFileName",
            "description": "Removes potentially dangerous characters from the name of a file. The encoding of the file name is supposed to be UTF-8. Returns an empty string on failure. Can be called synchronously",
            "type": "Text",
            "annotations": [
                {
                    "name": "file_name",
                    "type": "string",
                    "description": "File name or path to the file",
                    "required": true
                }
            ]
        },
        {
            "name": "getLanguagePackString",
            "description": "Returns a string stored in the local database from the specified localization target and language pack by its key. Returns a 404 error if the string is not found. Can be called synchronously",
            "type": "LanguagePackStringValue",
            "annotations": [
                {
                    "name": "language_pack_database_path",
                    "type": "string",
                    "description": "Path to the language pack database in which strings are stored",
                    "required": true
                },
                {
                    "name": "localization_target",
                    "type": "string",
                    "description": "Localization target to which the language pack belongs",
                    "required": true
                },
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Language pack identifier",
                    "required": true
                },
                {
                    "name": "key",
                    "type": "string",
                    "description": "Language pack key of the string to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "getJsonValue",
            "description": "Converts a JSON-serialized string to corresponding JsonValue object. Can be called synchronously",
            "type": "JsonValue",
            "annotations": [
                {
                    "name": "json",
                    "type": "string",
                    "description": "The JSON-serialized string",
                    "required": true
                }
            ]
        },
        {
            "name": "getJsonString",
            "description": "Converts a JsonValue object to corresponding JSON-serialized string. Can be called synchronously",
            "type": "Text",
            "annotations": [
                {
                    "name": "json_value",
                    "type": "JsonValue",
                    "description": "The JsonValue object",
                    "required": true
                }
            ]
        },
        {
            "name": "getThemeParametersJsonString",
            "description": "Converts a themeParameters object to corresponding JSON-serialized string. Can be called synchronously",
            "type": "Text",
            "annotations": [
                {
                    "name": "theme",
                    "type": "themeParameters",
                    "description": "Theme parameters to convert to JSON",
                    "required": true
                }
            ]
        },
        {
            "name": "setPollAnswer",
            "description": "Changes the user answer to a poll. A poll in quiz mode can be answered only once",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the poll belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message containing the poll",
                    "required": true
                },
                {
                    "name": "option_ids",
                    "type": "vector<int32>",
                    "description": "0-based identifiers of answer options, chosen by the user. User can choose more than 1 answer option only is the poll allows multiple answers",
                    "required": true
                }
            ]
        },
        {
            "name": "getPollVoters",
            "description": "Returns message senders voted for the specified option in a non-anonymous polls. For optimal performance, the number of returned users is chosen by TDLib",
            "type": "MessageSenders",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the poll belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message containing the poll",
                    "required": true
                },
                {
                    "name": "option_id",
                    "type": "int32",
                    "description": "0-based identifier of the answer option",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Number of voters to skip in the result; must be non-negative",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of voters to be returned; must be positive and can't be greater than 50. For optimal performance, the number of returned voters is chosen by TDLib and can be smaller than the specified limit, even if the end of the voter list has not been reached",
                    "required": true
                }
            ]
        },
        {
            "name": "stopPoll",
            "description": "Stops a poll",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the poll belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message containing the poll. Use messageProperties.can_be_edited to check whether the poll can be stopped",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The new message reply markup; pass null if none; for bots only",
                    "required": false
                }
            ]
        },
        {
            "name": "hideSuggestedAction",
            "description": "Hides a suggested action",
            "type": "Ok",
            "annotations": [
                {
                    "name": "action",
                    "type": "SuggestedAction",
                    "description": "Suggested action to hide",
                    "required": true
                }
            ]
        },
        {
            "name": "hideContactCloseBirthdays",
            "description": "Hides the list of contacts that have close birthdays for 24 hours",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getBusinessConnection",
            "description": "Returns information about a business connection by its identifier; for bots only",
            "type": "BusinessConnection",
            "annotations": [
                {
                    "name": "connection_id",
                    "type": "string",
                    "description": "Identifier of the business connection to return",
                    "required": true
                }
            ]
        },
        {
            "name": "getLoginUrlInfo",
            "description": "Returns information about a button of type inlineKeyboardButtonTypeLoginUrl. The method needs to be called when the user presses the button",
            "type": "LoginUrlInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message with the button",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier of the message with the button. The message must not be scheduled",
                    "required": true
                },
                {
                    "name": "button_id",
                    "type": "int53",
                    "description": "Button identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getLoginUrl",
            "description": "Returns an HTTP URL which can be used to automatically authorize the user on a website after clicking an inline button of type inlineKeyboardButtonTypeLoginUrl.",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message with the button",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier of the message with the button",
                    "required": true
                },
                {
                    "name": "button_id",
                    "type": "int53",
                    "description": "Button identifier",
                    "required": true
                },
                {
                    "name": "allow_write_access",
                    "type": "Bool",
                    "description": "Pass true to allow the bot to send messages to the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "shareUsersWithBot",
            "description": "Shares users after pressing a keyboardButtonTypeRequestUsers button with the bot",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat with the bot",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the button",
                    "required": true
                },
                {
                    "name": "button_id",
                    "type": "int32",
                    "description": "Identifier of the button",
                    "required": true
                },
                {
                    "name": "shared_user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the shared users",
                    "required": true
                },
                {
                    "name": "only_check",
                    "type": "Bool",
                    "description": "Pass true to check that the users can be shared by the button instead of actually sharing them",
                    "required": true
                }
            ]
        },
        {
            "name": "shareChatWithBot",
            "description": "Shares a chat after pressing a keyboardButtonTypeRequestChat button with the bot",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat with the bot",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the button",
                    "required": true
                },
                {
                    "name": "button_id",
                    "type": "int32",
                    "description": "Identifier of the button",
                    "required": true
                },
                {
                    "name": "shared_chat_id",
                    "type": "int53",
                    "description": "Identifier of the shared chat",
                    "required": true
                },
                {
                    "name": "only_check",
                    "type": "Bool",
                    "description": "Pass true to check that the chat can be shared by the button instead of actually sharing it. Doesn't check bot_is_member and bot_administrator_rights restrictions.",
                    "required": true
                }
            ]
        },
        {
            "name": "getInlineQueryResults",
            "description": "Sends an inline query to a bot and returns its results. Returns an error with code 502 if the bot fails to answer the query before the query timeout expires",
            "type": "InlineQueryResults",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat where the query was sent",
                    "required": true
                },
                {
                    "name": "user_location",
                    "type": "location",
                    "description": "Location of the user; pass null if unknown or the bot doesn't need user's location",
                    "required": false
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Text of the query",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return; use empty string to get the first chunk of results",
                    "required": true
                }
            ]
        },
        {
            "name": "answerInlineQuery",
            "description": "Sets the result of an inline query; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_query_id",
                    "type": "int64",
                    "description": "Identifier of the inline query",
                    "required": true
                },
                {
                    "name": "is_personal",
                    "type": "Bool",
                    "description": "Pass true if results may be cached and returned only for the user that sent the query. By default, results may be returned to any user who sends the same query",
                    "required": true
                },
                {
                    "name": "button",
                    "type": "inlineQueryResultsButton",
                    "description": "Button to be shown above inline query results; pass null if none",
                    "required": false
                },
                {
                    "name": "results",
                    "type": "vector<InputInlineQueryResult>",
                    "description": "The results of the query",
                    "required": true
                },
                {
                    "name": "cache_time",
                    "type": "int32",
                    "description": "Allowed time to cache the results of the query, in seconds",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "Offset for the next inline query; pass an empty string if there are no more results",
                    "required": true
                }
            ]
        },
        {
            "name": "getPopularWebAppBots",
            "description": "Returns popular Web App bots",
            "type": "FoundUsers",
            "annotations": [
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of bots to be returned; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "searchWebApp",
            "description": "Returns information about a Web App by its short name. Returns a 404 error if the Web App is not found",
            "type": "FoundWebApp",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "web_app_short_name",
                    "type": "string",
                    "description": "Short name of the Web App",
                    "required": true
                }
            ]
        },
        {
            "name": "getWebAppLinkUrl",
            "description": "Returns an HTTPS URL of a Web App to open after a link of the type internalLinkTypeWebApp is clicked",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which the link was clicked; pass 0 if none",
                    "required": true
                },
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "web_app_short_name",
                    "type": "string",
                    "description": "Short name of the Web App",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "Start parameter from internalLinkTypeWebApp",
                    "required": true
                },
                {
                    "name": "theme",
                    "type": "themeParameters",
                    "description": "Preferred Web App theme; pass null to use the default theme",
                    "required": false
                },
                {
                    "name": "application_name",
                    "type": "string",
                    "description": "Short name of the current application; 0-64 English letters, digits, and underscores",
                    "required": true
                },
                {
                    "name": "allow_write_access",
                    "type": "Bool",
                    "description": "Pass true if the current user allowed the bot to send them messages",
                    "required": true
                }
            ]
        },
        {
            "name": "getMainWebApp",
            "description": "Returns information needed to open the main Web App of a bot",
            "type": "MainWebApp",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which the Web App is opened; pass 0 if none",
                    "required": true
                },
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "Start parameter from internalLinkTypeMainWebApp",
                    "required": true
                },
                {
                    "name": "theme",
                    "type": "themeParameters",
                    "description": "Preferred Web App theme; pass null to use the default theme",
                    "required": false
                },
                {
                    "name": "application_name",
                    "type": "string",
                    "description": "Short name of the current application; 0-64 English letters, digits, and underscores",
                    "required": true
                }
            ]
        },
        {
            "name": "getWebAppUrl",
            "description": "Returns an HTTPS URL of a Web App to open from the side menu, a keyboardButtonTypeWebApp button, or an inlineQueryResultsButtonTypeWebApp button",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL from a keyboardButtonTypeWebApp button, inlineQueryResultsButtonTypeWebApp button, or an empty string when the bot is opened from the side menu",
                    "required": true
                },
                {
                    "name": "theme",
                    "type": "themeParameters",
                    "description": "Preferred Web App theme; pass null to use the default theme",
                    "required": false
                },
                {
                    "name": "application_name",
                    "type": "string",
                    "description": "Short name of the current application; 0-64 English letters, digits, and underscores",
                    "required": true
                }
            ]
        },
        {
            "name": "sendWebAppData",
            "description": "Sends data received from a keyboardButtonTypeWebApp Web App to a bot",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "button_text",
                    "type": "string",
                    "description": "Text of the keyboardButtonTypeWebApp button, which opened the Web App",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "The data",
                    "required": true
                }
            ]
        },
        {
            "name": "openWebApp",
            "description": "Informs TDLib that a Web App is being opened from the attachment menu, a botMenuButton button, an internalLinkTypeAttachmentMenuBot link, or an inlineKeyboardButtonTypeWebApp button.",
            "type": "WebAppInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat in which the Web App is opened. The Web App can't be opened in secret chats",
                    "required": true
                },
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the bot, providing the Web App",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL from an inlineKeyboardButtonTypeWebApp button, a botMenuButton button, an internalLinkTypeAttachmentMenuBot link, or an empty string otherwise",
                    "required": true
                },
                {
                    "name": "theme",
                    "type": "themeParameters",
                    "description": "Preferred Web App theme; pass null to use the default theme",
                    "required": false
                },
                {
                    "name": "application_name",
                    "type": "string",
                    "description": "Short name of the current application; 0-64 English letters, digits, and underscores",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the message will be sent",
                    "required": true
                },
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message or story to be replied in the message sent by the Web App; pass null if none",
                    "required": false
                }
            ]
        },
        {
            "name": "closeWebApp",
            "description": "Informs TDLib that a previously opened Web App was closed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "web_app_launch_id",
                    "type": "int64",
                    "description": "Identifier of Web App launch, received from openWebApp",
                    "required": true
                }
            ]
        },
        {
            "name": "answerWebAppQuery",
            "description": "Sets the result of interaction with a Web App and sends corresponding message on behalf of the user to the chat from which the query originated; for bots only",
            "type": "SentWebAppMessage",
            "annotations": [
                {
                    "name": "web_app_query_id",
                    "type": "string",
                    "description": "Identifier of the Web App query",
                    "required": true
                },
                {
                    "name": "result",
                    "type": "InputInlineQueryResult",
                    "description": "The result of the query",
                    "required": true
                }
            ]
        },
        {
            "name": "getCallbackQueryAnswer",
            "description": "Sends a callback query to a bot and returns an answer. Returns an error with code 502 if the bot fails to answer the query before the query timeout expires",
            "type": "CallbackQueryAnswer",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat with the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message from which the query originated. The message must not be scheduled",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "CallbackQueryPayload",
                    "description": "Query payload",
                    "required": true
                }
            ]
        },
        {
            "name": "answerCallbackQuery",
            "description": "Sets the result of a callback query; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "callback_query_id",
                    "type": "int64",
                    "description": "Identifier of the callback query",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the answer",
                    "required": true
                },
                {
                    "name": "show_alert",
                    "type": "Bool",
                    "description": "Pass true to show an alert to the user instead of a toast notification",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to be opened",
                    "required": true
                },
                {
                    "name": "cache_time",
                    "type": "int32",
                    "description": "Time during which the result of the query can be cached, in seconds",
                    "required": true
                }
            ]
        },
        {
            "name": "answerShippingQuery",
            "description": "Sets the result of a shipping query; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "shipping_query_id",
                    "type": "int64",
                    "description": "Identifier of the shipping query",
                    "required": true
                },
                {
                    "name": "shipping_options",
                    "type": "vector<shippingOption>",
                    "description": "Available shipping options",
                    "required": true
                },
                {
                    "name": "error_message",
                    "type": "string",
                    "description": "An error message, empty on success",
                    "required": true
                }
            ]
        },
        {
            "name": "answerPreCheckoutQuery",
            "description": "Sets the result of a pre-checkout query; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "pre_checkout_query_id",
                    "type": "int64",
                    "description": "Identifier of the pre-checkout query",
                    "required": true
                },
                {
                    "name": "error_message",
                    "type": "string",
                    "description": "An error message, empty on success",
                    "required": true
                }
            ]
        },
        {
            "name": "setGameScore",
            "description": "Updates the game score of the specified user in the game; for bots only",
            "type": "Message",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat to which the message with the game belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "edit_message",
                    "type": "Bool",
                    "description": "Pass true to edit the game message to include the current scoreboard",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "score",
                    "type": "int32",
                    "description": "The new score",
                    "required": true
                },
                {
                    "name": "force",
                    "type": "Bool",
                    "description": "Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table",
                    "required": true
                }
            ]
        },
        {
            "name": "setInlineGameScore",
            "description": "Updates the game score of the specified user in a game; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "edit_message",
                    "type": "Bool",
                    "description": "Pass true to edit the game message to include the current scoreboard",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "score",
                    "type": "int32",
                    "description": "The new score",
                    "required": true
                },
                {
                    "name": "force",
                    "type": "Bool",
                    "description": "Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table",
                    "required": true
                }
            ]
        },
        {
            "name": "getGameHighScores",
            "description": "Returns the high scores for a game and some part of the high score table in the range of the specified user; for bots only",
            "type": "GameHighScores",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat that contains the message with the game",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getInlineGameHighScores",
            "description": "Returns game high scores and some part of the high score table in the range of the specified user; for bots only",
            "type": "GameHighScores",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Inline message identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatReplyMarkup",
            "description": "Deletes the default reply markup from a chat. Must be called after a one-time keyboard or a replyMarkupForceReply reply markup has been used. An updateChatReplyMarkup update will be sent if the reply markup is changed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The message identifier of the used keyboard",
                    "required": true
                }
            ]
        },
        {
            "name": "sendChatAction",
            "description": "Sends a notification about user activity in a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the action was performed",
                    "required": true
                },
                {
                    "name": "business_connection_id",
                    "type": "string",
                    "description": "Unique identifier of business connection on behalf of which to send the request; for bots only",
                    "required": true
                },
                {
                    "name": "action",
                    "type": "ChatAction",
                    "description": "The action description; pass null to cancel the currently active action",
                    "required": false
                }
            ]
        },
        {
            "name": "openChat",
            "description": "Informs TDLib that the chat is opened by the user. Many useful activities depend on the chat being opened or closed (e.g., in supergroups and channels all updates are received only for opened chats)",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "closeChat",
            "description": "Informs TDLib that the chat is closed by the user. Many useful activities depend on the chat being opened or closed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "viewMessages",
            "description": "Informs TDLib that messages are being viewed by the user. Sponsored messages must be marked as viewed only when the entire text of the message is shown on the screen (excluding the button).",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "The identifiers of the messages being viewed",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "MessageSource",
                    "description": "Source of the message view; pass null to guess the source based on chat open state",
                    "required": false
                },
                {
                    "name": "force_read",
                    "type": "Bool",
                    "description": "Pass true to mark as read the specified messages even the chat is closed",
                    "required": true
                }
            ]
        },
        {
            "name": "openMessageContent",
            "description": "Informs TDLib that the message content has been opened (e.g., the user has opened a photo, video, document, location or venue, or has listened to an audio file or voice note message).",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the opened content",
                    "required": true
                }
            ]
        },
        {
            "name": "clickAnimatedEmojiMessage",
            "description": "Informs TDLib that a message with an animated emoji was clicked by the user. Returns a big animated sticker to be played or a 404 error if usual animation needs to be played",
            "type": "Sticker",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the clicked message",
                    "required": true
                }
            ]
        },
        {
            "name": "getInternalLink",
            "description": "Returns an HTTPS or a tg: link with the given type. Can be called before authorization",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "type",
                    "type": "InternalLinkType",
                    "description": "Expected type of the link",
                    "required": true
                },
                {
                    "name": "is_http",
                    "type": "Bool",
                    "description": "Pass true to create an HTTPS link (only available for some link types); pass false to create a tg: link",
                    "required": true
                }
            ]
        },
        {
            "name": "getInternalLinkType",
            "description": "Returns information about the type of internal link. Returns a 404 error if the link is not internal. Can be called before authorization",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link",
                    "required": true
                }
            ]
        },
        {
            "name": "getExternalLinkInfo",
            "description": "Returns information about an action to be done when the current user clicks an external link. Don't use this method for links from secret chats if link preview is disabled in secret chats",
            "type": "LoginUrlInfo",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link",
                    "required": true
                }
            ]
        },
        {
            "name": "getExternalLink",
            "description": "Returns an HTTP URL which can be used to automatically authorize the current user on a website after clicking an HTTP link. Use the method getExternalLinkInfo to find whether a prior user confirmation is needed",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The HTTP link",
                    "required": true
                },
                {
                    "name": "allow_write_access",
                    "type": "Bool",
                    "description": "Pass true if the current user allowed the bot, returned in getExternalLinkInfo, to send them messages",
                    "required": true
                }
            ]
        },
        {
            "name": "readAllChatMentions",
            "description": "Marks all mentions in a chat as read",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "readAllMessageThreadMentions",
            "description": "Marks all mentions in a forum topic as read",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier in which mentions are marked as read",
                    "required": true
                }
            ]
        },
        {
            "name": "readAllChatReactions",
            "description": "Marks all reactions in a chat or a forum topic as read",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "readAllMessageThreadReactions",
            "description": "Marks all reactions in a forum topic as read",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier in which reactions are marked as read",
                    "required": true
                }
            ]
        },
        {
            "name": "createPrivateChat",
            "description": "Returns an existing chat corresponding to a given user",
            "type": "Chat",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "force",
                    "type": "Bool",
                    "description": "Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect",
                    "required": true
                }
            ]
        },
        {
            "name": "createBasicGroupChat",
            "description": "Returns an existing chat corresponding to a known basic group",
            "type": "Chat",
            "annotations": [
                {
                    "name": "basic_group_id",
                    "type": "int53",
                    "description": "Basic group identifier",
                    "required": true
                },
                {
                    "name": "force",
                    "type": "Bool",
                    "description": "Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect",
                    "required": true
                }
            ]
        },
        {
            "name": "createSupergroupChat",
            "description": "Returns an existing chat corresponding to a known supergroup or channel",
            "type": "Chat",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup or channel identifier",
                    "required": true
                },
                {
                    "name": "force",
                    "type": "Bool",
                    "description": "Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect",
                    "required": true
                }
            ]
        },
        {
            "name": "createSecretChat",
            "description": "Returns an existing chat corresponding to a known secret chat",
            "type": "Chat",
            "annotations": [
                {
                    "name": "secret_chat_id",
                    "type": "int32",
                    "description": "Secret chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "createNewBasicGroupChat",
            "description": "Creates a new basic group and sends a corresponding messageBasicGroupChatCreate. Returns information about the newly created chat",
            "type": "CreatedBasicGroupChat",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of users to be added to the basic group; may be empty to create a basic group without other members",
                    "required": false
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the new basic group; 1-128 characters",
                    "required": true
                },
                {
                    "name": "message_auto_delete_time",
                    "type": "int32",
                    "description": "Message auto-delete time value, in seconds; must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically",
                    "required": true
                }
            ]
        },
        {
            "name": "createNewSupergroupChat",
            "description": "Creates a new supergroup or channel and sends a corresponding messageSupergroupChatCreate. Returns the newly created chat",
            "type": "Chat",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the new chat; 1-128 characters",
                    "required": true
                },
                {
                    "name": "is_forum",
                    "type": "Bool",
                    "description": "Pass true to create a forum supergroup chat",
                    "required": true
                },
                {
                    "name": "is_channel",
                    "type": "Bool",
                    "description": "Pass true to create a channel chat; ignored if a forum is created",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Chat description; 0-255 characters",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "chatLocation",
                    "description": "Chat location if a location-based supergroup is being created; pass null to create an ordinary supergroup chat",
                    "required": false
                },
                {
                    "name": "message_auto_delete_time",
                    "type": "int32",
                    "description": "Message auto-delete time value, in seconds; must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically",
                    "required": true
                },
                {
                    "name": "for_import",
                    "type": "Bool",
                    "description": "Pass true to create a supergroup for importing messages using importMessages",
                    "required": true
                }
            ]
        },
        {
            "name": "createNewSecretChat",
            "description": "Creates a new secret chat. Returns the newly created chat",
            "type": "Chat",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the target user",
                    "required": true
                }
            ]
        },
        {
            "name": "upgradeBasicGroupChatToSupergroupChat",
            "description": "Creates a new supergroup from an existing basic group and sends a corresponding messageChatUpgradeTo and messageChatUpgradeFrom; requires owner privileges. Deactivates the original basic group",
            "type": "Chat",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to upgrade",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatListsToAddChat",
            "description": "Returns chat lists to which the chat can be added. This is an offline request",
            "type": "ChatLists",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "addChatToList",
            "description": "Adds a chat to a chat list. A chat can't be simultaneously in Main and Archive chat lists, so it is automatically removed from another one if needed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list. Use getChatListsToAddChat to get suitable chat lists",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatFolder",
            "description": "Returns information about a chat folder by its identifier",
            "type": "ChatFolder",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "createChatFolder",
            "description": "Creates new chat folder. Returns information about the created chat folder. There can be up to getOption('chat_folder_count_max') chat folders, but the limit can be increased with Telegram Premium",
            "type": "ChatFolderInfo",
            "annotations": [
                {
                    "name": "folder",
                    "type": "chatFolder",
                    "description": "The new chat folder",
                    "required": true
                }
            ]
        },
        {
            "name": "editChatFolder",
            "description": "Edits existing chat folder. Returns information about the edited chat folder",
            "type": "ChatFolderInfo",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                },
                {
                    "name": "folder",
                    "type": "chatFolder",
                    "description": "The edited chat folder",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatFolder",
            "description": "Deletes existing chat folder",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                },
                {
                    "name": "leave_chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the chats to leave. The chats must be pinned or always included in the folder",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatFolderChatsToLeave",
            "description": "Returns identifiers of pinned or always included chats from a chat folder, which are suggested to be left when the chat folder is deleted",
            "type": "Chats",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatFolderChatCount",
            "description": "Returns approximate number of chats in a being created chat folder. Main and archive chat lists must be fully preloaded for this function to work correctly",
            "type": "Count",
            "annotations": [
                {
                    "name": "folder",
                    "type": "chatFolder",
                    "description": "The new chat folder",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderChatFolders",
            "description": "Changes the order of chat folders",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_folder_ids",
                    "type": "vector<int32>",
                    "description": "Identifiers of chat folders in the new correct order",
                    "required": true
                },
                {
                    "name": "main_chat_list_position",
                    "type": "int32",
                    "description": "Position of the main chat list among chat folders, 0-based. Can be non-zero only for Premium users",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleChatFolderTags",
            "description": "Toggles whether chat folder tags are enabled",
            "type": "Ok",
            "annotations": [
                {
                    "name": "are_tags_enabled",
                    "type": "Bool",
                    "description": "Pass true to enable folder tags; pass false to disable them",
                    "required": true
                }
            ]
        },
        {
            "name": "getRecommendedChatFolders",
            "description": "Returns recommended chat folders for the current user",
            "type": "RecommendedChatFolders",
            "annotations": []
        },
        {
            "name": "getChatFolderDefaultIconName",
            "description": "Returns default icon name for a folder. Can be called synchronously",
            "type": "ChatFolderIcon",
            "annotations": [
                {
                    "name": "folder",
                    "type": "chatFolder",
                    "description": "Chat folder",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatsForChatFolderInviteLink",
            "description": "Returns identifiers of chats from a chat folder, suitable for adding to a chat folder invite link",
            "type": "Chats",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "createChatFolderInviteLink",
            "description": "Creates a new invite link for a chat folder. A link can be created for a chat folder if it has only pinned and included chats",
            "type": "ChatFolderInviteLink",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the link; 0-32 characters",
                    "required": true
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of chats to be accessible by the invite link. Use getChatsForChatFolderInviteLink to get suitable chats. Basic groups will be automatically converted to supergroups before link creation",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatFolderInviteLinks",
            "description": "Returns invite links created by the current user for a shareable chat folder",
            "type": "ChatFolderInviteLinks",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "editChatFolderInviteLink",
            "description": "Edits an invite link for a chat folder",
            "type": "ChatFolderInviteLink",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be edited",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "New name of the link; 0-32 characters",
                    "required": true
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "New identifiers of chats to be accessible by the invite link. Use getChatsForChatFolderInviteLink to get suitable chats. Basic groups will be automatically converted to supergroups before link editing",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatFolderInviteLink",
            "description": "Deletes an invite link for a chat folder",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be deleted",
                    "required": true
                }
            ]
        },
        {
            "name": "checkChatFolderInviteLink",
            "description": "Checks the validity of an invite link for a chat folder and returns information about the corresponding chat folder",
            "type": "ChatFolderInviteLinkInfo",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be checked",
                    "required": true
                }
            ]
        },
        {
            "name": "addChatFolderByInviteLink",
            "description": "Adds a chat folder by an invite link",
            "type": "Ok",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link for the chat folder",
                    "required": true
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the chats added to the chat folder. The chats are automatically joined if they aren't joined yet",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatFolderNewChats",
            "description": "Returns new chats added to a shareable chat folder by its owner. The method must be called at most once in getOption('chat_folder_new_chats_update_period') for the given chat folder",
            "type": "Chats",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "processChatFolderNewChats",
            "description": "Process new chats added to a shareable chat folder by its owner",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                },
                {
                    "name": "added_chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the new chats, which are added to the chat folder. The chats are automatically joined if they aren't joined yet",
                    "required": true
                }
            ]
        },
        {
            "name": "getArchiveChatListSettings",
            "description": "Returns settings for automatic moving of chats to and from the Archive chat lists",
            "type": "ArchiveChatListSettings",
            "annotations": []
        },
        {
            "name": "setArchiveChatListSettings",
            "description": "Changes settings for automatic moving of chats to and from the Archive chat lists",
            "type": "Ok",
            "annotations": [
                {
                    "name": "settings",
                    "type": "archiveChatListSettings",
                    "description": "New settings",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatTitle",
            "description": "Changes the chat title. Supported only for basic groups, supergroups and channels. Requires can_change_info member right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "New title of the chat; 1-128 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatPhoto",
            "description": "Changes the photo of a chat. Supported only for basic groups, supergroups and channels. Requires can_change_info member right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "InputChatPhoto",
                    "description": "New chat photo; pass null to delete the chat photo",
                    "required": false
                }
            ]
        },
        {
            "name": "setChatAccentColor",
            "description": "Changes accent color and background custom emoji of a channel chat. Requires can_change_info administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color to use. The chat must have at least accentColor.min_channel_chat_boost_level boost level to pass the corresponding color",
                    "required": true
                },
                {
                    "name": "background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the reply header and link preview background; 0 if none. Use chatBoostLevelFeatures.can_set_background_custom_emoji to check whether a custom emoji can be set",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatProfileAccentColor",
            "description": "Changes accent color and background custom emoji for profile of a supergroup or channel chat. Requires can_change_info administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "profile_accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color to use for profile; pass -1 if none. The chat must have at least profileAccentColor.min_supergroup_chat_boost_level for supergroups",
                    "required": true
                },
                {
                    "name": "profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the chat's profile photo background; 0 if none. Use chatBoostLevelFeatures.can_set_profile_background_custom_emoji to check whether a custom emoji can be set",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatMessageAutoDeleteTime",
            "description": "Changes the message auto-delete or self-destruct (for secret chats) time in a chat. Requires change_info administrator right in basic groups, supergroups and channels",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_auto_delete_time",
                    "type": "int32",
                    "description": "New time value, in seconds; unless the chat is secret, it must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatEmojiStatus",
            "description": "Changes the emoji status of a chat. Use chatBoostLevelFeatures.can_set_emoji_status to check whether an emoji status can be set. Requires can_change_info administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "emoji_status",
                    "type": "emojiStatus",
                    "description": "New emoji status; pass null to remove emoji status",
                    "required": false
                }
            ]
        },
        {
            "name": "setChatPermissions",
            "description": "Changes the chat members permissions. Supported only for basic groups and supergroups. Requires can_restrict_members administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "permissions",
                    "type": "chatPermissions",
                    "description": "New non-administrator members permissions in the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatBackground",
            "description": "Sets the background in a specific chat. Supported only in private and secret chats with non-deleted users, and in chats with sufficient boost level and can_change_info administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "background",
                    "type": "InputBackground",
                    "description": "The input background to use; pass null to create a new filled or chat theme background",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "BackgroundType",
                    "description": "Background type; pass null to use default background type for the chosen background; backgroundTypeChatTheme isn't supported for private and secret chats.",
                    "required": false
                },
                {
                    "name": "dark_theme_dimming",
                    "type": "int32",
                    "description": "Dimming of the background in dark themes, as a percentage; 0-100. Applied only to Wallpaper and Fill types of background",
                    "required": true
                },
                {
                    "name": "only_for_self",
                    "type": "Bool",
                    "description": "Pass true to set background only for self; pass false to set background for all chat users. Always false for backgrounds set in boosted chats. Background can be set for both users only by Telegram Premium users and if set background isn't of the type inputBackgroundPrevious",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteChatBackground",
            "description": "Deletes background in a specific chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "restore_previous",
                    "type": "Bool",
                    "description": "Pass true to restore previously set background. Can be used only in private and secret chats with non-deleted users if userFullInfo.set_chat_background == true.",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatTheme",
            "description": "Changes the chat theme. Supported only in private and secret chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "Name of the new chat theme; pass an empty string to return the default theme",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatDraftMessage",
            "description": "Changes the draft message in a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the draft was changed",
                    "required": true
                },
                {
                    "name": "draft_message",
                    "type": "draftMessage",
                    "description": "New draft message; pass null to remove the draft. All files in draft message content must be of the type inputFileLocal. Media thumbnails and captions are ignored",
                    "required": false
                }
            ]
        },
        {
            "name": "setChatNotificationSettings",
            "description": "Changes the notification settings of a chat. Notification settings of a chat with the current user (Saved Messages) can't be changed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "chatNotificationSettings",
                    "description": "New notification settings for the chat. If the chat is muted for more than 366 days, it is considered to be muted forever",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleChatHasProtectedContent",
            "description": "Changes the ability of users to save, forward, or copy chat content. Supported only for basic groups, supergroups and channels. Requires owner privileges",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "has_protected_content",
                    "type": "Bool",
                    "description": "New value of has_protected_content",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleChatViewAsTopics",
            "description": "Changes the view_as_topics setting of a forum chat or Saved Messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "view_as_topics",
                    "type": "Bool",
                    "description": "New value of view_as_topics",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleChatIsTranslatable",
            "description": "Changes the translatable state of a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_translatable",
                    "type": "Bool",
                    "description": "New value of is_translatable",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleChatIsMarkedAsUnread",
            "description": "Changes the marked as unread state of a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_marked_as_unread",
                    "type": "Bool",
                    "description": "New value of is_marked_as_unread",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleChatDefaultDisableNotification",
            "description": "Changes the value of the default disable_notification parameter, used when a message is sent to a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "default_disable_notification",
                    "type": "Bool",
                    "description": "New value of default_disable_notification",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatAvailableReactions",
            "description": "Changes reactions, available in a chat. Available for basic groups, supergroups, and channels. Requires can_change_info member right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "available_reactions",
                    "type": "ChatAvailableReactions",
                    "description": "Reactions available in the chat. All explicitly specified emoji reactions must be active. In channel chats up to the chat's boost level custom emoji reactions can be explicitly specified",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatClientData",
            "description": "Changes application-specific data associated with a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "client_data",
                    "type": "string",
                    "description": "New value of client_data",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatDescription",
            "description": "Changes information about a chat. Available for basic groups, supergroups, and channels. Requires can_change_info member right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "New chat description; 0-255 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatDiscussionGroup",
            "description": "Changes the discussion group of a channel chat; requires can_change_info administrator right in the channel if it is specified",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the channel chat. Pass 0 to remove a link from the supergroup passed in the second argument to a linked channel chat (requires can_pin_messages member right in the supergroup)",
                    "required": true
                },
                {
                    "name": "discussion_chat_id",
                    "type": "int53",
                    "description": "Identifier of a new channel's discussion group. Use 0 to remove the discussion group. Use the method getSuitableDiscussionChats to find all suitable groups.",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatLocation",
            "description": "Changes the location of a chat. Available only for some location-based supergroups, use supergroupFullInfo.can_set_location to check whether the method is allowed to use",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "chatLocation",
                    "description": "New location for the chat; must be valid and not null",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatSlowModeDelay",
            "description": "Changes the slow mode delay of a chat. Available only for supergroups; requires can_restrict_members right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "slow_mode_delay",
                    "type": "int32",
                    "description": "New slow mode delay for the chat, in seconds; must be one of 0, 10, 30, 60, 300, 900, 3600",
                    "required": true
                }
            ]
        },
        {
            "name": "pinChatMessage",
            "description": "Pins a message in a chat. A message can be pinned only if messageProperties.can_be_pinned",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the new pinned message",
                    "required": true
                },
                {
                    "name": "disable_notification",
                    "type": "Bool",
                    "description": "Pass true to disable notification about the pinned message. Notifications are always disabled in channels and private chats",
                    "required": true
                },
                {
                    "name": "only_for_self",
                    "type": "Bool",
                    "description": "Pass true to pin the message only for self; private chats only",
                    "required": true
                }
            ]
        },
        {
            "name": "unpinChatMessage",
            "description": "Removes a pinned message from a chat; requires can_pin_messages member right if the chat is a basic group or supergroup, or can_edit_messages administrator right if the chat is a channel",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the removed pinned message",
                    "required": true
                }
            ]
        },
        {
            "name": "unpinAllChatMessages",
            "description": "Removes all pinned messages from a chat; requires can_pin_messages member right if the chat is a basic group or supergroup, or can_edit_messages administrator right if the chat is a channel",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "unpinAllMessageThreadMessages",
            "description": "Removes all pinned messages from a forum topic; requires can_pin_messages member right in the supergroup",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier in which messages will be unpinned",
                    "required": true
                }
            ]
        },
        {
            "name": "joinChat",
            "description": "Adds the current user as a new member to a chat. Private and secret chats can't be joined using this method. May return an error with a message 'INVITE_REQUEST_SENT' if only a join request was created",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "leaveChat",
            "description": "Removes the current user from chat members. Private and secret chats can't be left using this method",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "addChatMember",
            "description": "Adds a new member to a chat; requires can_invite_users member right. Members can't be added to private or secret chats. Returns information about members that weren't added",
            "type": "FailedToAddMembers",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user",
                    "required": true
                },
                {
                    "name": "forward_limit",
                    "type": "int32",
                    "description": "The number of earlier messages from the chat to be forwarded to the new member; up to 100. Ignored for supergroups and channels, or if the added user is a bot",
                    "required": true
                }
            ]
        },
        {
            "name": "addChatMembers",
            "description": "Adds multiple new members to a chat; requires can_invite_users member right. Currently, this method is only available for supergroups and channels.",
            "type": "FailedToAddMembers",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the users to be added to the chat. The maximum number of added users is 20 for supergroups and 100 for channels",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatMemberStatus",
            "description": "Changes the status of a chat member; requires can_invite_users member right to add a chat member, can_promote_members administrator right to change administrator rights of the member,",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "member_id",
                    "type": "MessageSender",
                    "description": "Member identifier. Chats can be only banned and unbanned in supergroups and channels",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "ChatMemberStatus",
                    "description": "The new status of the member in the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "banChatMember",
            "description": "Bans a member in a chat; requires can_restrict_members administrator right. Members can't be banned in private or secret chats. In supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "member_id",
                    "type": "MessageSender",
                    "description": "Member identifier",
                    "required": true
                },
                {
                    "name": "banned_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever. Ignored in basic groups and if a chat is banned",
                    "required": true
                },
                {
                    "name": "revoke_messages",
                    "type": "Bool",
                    "description": "Pass true to delete all messages in the chat for the user that is being removed. Always true for supergroups and channels",
                    "required": true
                }
            ]
        },
        {
            "name": "canTransferOwnership",
            "description": "Checks whether the current session can be used to transfer a chat ownership to another user",
            "type": "CanTransferOwnershipResult",
            "annotations": []
        },
        {
            "name": "transferChatOwnership",
            "description": "Changes the owner of a chat; requires owner privileges in the chat. Use the method canTransferOwnership to check whether the ownership can be transferred from the current session. Available only for supergroups and channel chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user to which transfer the ownership. The ownership can't be transferred to a bot or to a deleted user",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatMember",
            "description": "Returns information about a single member of a chat",
            "type": "ChatMember",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "member_id",
                    "type": "MessageSender",
                    "description": "Member identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "searchChatMembers",
            "description": "Searches for a specified query in the first name, last name and usernames of the members of a specified chat. Requires administrator rights if the chat is a channel",
            "type": "ChatMembers",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of users to be returned; up to 200",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "ChatMembersFilter",
                    "description": "The type of users to search for; pass null to search among all chat members",
                    "required": false
                }
            ]
        },
        {
            "name": "getChatAdministrators",
            "description": "Returns a list of administrators of the chat with their custom titles",
            "type": "ChatAdministrators",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "clearAllDraftMessages",
            "description": "Clears message drafts in all chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "exclude_secret_chats",
                    "type": "Bool",
                    "description": "Pass true to keep local message drafts in secret chats",
                    "required": true
                }
            ]
        },
        {
            "name": "getSavedNotificationSound",
            "description": "Returns saved notification sound by its identifier. Returns a 404 error if there is no saved notification sound with the specified identifier",
            "type": "NotificationSounds",
            "annotations": [
                {
                    "name": "notification_sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound",
                    "required": true
                }
            ]
        },
        {
            "name": "getSavedNotificationSounds",
            "description": "Returns the list of saved notification sounds. If a sound isn't in the list, then default sound needs to be used",
            "type": "NotificationSounds",
            "annotations": []
        },
        {
            "name": "addSavedNotificationSound",
            "description": "Adds a new notification sound to the list of saved notification sounds. The new notification sound is added to the top of the list. If it is already in the list, its position isn't changed",
            "type": "NotificationSound",
            "annotations": [
                {
                    "name": "sound",
                    "type": "InputFile",
                    "description": "Notification sound file to add",
                    "required": true
                }
            ]
        },
        {
            "name": "removeSavedNotificationSound",
            "description": "Removes a notification sound from the list of saved notification sounds",
            "type": "Ok",
            "annotations": [
                {
                    "name": "notification_sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatNotificationSettingsExceptions",
            "description": "Returns the list of chats with non-default notification settings for new messages",
            "type": "Chats",
            "annotations": [
                {
                    "name": "scope",
                    "type": "NotificationSettingsScope",
                    "description": "If specified, only chats from the scope will be returned; pass null to return chats from all scopes",
                    "required": false
                },
                {
                    "name": "compare_sound",
                    "type": "Bool",
                    "description": "Pass true to include in the response chats with only non-default sound",
                    "required": true
                }
            ]
        },
        {
            "name": "getScopeNotificationSettings",
            "description": "Returns the notification settings for chats of a given type",
            "type": "ScopeNotificationSettings",
            "annotations": [
                {
                    "name": "scope",
                    "type": "NotificationSettingsScope",
                    "description": "Types of chats for which to return the notification settings information",
                    "required": true
                }
            ]
        },
        {
            "name": "setScopeNotificationSettings",
            "description": "Changes notification settings for chats of a given type",
            "type": "Ok",
            "annotations": [
                {
                    "name": "scope",
                    "type": "NotificationSettingsScope",
                    "description": "Types of chats for which to change the notification settings",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "scopeNotificationSettings",
                    "description": "The new notification settings for the given scope",
                    "required": true
                }
            ]
        },
        {
            "name": "setReactionNotificationSettings",
            "description": "Changes notification settings for reactions",
            "type": "Ok",
            "annotations": [
                {
                    "name": "notification_settings",
                    "type": "reactionNotificationSettings",
                    "description": "The new notification settings for reactions",
                    "required": true
                }
            ]
        },
        {
            "name": "resetAllNotificationSettings",
            "description": "Resets all chat and scope notification settings to their default values. By default, all chats are unmuted and message previews are shown",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "toggleChatIsPinned",
            "description": "Changes the pinned state of a chat. There can be up to getOption('pinned_chat_count_max')/getOption('pinned_archived_chat_count_max') pinned non-secret chats and the same number of secret chats in the main/archive chat list. The limit can be increased with Telegram Premium",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "Chat list in which to change the pinned state of the chat",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "Pass true to pin the chat; pass false to unpin it",
                    "required": true
                }
            ]
        },
        {
            "name": "setPinnedChats",
            "description": "Changes the order of pinned chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "Chat list in which to change the order of pinned chats",
                    "required": true
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "The new list of pinned chats",
                    "required": true
                }
            ]
        },
        {
            "name": "readChatList",
            "description": "Traverse all chats in a chat list and marks all messages in the chats as read",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "Chat list in which to mark all chats as read",
                    "required": true
                }
            ]
        },
        {
            "name": "getCurrentWeather",
            "description": "Returns the current weather in the given location",
            "type": "CurrentWeather",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The location",
                    "required": true
                }
            ]
        },
        {
            "name": "getStory",
            "description": "Returns a story",
            "type": "Story",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                },
                {
                    "name": "only_local",
                    "type": "Bool",
                    "description": "Pass true to get only locally available information without sending network requests",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatsToSendStories",
            "description": "Returns supergroup and channel chats in which the current user has the right to post stories. The chats must be rechecked with canSendStory before actually trying to post a story there",
            "type": "Chats",
            "annotations": []
        },
        {
            "name": "canSendStory",
            "description": "Checks whether the current user can send a story on behalf of a chat; requires can_post_stories right for supergroup and channel chats",
            "type": "CanSendStoryResult",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier. Pass Saved Messages chat identifier when posting a story on behalf of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "sendStory",
            "description": "Sends a new story to a chat; requires can_post_stories right for supergroup and channel chats. Returns a temporary story",
            "type": "Story",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that will post the story. Pass Saved Messages chat identifier when posting a story on behalf of the current user",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "InputStoryContent",
                    "description": "Content of the story",
                    "required": true
                },
                {
                    "name": "areas",
                    "type": "inputStoryAreas",
                    "description": "Clickable rectangle areas to be shown on the story media; pass null if none",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Story caption; pass null to use an empty caption; 0-getOption('story_caption_length_max') characters; can have entities only if getOption('can_use_text_entities_in_story_caption')",
                    "required": false
                },
                {
                    "name": "privacy_settings",
                    "type": "StoryPrivacySettings",
                    "description": "The privacy settings for the story; ignored for stories sent to supergroup and channel chats",
                    "required": true
                },
                {
                    "name": "active_period",
                    "type": "int32",
                    "description": "Period after which the story is moved to archive, in seconds; must be one of 6 * 3600, 12 * 3600, 86400, or 2 * 86400 for Telegram Premium users, and 86400 otherwise",
                    "required": true
                },
                {
                    "name": "from_story_full_id",
                    "type": "storyFullId",
                    "description": "Full identifier of the original story, which content was used to create the story; pass null if the story isn't repost of another story",
                    "required": false
                },
                {
                    "name": "is_posted_to_chat_page",
                    "type": "Bool",
                    "description": "Pass true to keep the story accessible after expiration",
                    "required": true
                },
                {
                    "name": "protect_content",
                    "type": "Bool",
                    "description": "Pass true if the content of the story must be protected from forwarding and screenshotting",
                    "required": true
                }
            ]
        },
        {
            "name": "editStory",
            "description": "Changes content and caption of a story. Can be called only if story.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Identifier of the story to edit",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "InputStoryContent",
                    "description": "New content of the story; pass null to keep the current content",
                    "required": false
                },
                {
                    "name": "areas",
                    "type": "inputStoryAreas",
                    "description": "New clickable rectangle areas to be shown on the story media; pass null to keep the current areas. Areas can't be edited if story content isn't changed",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "New story caption; pass null to keep the current caption",
                    "required": false
                }
            ]
        },
        {
            "name": "editStoryCover",
            "description": "Changes cover of a video story. Can be called only if story.can_be_edited == true and the story isn't being edited now",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Identifier of the story to edit",
                    "required": true
                },
                {
                    "name": "cover_frame_timestamp",
                    "type": "double",
                    "description": "New timestamp of the frame, which will be used as video thumbnail",
                    "required": true
                }
            ]
        },
        {
            "name": "setStoryPrivacySettings",
            "description": "Changes privacy settings of a story. The method can be called only for stories posted on behalf of the current user and if story.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Identifier of the story",
                    "required": true
                },
                {
                    "name": "privacy_settings",
                    "type": "StoryPrivacySettings",
                    "description": "The new privacy settigs for the story",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleStoryIsPostedToChatPage",
            "description": "Toggles whether a story is accessible after expiration. Can be called only if story.can_toggle_is_posted_to_chat_page == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Identifier of the story",
                    "required": true
                },
                {
                    "name": "is_posted_to_chat_page",
                    "type": "Bool",
                    "description": "Pass true to make the story accessible after expiration; pass false to make it private",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteStory",
            "description": "Deletes a previously sent story. Can be called only if story.can_be_deleted == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Identifier of the story to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "getStoryNotificationSettingsExceptions",
            "description": "Returns the list of chats with non-default notification settings for stories",
            "type": "Chats",
            "annotations": []
        },
        {
            "name": "loadActiveStories",
            "description": "Loads more active stories from a story list. The loaded stories will be sent through updates. Active stories are sorted by",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_list",
                    "type": "StoryList",
                    "description": "The story list in which to load active stories",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatActiveStoriesList",
            "description": "Changes story list in which stories from the chat are shown",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted stories",
                    "required": true
                },
                {
                    "name": "story_list",
                    "type": "StoryList",
                    "description": "New list for active stories posted by the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatActiveStories",
            "description": "Returns the list of active stories posted by the given chat",
            "type": "ChatActiveStories",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatPostedToChatPageStories",
            "description": "Returns the list of stories that posted by the given chat to its chat page. If from_story_id == 0, then pinned stories are returned first.",
            "type": "Stories",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "from_story_id",
                    "type": "int32",
                    "description": "Identifier of the story starting from which stories must be returned; use 0 to get results from pinned and the newest story",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stories to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatArchivedStories",
            "description": "Returns the list of all stories posted by the given chat; requires can_edit_stories right in the chat.",
            "type": "Stories",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "from_story_id",
                    "type": "int32",
                    "description": "Identifier of the story starting from which stories must be returned; use 0 to get results from the last story",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stories to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "setChatPinnedStories",
            "description": "Changes the list of pinned stories on a chat page; requires can_edit_stories right in the chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the stories",
                    "required": true
                },
                {
                    "name": "story_ids",
                    "type": "vector<int32>",
                    "description": "New list of pinned stories. All stories must be posted to the chat page first. There can be up to getOption('pinned_story_count_max') pinned stories on a chat page",
                    "required": true
                }
            ]
        },
        {
            "name": "openStory",
            "description": "Informs TDLib that a story is opened and is being viewed by the user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the opened story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story",
                    "required": true
                }
            ]
        },
        {
            "name": "closeStory",
            "description": "Informs TDLib that a story is closed by the user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story to close",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story",
                    "required": true
                }
            ]
        },
        {
            "name": "getStoryAvailableReactions",
            "description": "Returns reactions, which can be chosen for a story",
            "type": "AvailableReactions",
            "annotations": [
                {
                    "name": "row_size",
                    "type": "int32",
                    "description": "Number of reaction per row, 5-25",
                    "required": true
                }
            ]
        },
        {
            "name": "setStoryReaction",
            "description": "Changes chosen reaction on a story that has already been sent",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story",
                    "required": true
                },
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reaction to set; pass null to remove the reaction. Custom emoji reactions can be used only by Telegram Premium users. Paid reactions can't be set",
                    "required": false
                },
                {
                    "name": "update_recent_reactions",
                    "type": "Bool",
                    "description": "Pass true if the reaction needs to be added to recent reactions",
                    "required": true
                }
            ]
        },
        {
            "name": "getStoryInteractions",
            "description": "Returns interactions with a story. The method can be called only for stories posted on behalf of the current user",
            "type": "StoryInteractions",
            "annotations": [
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for in names, usernames and titles; may be empty to get all relevant interactions",
                    "required": false
                },
                {
                    "name": "only_contacts",
                    "type": "Bool",
                    "description": "Pass true to get only interactions by contacts; pass false to get all relevant interactions",
                    "required": true
                },
                {
                    "name": "prefer_forwards",
                    "type": "Bool",
                    "description": "Pass true to get forwards and reposts first, then reactions, then other views; pass false to get interactions sorted just by interaction date",
                    "required": true
                },
                {
                    "name": "prefer_with_reaction",
                    "type": "Bool",
                    "description": "Pass true to get interactions with reaction first; pass false to get interactions sorted just by interaction date. Ignored if prefer_forwards == true",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of story interactions to return",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatStoryInteractions",
            "description": "Returns interactions with a story posted in a chat. Can be used only if story is posted on behalf of a chat and the user is an administrator in the chat",
            "type": "StoryInteractions",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                },
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Pass the default heart reaction or a suggested reaction type to receive only interactions with the specified reaction type; pass null to receive all interactions; reactionTypePaid isn't supported",
                    "required": false
                },
                {
                    "name": "prefer_forwards",
                    "type": "Bool",
                    "description": "Pass true to get forwards and reposts first, then reactions, then other views; pass false to get interactions sorted just by interaction date",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of story interactions to return",
                    "required": true
                }
            ]
        },
        {
            "name": "reportStory",
            "description": "Reports a story to the Telegram moderators",
            "type": "Ok",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story to report",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story to report",
                    "required": true
                },
                {
                    "name": "reason",
                    "type": "ReportReason",
                    "description": "The reason for reporting the story",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "Additional report details; 0-1024 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "activateStoryStealthMode",
            "description": "Activates stealth mode for stories, which hides all views of stories from the current user in the last 'story_stealth_mode_past_period' seconds",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getStoryPublicForwards",
            "description": "Returns forwards of a story as a message to public chats and reposts by public channels. Can be used only if the story is posted on behalf of the current user or story.can_get_statistics == true.",
            "type": "PublicForwards",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages and stories to be returned; must be positive and can't be greater than 100. For optimal performance, the number of returned objects is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatBoostLevelFeatures",
            "description": "Returns the list of features available on the specific chat boost level; this is an offline request",
            "type": "ChatBoostLevelFeatures",
            "annotations": [
                {
                    "name": "is_channel",
                    "type": "Bool",
                    "description": "Pass true to get the list of features for channels; pass false to get the list of features for supergroups",
                    "required": true
                },
                {
                    "name": "level",
                    "type": "int32",
                    "description": "Chat boost level",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatBoostFeatures",
            "description": "Returns the list of features available for different chat boost levels; this is an offline request",
            "type": "ChatBoostFeatures",
            "annotations": [
                {
                    "name": "is_channel",
                    "type": "Bool",
                    "description": "Pass true to get the list of features for channels; pass false to get the list of features for supergroups",
                    "required": true
                }
            ]
        },
        {
            "name": "getAvailableChatBoostSlots",
            "description": "Returns the list of available chat boost slots for the current user",
            "type": "ChatBoostSlots",
            "annotations": []
        },
        {
            "name": "getChatBoostStatus",
            "description": "Returns the current boost status for a supergroup or a channel chat",
            "type": "ChatBoostStatus",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "boostChat",
            "description": "Boosts a chat and returns the list of available chat boost slots for the current user after the boost",
            "type": "ChatBoostSlots",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "slot_ids",
                    "type": "vector<int32>",
                    "description": "Identifiers of boost slots of the current user from which to apply boosts to the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatBoostLink",
            "description": "Returns an HTTPS link to boost the specified supergroup or channel chat",
            "type": "ChatBoostLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatBoostLinkInfo",
            "description": "Returns information about a link to boost a chat. Can be called for any internal link of the type internalLinkTypeChatBoost",
            "type": "ChatBoostLinkInfo",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The link to boost a chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatBoosts",
            "description": "Returns the list of boosts applied to a chat; requires administrator rights in the chat",
            "type": "FoundChatBoosts",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "only_gift_codes",
                    "type": "Bool",
                    "description": "Pass true to receive only boosts received from gift codes and giveaways created by the chat",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of boosts to be returned; up to 100. For optimal performance, the number of returned boosts can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getUserChatBoosts",
            "description": "Returns the list of boosts applied to a chat by a given user; requires administrator rights in the chat; for bots only",
            "type": "FoundChatBoosts",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user",
                    "required": true
                }
            ]
        },
        {
            "name": "getAttachmentMenuBot",
            "description": "Returns information about a bot that can be added to attachment or side menu",
            "type": "AttachmentMenuBot",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Bot's user identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleBotIsAddedToAttachmentMenu",
            "description": "Adds or removes a bot to attachment and side menu. Bot can be added to the menu, only if userTypeBot.can_be_added_to_attachment_menu == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Bot's user identifier",
                    "required": true
                },
                {
                    "name": "is_added",
                    "type": "Bool",
                    "description": "Pass true to add the bot to attachment menu; pass false to remove the bot from attachment menu",
                    "required": true
                },
                {
                    "name": "allow_write_access",
                    "type": "Bool",
                    "description": "Pass true if the current user allowed the bot to send them messages. Ignored if is_added is false",
                    "required": true
                }
            ]
        },
        {
            "name": "getThemedEmojiStatuses",
            "description": "Returns up to 8 emoji statuses, which must be shown right after the default Premium Badge in the emoji status list for self status",
            "type": "EmojiStatuses",
            "annotations": []
        },
        {
            "name": "getRecentEmojiStatuses",
            "description": "Returns recent emoji statuses for self status",
            "type": "EmojiStatuses",
            "annotations": []
        },
        {
            "name": "getDefaultEmojiStatuses",
            "description": "Returns default emoji statuses for self status",
            "type": "EmojiStatuses",
            "annotations": []
        },
        {
            "name": "clearRecentEmojiStatuses",
            "description": "Clears the list of recently used emoji statuses for self status",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getThemedChatEmojiStatuses",
            "description": "Returns up to 8 emoji statuses, which must be shown in the emoji status list for chats",
            "type": "EmojiStatuses",
            "annotations": []
        },
        {
            "name": "getDefaultChatEmojiStatuses",
            "description": "Returns default emoji statuses for chats",
            "type": "EmojiStatuses",
            "annotations": []
        },
        {
            "name": "getDisallowedChatEmojiStatuses",
            "description": "Returns the list of emoji statuses, which can't be used as chat emoji status, even they are from a sticker set with is_allowed_as_chat_emoji_status == true",
            "type": "EmojiStatuses",
            "annotations": []
        },
        {
            "name": "downloadFile",
            "description": "Downloads a file from the cloud. Download progress and completion of the download will be notified through updateFile updates",
            "type": "File",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file to download",
                    "required": true
                },
                {
                    "name": "priority",
                    "type": "int32",
                    "description": "Priority of the download (1-32). The higher the priority, the earlier the file will be downloaded. If the priorities of two files are equal, then the last one for which downloadFile/addFileToDownloads was called will be downloaded first",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int53",
                    "description": "The starting position from which the file needs to be downloaded",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int53",
                    "description": "Number of bytes which need to be downloaded starting from the 'offset' position before the download will automatically be canceled; use 0 to download without a limit",
                    "required": true
                },
                {
                    "name": "synchronous",
                    "type": "Bool",
                    "description": "Pass true to return response only after the file download has succeeded, has failed, has been canceled, or a new downloadFile request with different offset/limit parameters was sent; pass false to return file state immediately, just after the download has been started",
                    "required": true
                }
            ]
        },
        {
            "name": "getFileDownloadedPrefixSize",
            "description": "Returns file downloaded prefix size from a given offset, in bytes",
            "type": "FileDownloadedPrefixSize",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int53",
                    "description": "Offset from which downloaded prefix size needs to be calculated",
                    "required": true
                }
            ]
        },
        {
            "name": "cancelDownloadFile",
            "description": "Stops the downloading of a file. If a file has already been downloaded, does nothing",
            "type": "Ok",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of a file to stop downloading",
                    "required": true
                },
                {
                    "name": "only_if_pending",
                    "type": "Bool",
                    "description": "Pass true to stop downloading only if it hasn't been started, i.e. request hasn't been sent to server",
                    "required": true
                }
            ]
        },
        {
            "name": "getSuggestedFileName",
            "description": "Returns suggested name for saving a file in a given directory",
            "type": "Text",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file",
                    "required": true
                },
                {
                    "name": "directory",
                    "type": "string",
                    "description": "Directory in which the file is supposed to be saved",
                    "required": true
                }
            ]
        },
        {
            "name": "preliminaryUploadFile",
            "description": "Preliminary uploads a file to the cloud before sending it in a message, which can be useful for uploading of being recorded voice and video notes.",
            "type": "File",
            "annotations": [
                {
                    "name": "file",
                    "type": "InputFile",
                    "description": "File to upload",
                    "required": true
                },
                {
                    "name": "file_type",
                    "type": "FileType",
                    "description": "File type; pass null if unknown",
                    "required": false
                },
                {
                    "name": "priority",
                    "type": "int32",
                    "description": "Priority of the upload (1-32). The higher the priority, the earlier the file will be uploaded. If the priorities of two files are equal, then the first one for which preliminaryUploadFile was called will be uploaded first",
                    "required": true
                }
            ]
        },
        {
            "name": "cancelPreliminaryUploadFile",
            "description": "Stops the preliminary uploading of a file. Supported only for files uploaded by using preliminaryUploadFile. For other files the behavior is undefined",
            "type": "Ok",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file to stop uploading",
                    "required": true
                }
            ]
        },
        {
            "name": "writeGeneratedFilePart",
            "description": "Writes a part of a generated file. This method is intended to be used only if the application has no direct access to TDLib's file system, because it is usually slower than a direct write to the destination file",
            "type": "Ok",
            "annotations": [
                {
                    "name": "generation_id",
                    "type": "int64",
                    "description": "The identifier of the generation process",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int53",
                    "description": "The offset from which to write the data to the file",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "The data to write",
                    "required": true
                }
            ]
        },
        {
            "name": "setFileGenerationProgress",
            "description": "Informs TDLib on a file generation progress",
            "type": "Ok",
            "annotations": [
                {
                    "name": "generation_id",
                    "type": "int64",
                    "description": "The identifier of the generation process",
                    "required": true
                },
                {
                    "name": "expected_size",
                    "type": "int53",
                    "description": "Expected size of the generated file, in bytes; 0 if unknown",
                    "required": true
                },
                {
                    "name": "local_prefix_size",
                    "type": "int53",
                    "description": "The number of bytes already generated",
                    "required": true
                }
            ]
        },
        {
            "name": "finishFileGeneration",
            "description": "Finishes the file generation",
            "type": "Ok",
            "annotations": [
                {
                    "name": "generation_id",
                    "type": "int64",
                    "description": "The identifier of the generation process",
                    "required": true
                },
                {
                    "name": "error",
                    "type": "error",
                    "description": "If passed, the file generation has failed and must be terminated; pass null if the file generation succeeded",
                    "required": false
                }
            ]
        },
        {
            "name": "readFilePart",
            "description": "Reads a part of a file from the TDLib file cache and returns read bytes. This method is intended to be used only if the application has no direct access to TDLib's file system, because it is usually slower than a direct read from the file",
            "type": "FilePart",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file. The file must be located in the TDLib file cache",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int53",
                    "description": "The offset from which to read the file",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int53",
                    "description": "Number of bytes to read. An error will be returned if there are not enough bytes available in the file from the specified position. Pass 0 to read all available data from the specified position",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteFile",
            "description": "Deletes a file from the TDLib file cache",
            "type": "Ok",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "addFileToDownloads",
            "description": "Adds a file from a message to the list of file downloads. Download progress and completion of the download will be notified through updateFile updates.",
            "type": "File",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the file to download",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message with the file",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "priority",
                    "type": "int32",
                    "description": "Priority of the download (1-32). The higher the priority, the earlier the file will be downloaded. If the priorities of two files are equal, then the last one for which downloadFile/addFileToDownloads was called will be downloaded first",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleDownloadIsPaused",
            "description": "Changes pause state of a file in the file download list",
            "type": "Ok",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the downloaded file",
                    "required": true
                },
                {
                    "name": "is_paused",
                    "type": "Bool",
                    "description": "Pass true if the download is paused",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleAllDownloadsArePaused",
            "description": "Changes pause state of all files in the file download list",
            "type": "Ok",
            "annotations": [
                {
                    "name": "are_paused",
                    "type": "Bool",
                    "description": "Pass true to pause all downloads; pass false to unpause them",
                    "required": true
                }
            ]
        },
        {
            "name": "removeFileFromDownloads",
            "description": "Removes a file from the file download list",
            "type": "Ok",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the downloaded file",
                    "required": true
                },
                {
                    "name": "delete_from_cache",
                    "type": "Bool",
                    "description": "Pass true to delete the file from the TDLib file cache",
                    "required": true
                }
            ]
        },
        {
            "name": "removeAllFilesFromDownloads",
            "description": "Removes all files from the file download list",
            "type": "Ok",
            "annotations": [
                {
                    "name": "only_active",
                    "type": "Bool",
                    "description": "Pass true to remove only active downloads, including paused",
                    "required": true
                },
                {
                    "name": "only_completed",
                    "type": "Bool",
                    "description": "Pass true to remove only completed downloads",
                    "required": true
                },
                {
                    "name": "delete_from_cache",
                    "type": "Bool",
                    "description": "Pass true to delete the file from the TDLib file cache",
                    "required": true
                }
            ]
        },
        {
            "name": "searchFileDownloads",
            "description": "Searches for files in the file download list or recently downloaded files from the list",
            "type": "FoundFileDownloads",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for; may be empty to return all downloaded files",
                    "required": false
                },
                {
                    "name": "only_active",
                    "type": "Bool",
                    "description": "Pass true to search only for active downloads, including paused",
                    "required": true
                },
                {
                    "name": "only_completed",
                    "type": "Bool",
                    "description": "Pass true to search only for completed downloads",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of files to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "setApplicationVerificationToken",
            "description": "Application verification has been completed. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "verification_id",
                    "type": "int53",
                    "description": "Unique identifier for the verification process as received from updateApplicationVerificationRequired",
                    "required": true
                },
                {
                    "name": "token",
                    "type": "string",
                    "description": "Play Integrity API token for the Android application, or secret from push notification for the iOS application;",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageFileType",
            "description": "Returns information about a file with messages exported from another application",
            "type": "MessageFileType",
            "annotations": [
                {
                    "name": "message_file_head",
                    "type": "string",
                    "description": "Beginning of the message file; up to 100 first lines",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageImportConfirmationText",
            "description": "Returns a confirmation text to be shown to the user before starting message import",
            "type": "Text",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat to which the messages will be imported. It must be an identifier of a private chat with a mutual contact or an identifier of a supergroup chat with can_change_info member right",
                    "required": true
                }
            ]
        },
        {
            "name": "importMessages",
            "description": "Imports messages exported from another app",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat to which the messages will be imported. It must be an identifier of a private chat with a mutual contact or an identifier of a supergroup chat with can_change_info member right",
                    "required": true
                },
                {
                    "name": "message_file",
                    "type": "InputFile",
                    "description": "File with messages to import. Only inputFileLocal and inputFileGenerated are supported. The file must not be previously uploaded",
                    "required": true
                },
                {
                    "name": "attached_files",
                    "type": "vector<InputFile>",
                    "description": "Files used in the imported messages. Only inputFileLocal and inputFileGenerated are supported. The files must not be previously uploaded",
                    "required": true
                }
            ]
        },
        {
            "name": "replacePrimaryChatInviteLink",
            "description": "Replaces current primary invite link for a chat with a new primary invite link. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "createChatInviteLink",
            "description": "Creates a new invite link for a chat. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right in the chat",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Invite link name; 0-32 characters",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the link will expire; pass 0 if never",
                    "required": true
                },
                {
                    "name": "member_limit",
                    "type": "int32",
                    "description": "The maximum number of chat members that can join the chat via the link simultaneously; 0-99999; pass 0 if not limited",
                    "required": true
                },
                {
                    "name": "creates_join_request",
                    "type": "Bool",
                    "description": "Pass true if users joining the chat via the link need to be approved by chat administrators. In this case, member_limit must be 0",
                    "required": true
                }
            ]
        },
        {
            "name": "createChatSubscriptionInviteLink",
            "description": "Creates a new subscription invite link for a channel chat. Requires can_invite_users right in the chat",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Invite link name; 0-32 characters",
                    "required": true
                },
                {
                    "name": "subscription_pricing",
                    "type": "starSubscriptionPricing",
                    "description": "Information about subscription plan that will be applied to the users joining the chat via the link.",
                    "required": true
                }
            ]
        },
        {
            "name": "editChatInviteLink",
            "description": "Edits a non-primary invite link for a chat. Available for basic groups, supergroups, and channels.",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be edited",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Invite link name; 0-32 characters",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the link will expire; pass 0 if never",
                    "required": true
                },
                {
                    "name": "member_limit",
                    "type": "int32",
                    "description": "The maximum number of chat members that can join the chat via the link simultaneously; 0-99999; pass 0 if not limited",
                    "required": true
                },
                {
                    "name": "creates_join_request",
                    "type": "Bool",
                    "description": "Pass true if users joining the chat via the link need to be approved by chat administrators. In this case, member_limit must be 0",
                    "required": true
                }
            ]
        },
        {
            "name": "editChatSubscriptionInviteLink",
            "description": "Edits a subscription invite link for a channel chat. Requires can_invite_users right in the chat for own links and owner privileges for other links",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be edited",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Invite link name; 0-32 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatInviteLink",
            "description": "Returns information about an invite link. Requires administrator privileges and can_invite_users right in the chat to get own links and owner privileges to get other links",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to get",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatInviteLinkCounts",
            "description": "Returns the list of chat administrators with number of their invite links. Requires owner privileges in the chat",
            "type": "ChatInviteLinkCounts",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatInviteLinks",
            "description": "Returns invite links for a chat created by specified administrator. Requires administrator privileges and can_invite_users right in the chat to get own links and owner privileges to get other links",
            "type": "ChatInviteLinks",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "creator_user_id",
                    "type": "int53",
                    "description": "User identifier of a chat administrator. Must be an identifier of the current user for non-owner",
                    "required": true
                },
                {
                    "name": "is_revoked",
                    "type": "Bool",
                    "description": "Pass true if revoked links needs to be returned instead of active or expired",
                    "required": true
                },
                {
                    "name": "offset_date",
                    "type": "int32",
                    "description": "Creation date of an invite link starting after which to return invite links; use 0 to get results from the beginning",
                    "required": true
                },
                {
                    "name": "offset_invite_link",
                    "type": "string",
                    "description": "Invite link starting after which to return invite links; use empty string to get results from the beginning",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of invite links to return; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatInviteLinkMembers",
            "description": "Returns chat members joined a chat via an invite link. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links",
            "type": "ChatInviteLinkMembers",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link for which to return chat members",
                    "required": true
                },
                {
                    "name": "only_with_expired_subscription",
                    "type": "Bool",
                    "description": "Pass true if the link is a subscription link and only members with expired subscription must be returned",
                    "required": true
                },
                {
                    "name": "offset_member",
                    "type": "chatInviteLinkMember",
                    "description": "A chat member from which to return next chat members; pass null to get results from the beginning",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of chat members to return; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "revokeChatInviteLink",
            "description": "Revokes invite link for a chat. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links.",
            "type": "ChatInviteLinks",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be revoked",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteRevokedChatInviteLink",
            "description": "Deletes revoked chat invite links. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to revoke",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteAllRevokedChatInviteLinks",
            "description": "Deletes all revoked chat invite links created by a given chat administrator. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "creator_user_id",
                    "type": "int53",
                    "description": "User identifier of a chat administrator, which links will be deleted. Must be an identifier of the current user for non-owner",
                    "required": true
                }
            ]
        },
        {
            "name": "checkChatInviteLink",
            "description": "Checks the validity of an invite link for a chat and returns information about the corresponding chat",
            "type": "ChatInviteLinkInfo",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to be checked",
                    "required": true
                }
            ]
        },
        {
            "name": "joinChatByInviteLink",
            "description": "Uses an invite link to add the current user to the chat if possible. May return an error with a message 'INVITE_REQUEST_SENT' if only a join request was created",
            "type": "Chat",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to use",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatJoinRequests",
            "description": "Returns pending join requests in a chat",
            "type": "ChatJoinRequests",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link for which to return join requests. If empty, all join requests will be returned. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "A query to search for in the first names, last names and usernames of the users to return",
                    "required": true
                },
                {
                    "name": "offset_request",
                    "type": "chatJoinRequest",
                    "description": "A chat join request from which to return next requests; pass null to get results from the beginning",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of requests to join the chat to return",
                    "required": true
                }
            ]
        },
        {
            "name": "processChatJoinRequest",
            "description": "Handles a pending join request in a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user that sent the request",
                    "required": true
                },
                {
                    "name": "approve",
                    "type": "Bool",
                    "description": "Pass true to approve the request; pass false to decline it",
                    "required": true
                }
            ]
        },
        {
            "name": "processChatJoinRequests",
            "description": "Handles all pending join requests for a given link in a chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link for which to process join requests. If empty, all join requests will be processed. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links",
                    "required": true
                },
                {
                    "name": "approve",
                    "type": "Bool",
                    "description": "Pass true to approve all requests; pass false to decline them",
                    "required": true
                }
            ]
        },
        {
            "name": "createCall",
            "description": "Creates a new call",
            "type": "CallId",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user to be called",
                    "required": true
                },
                {
                    "name": "protocol",
                    "type": "callProtocol",
                    "description": "The call protocols supported by the application",
                    "required": true
                },
                {
                    "name": "is_video",
                    "type": "Bool",
                    "description": "Pass true to create a video call",
                    "required": true
                }
            ]
        },
        {
            "name": "acceptCall",
            "description": "Accepts an incoming call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                },
                {
                    "name": "protocol",
                    "type": "callProtocol",
                    "description": "The call protocols supported by the application",
                    "required": true
                }
            ]
        },
        {
            "name": "sendCallSignalingData",
            "description": "Sends call signaling data",
            "type": "Ok",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "The data",
                    "required": true
                }
            ]
        },
        {
            "name": "discardCall",
            "description": "Discards a call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                },
                {
                    "name": "is_disconnected",
                    "type": "Bool",
                    "description": "Pass true if the user was disconnected",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "The call duration, in seconds",
                    "required": true
                },
                {
                    "name": "is_video",
                    "type": "Bool",
                    "description": "Pass true if the call was a video call",
                    "required": true
                },
                {
                    "name": "connection_id",
                    "type": "int64",
                    "description": "Identifier of the connection used during the call",
                    "required": true
                }
            ]
        },
        {
            "name": "sendCallRating",
            "description": "Sends a call rating",
            "type": "Ok",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                },
                {
                    "name": "rating",
                    "type": "int32",
                    "description": "Call rating; 1-5",
                    "required": true
                },
                {
                    "name": "comment",
                    "type": "string",
                    "description": "An optional user comment if the rating is less than 5",
                    "required": true
                },
                {
                    "name": "problems",
                    "type": "vector<CallProblem>",
                    "description": "List of the exact types of problems with the call, specified by the user",
                    "required": true
                }
            ]
        },
        {
            "name": "sendCallDebugInformation",
            "description": "Sends debug information for a call to Telegram servers",
            "type": "Ok",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                },
                {
                    "name": "debug_information",
                    "type": "string",
                    "description": "Debug information in application-specific format",
                    "required": true
                }
            ]
        },
        {
            "name": "sendCallLog",
            "description": "Sends log file for a call to Telegram servers",
            "type": "Ok",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                },
                {
                    "name": "log_file",
                    "type": "InputFile",
                    "description": "Call log file. Only inputFileLocal and inputFileGenerated are supported",
                    "required": true
                }
            ]
        },
        {
            "name": "getVideoChatAvailableParticipants",
            "description": "Returns the list of participant identifiers, on whose behalf a video chat in the chat can be joined",
            "type": "MessageSenders",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "setVideoChatDefaultParticipant",
            "description": "Changes default participant identifier, on whose behalf a video chat in the chat will be joined",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "default_participant_id",
                    "type": "MessageSender",
                    "description": "Default group call participant identifier to join the video chats",
                    "required": true
                }
            ]
        },
        {
            "name": "createVideoChat",
            "description": "Creates a video chat (a group call bound to a chat). Available only for basic groups, supergroups and channels; requires can_manage_video_chats administrator right",
            "type": "GroupCallId",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat in which the video chat will be created",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Group call title; if empty, chat title will be used",
                    "required": true
                },
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the group call is supposed to be started by an administrator; 0 to start the video chat immediately. The date must be at least 10 seconds and at most 8 days in the future",
                    "required": true
                },
                {
                    "name": "is_rtmp_stream",
                    "type": "Bool",
                    "description": "Pass true to create an RTMP stream instead of an ordinary video chat; requires owner privileges",
                    "required": true
                }
            ]
        },
        {
            "name": "getVideoChatRtmpUrl",
            "description": "Returns RTMP URL for streaming to the chat; requires owner privileges",
            "type": "RtmpUrl",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "replaceVideoChatRtmpUrl",
            "description": "Replaces the current RTMP URL for streaming to the chat; requires owner privileges",
            "type": "RtmpUrl",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getGroupCall",
            "description": "Returns information about a group call",
            "type": "GroupCall",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "startScheduledGroupCall",
            "description": "Starts a scheduled group call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallEnabledStartNotification",
            "description": "Toggles whether the current user will receive a notification when the group call starts; scheduled group calls only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "enabled_start_notification",
                    "type": "Bool",
                    "description": "New value of the enabled_start_notification setting",
                    "required": true
                }
            ]
        },
        {
            "name": "joinGroupCall",
            "description": "Joins an active group call. Returns join response payload for tgcalls",
            "type": "Text",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Identifier of a group call participant, which will be used to join the call; pass null to join as self; video chats only",
                    "required": false
                },
                {
                    "name": "audio_source_id",
                    "type": "int32",
                    "description": "Caller audio channel synchronization source identifier; received from tgcalls",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "string",
                    "description": "Group call join payload; received from tgcalls",
                    "required": true
                },
                {
                    "name": "is_muted",
                    "type": "Bool",
                    "description": "Pass true to join the call with muted microphone",
                    "required": true
                },
                {
                    "name": "is_my_video_enabled",
                    "type": "Bool",
                    "description": "Pass true if the user's video is enabled",
                    "required": true
                },
                {
                    "name": "invite_hash",
                    "type": "string",
                    "description": "If non-empty, invite hash to be used to join the group call without being muted by administrators",
                    "required": false
                }
            ]
        },
        {
            "name": "startGroupCallScreenSharing",
            "description": "Starts screen sharing in a joined group call. Returns join response payload for tgcalls",
            "type": "Text",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "audio_source_id",
                    "type": "int32",
                    "description": "Screen sharing audio channel synchronization source identifier; received from tgcalls",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "string",
                    "description": "Group call join payload; received from tgcalls",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallScreenSharingIsPaused",
            "description": "Pauses or unpauses screen sharing in a joined group call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "is_paused",
                    "type": "Bool",
                    "description": "Pass true to pause screen sharing; pass false to unpause it",
                    "required": true
                }
            ]
        },
        {
            "name": "endGroupCallScreenSharing",
            "description": "Ends screen sharing in a joined group call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "setGroupCallTitle",
            "description": "Sets group call title. Requires groupCall.can_be_managed group call flag",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "New group call title; 1-64 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallMuteNewParticipants",
            "description": "Toggles whether new participants of a group call can be unmuted only by administrators of the group call. Requires groupCall.can_toggle_mute_new_participants group call flag",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "mute_new_participants",
                    "type": "Bool",
                    "description": "New value of the mute_new_participants setting",
                    "required": true
                }
            ]
        },
        {
            "name": "inviteGroupCallParticipants",
            "description": "Invites users to an active group call. Sends a service message of type messageInviteVideoChatParticipants for video chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers. At most 10 users can be invited simultaneously",
                    "required": true
                }
            ]
        },
        {
            "name": "getGroupCallInviteLink",
            "description": "Returns invite link to a video chat in a public chat",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "can_self_unmute",
                    "type": "Bool",
                    "description": "Pass true if the invite link needs to contain an invite hash, passing which to joinGroupCall would allow the invited user to unmute themselves. Requires groupCall.can_be_managed group call flag",
                    "required": true
                }
            ]
        },
        {
            "name": "revokeGroupCallInviteLink",
            "description": "Revokes invite link for a group call. Requires groupCall.can_be_managed group call flag",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "startGroupCallRecording",
            "description": "Starts recording of an active group call. Requires groupCall.can_be_managed group call flag",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Group call recording title; 0-64 characters",
                    "required": true
                },
                {
                    "name": "record_video",
                    "type": "Bool",
                    "description": "Pass true to record a video file instead of an audio file",
                    "required": true
                },
                {
                    "name": "use_portrait_orientation",
                    "type": "Bool",
                    "description": "Pass true to use portrait orientation for video instead of landscape one",
                    "required": true
                }
            ]
        },
        {
            "name": "endGroupCallRecording",
            "description": "Ends recording of an active group call. Requires groupCall.can_be_managed group call flag",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallIsMyVideoPaused",
            "description": "Toggles whether current user's video is paused",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "is_my_video_paused",
                    "type": "Bool",
                    "description": "Pass true if the current user's video is paused",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallIsMyVideoEnabled",
            "description": "Toggles whether current user's video is enabled",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "is_my_video_enabled",
                    "type": "Bool",
                    "description": "Pass true if the current user's video is enabled",
                    "required": true
                }
            ]
        },
        {
            "name": "setGroupCallParticipantIsSpeaking",
            "description": "Informs TDLib that speaking state of a participant of an active group has changed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "audio_source",
                    "type": "int32",
                    "description": "Group call participant's synchronization audio source identifier, or 0 for the current user",
                    "required": true
                },
                {
                    "name": "is_speaking",
                    "type": "Bool",
                    "description": "Pass true if the user is speaking",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallParticipantIsMuted",
            "description": "Toggles whether a participant of an active group call is muted, unmuted, or allowed to unmute themselves",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Participant identifier",
                    "required": true
                },
                {
                    "name": "is_muted",
                    "type": "Bool",
                    "description": "Pass true to mute the user; pass false to unmute them",
                    "required": true
                }
            ]
        },
        {
            "name": "setGroupCallParticipantVolumeLevel",
            "description": "Changes volume level of a participant of an active group call. If the current user can manage the group call, then the participant's volume level will be changed for all users with the default volume level",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Participant identifier",
                    "required": true
                },
                {
                    "name": "volume_level",
                    "type": "int32",
                    "description": "New participant's volume level; 1-20000 in hundreds of percents",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleGroupCallParticipantIsHandRaised",
            "description": "Toggles whether a group call participant hand is rased",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Participant identifier",
                    "required": true
                },
                {
                    "name": "is_hand_raised",
                    "type": "Bool",
                    "description": "Pass true if the user's hand needs to be raised. Only self hand can be raised. Requires groupCall.can_be_managed group call flag to lower other's hand",
                    "required": true
                }
            ]
        },
        {
            "name": "loadGroupCallParticipants",
            "description": "Loads more participants of a group call. The loaded participants will be received through updates. Use the field groupCall.loaded_all_participants to check whether all participants have already been loaded",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier. The group call must be previously received through getGroupCall and must be joined or being joined",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of participants to load; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "leaveGroupCall",
            "description": "Leaves a group call",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "endGroupCall",
            "description": "Ends a group call. Requires groupCall.can_be_managed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getGroupCallStreams",
            "description": "Returns information about available group call streams",
            "type": "GroupCallStreams",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getGroupCallStreamSegment",
            "description": "Returns a file with a segment of a group call stream in a modified OGG format for audio or MPEG-4 format for video",
            "type": "FilePart",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "time_offset",
                    "type": "int53",
                    "description": "Point in time when the stream segment begins; Unix timestamp in milliseconds",
                    "required": true
                },
                {
                    "name": "scale",
                    "type": "int32",
                    "description": "Segment duration scale; 0-1. Segment's duration is 1000/(2**scale) milliseconds",
                    "required": true
                },
                {
                    "name": "channel_id",
                    "type": "int32",
                    "description": "Identifier of an audio/video channel to get as received from tgcalls",
                    "required": true
                },
                {
                    "name": "video_quality",
                    "type": "GroupCallVideoQuality",
                    "description": "Video quality as received from tgcalls; pass null to get the worst available quality",
                    "required": false
                }
            ]
        },
        {
            "name": "setMessageSenderBlockList",
            "description": "Changes the block list of a message sender. Currently, only users and supergroup chats can be blocked",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of a message sender to block/unblock",
                    "required": true
                },
                {
                    "name": "block_list",
                    "type": "BlockList",
                    "description": "New block list for the message sender; pass null to unblock the message sender",
                    "required": false
                }
            ]
        },
        {
            "name": "blockMessageSenderFromReplies",
            "description": "Blocks an original sender of a message in the Replies chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The identifier of an incoming message in the Replies chat",
                    "required": true
                },
                {
                    "name": "delete_message",
                    "type": "Bool",
                    "description": "Pass true to delete the message",
                    "required": true
                },
                {
                    "name": "delete_all_messages",
                    "type": "Bool",
                    "description": "Pass true to delete all messages from the same sender",
                    "required": true
                },
                {
                    "name": "report_spam",
                    "type": "Bool",
                    "description": "Pass true to report the sender to the Telegram moderators",
                    "required": true
                }
            ]
        },
        {
            "name": "getBlockedMessageSenders",
            "description": "Returns users and chats that were blocked by the current user",
            "type": "MessageSenders",
            "annotations": [
                {
                    "name": "block_list",
                    "type": "BlockList",
                    "description": "Block list from which to return users",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Number of users and chats to skip in the result; must be non-negative",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of users and chats to return; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "addContact",
            "description": "Adds a user to the contact list or edits an existing contact by their user identifier",
            "type": "Ok",
            "annotations": [
                {
                    "name": "contact",
                    "type": "contact",
                    "description": "The contact to add or edit; phone number may be empty and needs to be specified only if known, vCard is ignored",
                    "required": true
                },
                {
                    "name": "share_phone_number",
                    "type": "Bool",
                    "description": "Pass true to share the current user's phone number with the new contact. A corresponding rule to userPrivacySettingShowPhoneNumber will be added if needed.",
                    "required": true
                }
            ]
        },
        {
            "name": "importContacts",
            "description": "Adds new contacts or edits existing contacts by their phone numbers; contacts' user identifiers are ignored",
            "type": "ImportedContacts",
            "annotations": [
                {
                    "name": "contacts",
                    "type": "vector<contact>",
                    "description": "The list of contacts to import or edit; contacts' vCard are ignored and are not imported",
                    "required": true
                }
            ]
        },
        {
            "name": "getContacts",
            "description": "Returns all contacts of the user",
            "type": "Users",
            "annotations": []
        },
        {
            "name": "searchContacts",
            "description": "Searches for the specified query in the first names, last names and usernames of the known user contacts",
            "type": "Users",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for; may be empty to return all contacts",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of users to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "removeContacts",
            "description": "Removes users from the contact list",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of users to be deleted",
                    "required": true
                }
            ]
        },
        {
            "name": "getImportedContactCount",
            "description": "Returns the total number of imported contacts",
            "type": "Count",
            "annotations": []
        },
        {
            "name": "changeImportedContacts",
            "description": "Changes imported contacts using the list of contacts saved on the device. Imports newly added contacts and, if at least the file database is enabled, deletes recently deleted contacts.",
            "type": "ImportedContacts",
            "annotations": [
                {
                    "name": "contacts",
                    "type": "vector<contact>",
                    "description": "The new list of contacts, contact's vCard are ignored and are not imported",
                    "required": true
                }
            ]
        },
        {
            "name": "clearImportedContacts",
            "description": "Clears all imported contacts, contact list remains unchanged",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "setCloseFriends",
            "description": "Changes the list of close friends of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers of close friends; the users must be contacts of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "getCloseFriends",
            "description": "Returns all close friends of the current user",
            "type": "Users",
            "annotations": []
        },
        {
            "name": "setUserPersonalProfilePhoto",
            "description": "Changes a personal profile photo of a contact user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "InputChatPhoto",
                    "description": "Profile photo to set; pass null to delete the photo; inputChatPhotoPrevious isn't supported in this function",
                    "required": false
                }
            ]
        },
        {
            "name": "suggestUserProfilePhoto",
            "description": "Suggests a profile photo to another regular user with common messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "InputChatPhoto",
                    "description": "Profile photo to suggest; inputChatPhotoPrevious isn't supported in this function",
                    "required": true
                }
            ]
        },
        {
            "name": "searchUserByPhoneNumber",
            "description": "Searches a user by their phone number. Returns a 404 error if the user can't be found",
            "type": "User",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number to search for",
                    "required": true
                },
                {
                    "name": "only_local",
                    "type": "Bool",
                    "description": "Pass true to get only locally available information without sending network requests",
                    "required": true
                }
            ]
        },
        {
            "name": "sharePhoneNumber",
            "description": "Shares the phone number of the current user with a mutual contact. Supposed to be called when the user clicks on chatActionBarSharePhoneNumber",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user with whom to share the phone number. The user must be a mutual contact",
                    "required": true
                }
            ]
        },
        {
            "name": "getUserProfilePhotos",
            "description": "Returns the profile photos of a user. Personal and public photo aren't returned",
            "type": "ChatPhotos",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "The number of photos to skip; must be non-negative",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of photos to be returned; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "getStickers",
            "description": "Returns stickers from the installed sticker sets that correspond to any of the given emoji or can be found by sticker-specific keywords. If the query is non-empty, then favorite, recently used or trending stickers may also be returned",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the stickers to return",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Search query; a space-separated list of emojis or a keyword prefix. If empty, returns all known installed stickers",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stickers to be returned",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier for which to return stickers. Available custom emoji stickers may be different for different chats",
                    "required": true
                }
            ]
        },
        {
            "name": "getAllStickerEmojis",
            "description": "Returns unique emoji that correspond to stickers to be found by the getStickers(sticker_type, query, 1000000, chat_id)",
            "type": "Emojis",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the stickers to search for",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Search query",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier for which to find stickers",
                    "required": true
                },
                {
                    "name": "return_only_main_emoji",
                    "type": "Bool",
                    "description": "Pass true if only main emoji for each found sticker must be included in the result",
                    "required": true
                }
            ]
        },
        {
            "name": "searchStickers",
            "description": "Searches for stickers from public sticker sets that correspond to any of the given emoji",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the stickers to return",
                    "required": true
                },
                {
                    "name": "emojis",
                    "type": "string",
                    "description": "Space-separated list of emojis to search for; must be non-empty",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stickers to be returned; 0-100",
                    "required": true
                }
            ]
        },
        {
            "name": "getGreetingStickers",
            "description": "Returns greeting stickers from regular sticker sets that can be used for the start page of other users",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "getPremiumStickers",
            "description": "Returns premium stickers from regular sticker sets",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of stickers to be returned; 0-100",
                    "required": true
                }
            ]
        },
        {
            "name": "getInstalledStickerSets",
            "description": "Returns a list of installed sticker sets",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the sticker sets to return",
                    "required": true
                }
            ]
        },
        {
            "name": "getArchivedStickerSets",
            "description": "Returns a list of archived sticker sets",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the sticker sets to return",
                    "required": true
                },
                {
                    "name": "offset_sticker_set_id",
                    "type": "int64",
                    "description": "Identifier of the sticker set from which to return the result; use 0 to get results from the beginning",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of sticker sets to return; up to 100",
                    "required": true
                }
            ]
        },
        {
            "name": "getTrendingStickerSets",
            "description": "Returns a list of trending sticker sets. For optimal performance, the number of returned sticker sets is chosen by TDLib",
            "type": "TrendingStickerSets",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the sticker sets to return",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "The offset from which to return the sticker sets; must be non-negative",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of sticker sets to be returned; up to 100. For optimal performance, the number of returned sticker sets is chosen by TDLib and can be smaller than the specified limit, even if the end of the list has not been reached",
                    "required": true
                }
            ]
        },
        {
            "name": "getAttachedStickerSets",
            "description": "Returns a list of sticker sets attached to a file, including regular, mask, and emoji sticker sets. Currently, only animations, photos, and videos can have attached sticker sets",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "File identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getStickerSet",
            "description": "Returns information about a sticker set by its identifier",
            "type": "StickerSet",
            "annotations": [
                {
                    "name": "set_id",
                    "type": "int64",
                    "description": "Identifier of the sticker set",
                    "required": true
                }
            ]
        },
        {
            "name": "searchStickerSet",
            "description": "Searches for a sticker set by its name",
            "type": "StickerSet",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the sticker set",
                    "required": true
                }
            ]
        },
        {
            "name": "searchInstalledStickerSets",
            "description": "Searches for installed sticker sets by looking for specified query in their title and name",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the sticker sets to search for",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of sticker sets to return",
                    "required": true
                }
            ]
        },
        {
            "name": "searchStickerSets",
            "description": "Searches for sticker sets by looking for specified query in their title and name. Excludes installed sticker sets from the results",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the sticker sets to return",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                }
            ]
        },
        {
            "name": "changeStickerSet",
            "description": "Installs/uninstalls or activates/archives a sticker set",
            "type": "Ok",
            "annotations": [
                {
                    "name": "set_id",
                    "type": "int64",
                    "description": "Identifier of the sticker set",
                    "required": true
                },
                {
                    "name": "is_installed",
                    "type": "Bool",
                    "description": "The new value of is_installed",
                    "required": true
                },
                {
                    "name": "is_archived",
                    "type": "Bool",
                    "description": "The new value of is_archived. A sticker set can't be installed and archived simultaneously",
                    "required": true
                }
            ]
        },
        {
            "name": "viewTrendingStickerSets",
            "description": "Informs the server that some trending sticker sets have been viewed by the user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker_set_ids",
                    "type": "vector<int64>",
                    "description": "Identifiers of viewed trending sticker sets",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderInstalledStickerSets",
            "description": "Changes the order of installed sticker sets",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the sticker sets to reorder",
                    "required": true
                },
                {
                    "name": "sticker_set_ids",
                    "type": "vector<int64>",
                    "description": "Identifiers of installed sticker sets in the new correct order",
                    "required": true
                }
            ]
        },
        {
            "name": "getRecentStickers",
            "description": "Returns a list of recently used stickers",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "is_attached",
                    "type": "Bool",
                    "description": "Pass true to return stickers and masks that were recently attached to photos or video files; pass false to return recently sent stickers",
                    "required": true
                }
            ]
        },
        {
            "name": "addRecentSticker",
            "description": "Manually adds a new sticker to the list of recently used stickers. The new sticker is added to the top of the list. If the sticker was already in the list, it is removed from the list first.",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "is_attached",
                    "type": "Bool",
                    "description": "Pass true to add the sticker to the list of stickers recently attached to photo or video files; pass false to add the sticker to the list of recently sent stickers",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker file to add",
                    "required": true
                }
            ]
        },
        {
            "name": "removeRecentSticker",
            "description": "Removes a sticker from the list of recently used stickers",
            "type": "Ok",
            "annotations": [
                {
                    "name": "is_attached",
                    "type": "Bool",
                    "description": "Pass true to remove the sticker from the list of stickers recently attached to photo or video files; pass false to remove the sticker from the list of recently sent stickers",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker file to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "clearRecentStickers",
            "description": "Clears the list of recently used stickers",
            "type": "Ok",
            "annotations": [
                {
                    "name": "is_attached",
                    "type": "Bool",
                    "description": "Pass true to clear the list of stickers recently attached to photo or video files; pass false to clear the list of recently sent stickers",
                    "required": true
                }
            ]
        },
        {
            "name": "getFavoriteStickers",
            "description": "Returns favorite stickers",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "addFavoriteSticker",
            "description": "Adds a new sticker to the list of favorite stickers. The new sticker is added to the top of the list. If the sticker was already in the list, it is removed from the list first.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker file to add",
                    "required": true
                }
            ]
        },
        {
            "name": "removeFavoriteSticker",
            "description": "Removes a sticker from the list of favorite stickers",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker file to delete from the list",
                    "required": true
                }
            ]
        },
        {
            "name": "getStickerEmojis",
            "description": "Returns emoji corresponding to a sticker. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object",
            "type": "Emojis",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker file identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "searchEmojis",
            "description": "Searches for emojis by keywords. Supported only if the file database is enabled. Order of results is unspecified",
            "type": "EmojiKeywords",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text to search for",
                    "required": true
                },
                {
                    "name": "input_language_codes",
                    "type": "vector<string>",
                    "description": "List of possible IETF language tags of the user's input language; may be empty if unknown",
                    "required": false
                }
            ]
        },
        {
            "name": "getKeywordEmojis",
            "description": "Return emojis matching the keyword. Supported only if the file database is enabled. Order of results is unspecified",
            "type": "Emojis",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text to search for",
                    "required": true
                },
                {
                    "name": "input_language_codes",
                    "type": "vector<string>",
                    "description": "List of possible IETF language tags of the user's input language; may be empty if unknown",
                    "required": false
                }
            ]
        },
        {
            "name": "getEmojiCategories",
            "description": "Returns available emoji categories",
            "type": "EmojiCategories",
            "annotations": [
                {
                    "name": "type",
                    "type": "EmojiCategoryType",
                    "description": "Type of emoji categories to return; pass null to get default emoji categories",
                    "required": false
                }
            ]
        },
        {
            "name": "getAnimatedEmoji",
            "description": "Returns an animated emoji corresponding to a given emoji. Returns a 404 error if the emoji has no animated emoji",
            "type": "AnimatedEmoji",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "The emoji",
                    "required": true
                }
            ]
        },
        {
            "name": "getEmojiSuggestionsUrl",
            "description": "Returns an HTTP URL which can be used to automatically log in to the translation platform and suggest new emoji replacements. The URL will be valid for 30 seconds after generation",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "Language code for which the emoji replacements will be suggested",
                    "required": true
                }
            ]
        },
        {
            "name": "getCustomEmojiStickers",
            "description": "Returns the list of custom emoji stickers by their identifiers. Stickers are returned in arbitrary order. Only found stickers are returned",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "custom_emoji_ids",
                    "type": "vector<int64>",
                    "description": "Identifiers of custom emoji stickers. At most 200 custom emoji stickers can be received simultaneously",
                    "required": true
                }
            ]
        },
        {
            "name": "getDefaultChatPhotoCustomEmojiStickers",
            "description": "Returns default list of custom emoji stickers for placing on a chat photo",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "getDefaultProfilePhotoCustomEmojiStickers",
            "description": "Returns default list of custom emoji stickers for placing on a profile photo",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "getDefaultBackgroundCustomEmojiStickers",
            "description": "Returns default list of custom emoji stickers for reply background",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "getSavedAnimations",
            "description": "Returns saved animations",
            "type": "Animations",
            "annotations": []
        },
        {
            "name": "addSavedAnimation",
            "description": "Manually adds a new animation to the list of saved animations. The new animation is added to the beginning of the list. If the animation was already in the list, it is removed first.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "animation",
                    "type": "InputFile",
                    "description": "The animation file to be added. Only animations known to the server (i.e., successfully sent via a message) can be added to the list",
                    "required": true
                }
            ]
        },
        {
            "name": "removeSavedAnimation",
            "description": "Removes an animation from the list of saved animations",
            "type": "Ok",
            "annotations": [
                {
                    "name": "animation",
                    "type": "InputFile",
                    "description": "Animation file to be removed",
                    "required": true
                }
            ]
        },
        {
            "name": "getRecentInlineBots",
            "description": "Returns up to 20 recently used inline bots in the order of their last usage",
            "type": "Users",
            "annotations": []
        },
        {
            "name": "searchHashtags",
            "description": "Searches for recently used hashtags by their prefix",
            "type": "Hashtags",
            "annotations": [
                {
                    "name": "prefix",
                    "type": "string",
                    "description": "Hashtag prefix to search for",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of hashtags to be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "removeRecentHashtag",
            "description": "Removes a hashtag from the list of recently used hashtags",
            "type": "Ok",
            "annotations": [
                {
                    "name": "hashtag",
                    "type": "string",
                    "description": "Hashtag to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "getLinkPreview",
            "description": "Returns a link preview by the text of a message. Do not call this function too often. Returns a 404 error if the text has no link preview",
            "type": "LinkPreview",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Message text with formatting",
                    "required": true
                },
                {
                    "name": "link_preview_options",
                    "type": "linkPreviewOptions",
                    "description": "Options to be used for generation of the link preview; pass null to use default link preview options",
                    "required": false
                }
            ]
        },
        {
            "name": "getWebPageInstantView",
            "description": "Returns an instant view version of a web page if available. Returns a 404 error if the web page has no instant view page",
            "type": "WebPageInstantView",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The web page URL",
                    "required": true
                },
                {
                    "name": "force_full",
                    "type": "Bool",
                    "description": "Pass true to get full instant view for the web page",
                    "required": true
                }
            ]
        },
        {
            "name": "setProfilePhoto",
            "description": "Changes a profile photo for the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "photo",
                    "type": "InputChatPhoto",
                    "description": "Profile photo to set",
                    "required": true
                },
                {
                    "name": "is_public",
                    "type": "Bool",
                    "description": "Pass true to set a public photo, which will be visible even the main photo is hidden by privacy settings",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteProfilePhoto",
            "description": "Deletes a profile photo",
            "type": "Ok",
            "annotations": [
                {
                    "name": "profile_photo_id",
                    "type": "int64",
                    "description": "Identifier of the profile photo to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "setAccentColor",
            "description": "Changes accent color and background custom emoji for the current user; for Telegram Premium users only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color to use",
                    "required": true
                },
                {
                    "name": "background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the reply header and link preview background; 0 if none",
                    "required": true
                }
            ]
        },
        {
            "name": "setProfileAccentColor",
            "description": "Changes accent color and background custom emoji for profile of the current user; for Telegram Premium users only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "profile_accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color to use for profile; pass -1 if none",
                    "required": true
                },
                {
                    "name": "profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the user's profile photo background; 0 if none",
                    "required": true
                }
            ]
        },
        {
            "name": "setName",
            "description": "Changes the first and last name of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "first_name",
                    "type": "string",
                    "description": "The new value of the first name for the current user; 1-64 characters",
                    "required": true
                },
                {
                    "name": "last_name",
                    "type": "string",
                    "description": "The new value of the optional last name for the current user; 0-64 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "setBio",
            "description": "Changes the bio of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bio",
                    "type": "string",
                    "description": "The new value of the user bio; 0-getOption('bio_length_max') characters without line feeds",
                    "required": true
                }
            ]
        },
        {
            "name": "setUsername",
            "description": "Changes the editable username of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "The new value of the username. Use an empty string to remove the username. The username can't be completely removed if there is another active or disabled username",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleUsernameIsActive",
            "description": "Changes active state for a username of the current user. The editable username can't be disabled. May return an error with a message 'USERNAMES_ACTIVE_TOO_MUCH' if the maximum number of active usernames has been reached",
            "type": "Ok",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "The username to change",
                    "required": true
                },
                {
                    "name": "is_active",
                    "type": "Bool",
                    "description": "Pass true to activate the username; pass false to disable it",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderActiveUsernames",
            "description": "Changes order of active usernames of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "usernames",
                    "type": "vector<string>",
                    "description": "The new order of active usernames. All currently active usernames must be specified",
                    "required": true
                }
            ]
        },
        {
            "name": "setBirthdate",
            "description": "Changes the birthdate of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "birthdate",
                    "type": "birthdate",
                    "description": "The new value of the current user's birthdate; pass null to remove the birthdate",
                    "required": false
                }
            ]
        },
        {
            "name": "setPersonalChat",
            "description": "Changes the personal chat of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the new personal chat; pass 0 to remove the chat. Use getSuitablePersonalChats to get suitable chats",
                    "required": true
                }
            ]
        },
        {
            "name": "setEmojiStatus",
            "description": "Changes the emoji status of the current user; for Telegram Premium users only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "emoji_status",
                    "type": "emojiStatus",
                    "description": "New emoji status; pass null to switch to the default badge",
                    "required": false
                }
            ]
        },
        {
            "name": "setLocation",
            "description": "Changes the location of the current user. Needs to be called if getOption('is_location_visible') is true and location changes for more than 1 kilometer. Must not be called if the user has a business location",
            "type": "Ok",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The new location of the user",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleHasSponsoredMessagesEnabled",
            "description": "Toggles whether the current user has sponsored messages enabled. The setting has no effect for users without Telegram Premium for which sponsored messages are always enabled",
            "type": "Ok",
            "annotations": [
                {
                    "name": "has_sponsored_messages_enabled",
                    "type": "Bool",
                    "description": "Pass true to enable sponsored messages for the current user; false to disable them",
                    "required": true
                }
            ]
        },
        {
            "name": "setBusinessLocation",
            "description": "Changes the business location of the current user. Requires Telegram Business subscription",
            "type": "Ok",
            "annotations": [
                {
                    "name": "location",
                    "type": "businessLocation",
                    "description": "The new location of the business; pass null to remove the location",
                    "required": false
                }
            ]
        },
        {
            "name": "setBusinessOpeningHours",
            "description": "Changes the business opening hours of the current user. Requires Telegram Business subscription",
            "type": "Ok",
            "annotations": [
                {
                    "name": "opening_hours",
                    "type": "businessOpeningHours",
                    "description": "The new opening hours of the business; pass null to remove the opening hours; up to 28 time intervals can be specified",
                    "required": false
                }
            ]
        },
        {
            "name": "setBusinessGreetingMessageSettings",
            "description": "Changes the business greeting message settings of the current user. Requires Telegram Business subscription",
            "type": "Ok",
            "annotations": [
                {
                    "name": "greeting_message_settings",
                    "type": "businessGreetingMessageSettings",
                    "description": "The new settings for the greeting message of the business; pass null to disable the greeting message",
                    "required": false
                }
            ]
        },
        {
            "name": "setBusinessAwayMessageSettings",
            "description": "Changes the business away message settings of the current user. Requires Telegram Business subscription",
            "type": "Ok",
            "annotations": [
                {
                    "name": "away_message_settings",
                    "type": "businessAwayMessageSettings",
                    "description": "The new settings for the away message of the business; pass null to disable the away message",
                    "required": false
                }
            ]
        },
        {
            "name": "setBusinessStartPage",
            "description": "Changes the business start page of the current user. Requires Telegram Business subscription",
            "type": "Ok",
            "annotations": [
                {
                    "name": "start_page",
                    "type": "inputBusinessStartPage",
                    "description": "The new start page of the business; pass null to remove custom start page",
                    "required": false
                }
            ]
        },
        {
            "name": "sendPhoneNumberCode",
            "description": "Sends a code to the specified phone number. Aborts previous phone number verification if there was one. On success, returns information about the sent code",
            "type": "AuthenticationCodeInfo",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "The phone number, in international format",
                    "required": true
                },
                {
                    "name": "settings",
                    "type": "phoneNumberAuthenticationSettings",
                    "description": "Settings for the authentication of the user's phone number; pass null to use default settings",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "PhoneNumberCodeType",
                    "description": "Type of the request for which the code is sent",
                    "required": true
                }
            ]
        },
        {
            "name": "sendPhoneNumberFirebaseSms",
            "description": "Sends Firebase Authentication SMS to the specified phone number. Works only when received a code of the type authenticationCodeTypeFirebaseAndroid or authenticationCodeTypeFirebaseIos",
            "type": "Ok",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Play Integrity API or SafetyNet Attestation API token for the Android application, or secret from push notification for the iOS application",
                    "required": true
                }
            ]
        },
        {
            "name": "reportPhoneNumberCodeMissing",
            "description": "Reports that authentication code wasn't delivered via SMS to the specified phone number; for official mobile applications only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "mobile_network_code",
                    "type": "string",
                    "description": "Current mobile network code",
                    "required": true
                }
            ]
        },
        {
            "name": "resendPhoneNumberCode",
            "description": "Resends the authentication code sent to a phone number. Works only if the previously received authenticationCodeInfo next_code_type was not null and the server-specified timeout has passed",
            "type": "AuthenticationCodeInfo",
            "annotations": [
                {
                    "name": "reason",
                    "type": "ResendCodeReason",
                    "description": "Reason of code resending; pass null if unknown",
                    "required": false
                }
            ]
        },
        {
            "name": "checkPhoneNumberCode",
            "description": "Check the authentication code and completes the request for which the code was sent if appropriate",
            "type": "Ok",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "Authentication code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "getBusinessConnectedBot",
            "description": "Returns the business bot that is connected to the current user account. Returns a 404 error if there is no connected bot",
            "type": "BusinessConnectedBot",
            "annotations": []
        },
        {
            "name": "setBusinessConnectedBot",
            "description": "Adds or changes business bot that is connected to the current user account",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot",
                    "type": "businessConnectedBot",
                    "description": "Connection settings for the bot",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteBusinessConnectedBot",
            "description": "Deletes the business bot that is connected to the current user account",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Unique user identifier for the bot",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleBusinessConnectedBotChatIsPaused",
            "description": "Pauses or resumes the connected business bot in a specific chat",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_paused",
                    "type": "Bool",
                    "description": "Pass true to pause the connected bot in the chat; pass false to resume the bot",
                    "required": true
                }
            ]
        },
        {
            "name": "removeBusinessConnectedBotFromChat",
            "description": "Removes the connected business bot from a specific chat by adding the chat to businessRecipients.excluded_chat_ids",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getBusinessChatLinks",
            "description": "Returns business chat links created for the current account",
            "type": "BusinessChatLinks",
            "annotations": []
        },
        {
            "name": "createBusinessChatLink",
            "description": "Creates a business chat link for the current account. Requires Telegram Business subscription. There can be up to getOption('business_chat_link_count_max') links created. Returns the created link",
            "type": "BusinessChatLink",
            "annotations": [
                {
                    "name": "link_info",
                    "type": "inputBusinessChatLink",
                    "description": "Information about the link to create",
                    "required": true
                }
            ]
        },
        {
            "name": "editBusinessChatLink",
            "description": "Edits a business chat link of the current account. Requires Telegram Business subscription. Returns the edited link",
            "type": "BusinessChatLink",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link to edit",
                    "required": true
                },
                {
                    "name": "link_info",
                    "type": "inputBusinessChatLink",
                    "description": "New description of the link",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteBusinessChatLink",
            "description": "Deletes a business chat link of the current account",
            "type": "Ok",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "getBusinessChatLinkInfo",
            "description": "Returns information about a business chat link",
            "type": "BusinessChatLinkInfo",
            "annotations": [
                {
                    "name": "link_name",
                    "type": "string",
                    "description": "Name of the link",
                    "required": true
                }
            ]
        },
        {
            "name": "getUserLink",
            "description": "Returns an HTTPS link, which can be used to get information about the current user",
            "type": "UserLink",
            "annotations": []
        },
        {
            "name": "searchUserByToken",
            "description": "Searches a user by a token from the user's link",
            "type": "User",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Token to search for",
                    "required": true
                }
            ]
        },
        {
            "name": "setCommands",
            "description": "Sets the list of commands supported by the bot for the given user scope and language; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "scope",
                    "type": "BotCommandScope",
                    "description": "The scope to which the commands are relevant; pass null to change commands in the default bot command scope",
                    "required": false
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code. If empty, the commands will be applied to all users from the given scope, for which language there are no dedicated commands",
                    "required": true
                },
                {
                    "name": "commands",
                    "type": "vector<botCommand>",
                    "description": "List of the bot's commands",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteCommands",
            "description": "Deletes commands supported by the bot for the given user scope and language; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "scope",
                    "type": "BotCommandScope",
                    "description": "The scope to which the commands are relevant; pass null to delete commands in the default bot command scope",
                    "required": false
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code or an empty string",
                    "required": true
                }
            ]
        },
        {
            "name": "getCommands",
            "description": "Returns the list of commands supported by the bot for the given user scope and language; for bots only",
            "type": "BotCommands",
            "annotations": [
                {
                    "name": "scope",
                    "type": "BotCommandScope",
                    "description": "The scope to which the commands are relevant; pass null to get commands in the default bot command scope",
                    "required": false
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code or an empty string",
                    "required": true
                }
            ]
        },
        {
            "name": "setMenuButton",
            "description": "Sets menu button for the given user or for all users; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user or 0 to set menu button for all users",
                    "required": true
                },
                {
                    "name": "menu_button",
                    "type": "botMenuButton",
                    "description": "New menu button",
                    "required": true
                }
            ]
        },
        {
            "name": "getMenuButton",
            "description": "Returns menu button set by the bot for the given user; for bots only",
            "type": "BotMenuButton",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user or 0 to get the default menu button",
                    "required": true
                }
            ]
        },
        {
            "name": "setDefaultGroupAdministratorRights",
            "description": "Sets default administrator rights for adding the bot to basic group and supergroup chats; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "default_group_administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Default administrator rights for adding the bot to basic group and supergroup chats; pass null to remove default rights",
                    "required": false
                }
            ]
        },
        {
            "name": "setDefaultChannelAdministratorRights",
            "description": "Sets default administrator rights for adding the bot to channel chats; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "default_channel_administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Default administrator rights for adding the bot to channels; pass null to remove default rights",
                    "required": false
                }
            ]
        },
        {
            "name": "canBotSendMessages",
            "description": "Checks whether the specified bot can send messages to the user. Returns a 404 error if can't and the access can be granted by call to allowBotToSendMessages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                }
            ]
        },
        {
            "name": "allowBotToSendMessages",
            "description": "Allows the specified bot to send messages to the user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                }
            ]
        },
        {
            "name": "sendWebAppCustomRequest",
            "description": "Sends a custom request from a Web App",
            "type": "CustomRequestResult",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the bot",
                    "required": true
                },
                {
                    "name": "method",
                    "type": "string",
                    "description": "The method name",
                    "required": true
                },
                {
                    "name": "parameters",
                    "type": "string",
                    "description": "JSON-serialized method parameters",
                    "required": true
                }
            ]
        },
        {
            "name": "getBotMediaPreviews",
            "description": "Returns the list of media previews of a bot",
            "type": "BotMediaPreviews",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot. The bot must have the main Web App",
                    "required": true
                }
            ]
        },
        {
            "name": "getBotMediaPreviewInfo",
            "description": "Returns the list of media previews for the given language and the list of languages for which the bot has dedicated previews",
            "type": "BotMediaPreviewInfo",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot. The bot must be owned and must have the main Web App",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code for which to get previews. If empty, then default previews are returned",
                    "required": true
                }
            ]
        },
        {
            "name": "addBotMediaPreview",
            "description": "Adds a new media preview to the beginning of the list of media previews of a bot. Returns the added preview after addition is completed server-side. The total number of previews must not exceed getOption('bot_media_preview_count_max') for the given language",
            "type": "BotMediaPreview",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot. The bot must be owned and must have the main Web App",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code for which preview is added. If empty, then the preview will be shown to all users for whose languages there are no dedicated previews.",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "InputStoryContent",
                    "description": "Content of the added preview",
                    "required": true
                }
            ]
        },
        {
            "name": "editBotMediaPreview",
            "description": "Replaces media preview in the list of media previews of a bot. Returns the new preview after edit is completed server-side",
            "type": "BotMediaPreview",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot. The bot must be owned and must have the main Web App",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "Language code of the media preview to edit",
                    "required": true
                },
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "File identifier of the media to replace",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "InputStoryContent",
                    "description": "Content of the new preview",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderBotMediaPreviews",
            "description": "Changes order of media previews in the list of media previews of a bot",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot. The bot must be owned and must have the main Web App",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "Language code of the media previews to reorder",
                    "required": true
                },
                {
                    "name": "file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the media in the new order",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteBotMediaPreviews",
            "description": "Delete media previews from the list of media previews of a bot",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot. The bot must be owned and must have the main Web App",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "Language code of the media previews to delete",
                    "required": true
                },
                {
                    "name": "file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the media to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "setBotName",
            "description": "Sets the name of a bot. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code. If empty, the name will be shown to all users for whose languages there is no dedicated name",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "New bot's name on the specified language; 0-64 characters; must be non-empty if language code is empty",
                    "required": true
                }
            ]
        },
        {
            "name": "getBotName",
            "description": "Returns the name of a bot in the given language. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Text",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code or an empty string",
                    "required": true
                }
            ]
        },
        {
            "name": "setBotProfilePhoto",
            "description": "Changes a profile photo for a bot",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "InputChatPhoto",
                    "description": "Profile photo to set; pass null to delete the chat photo",
                    "required": false
                }
            ]
        },
        {
            "name": "toggleBotUsernameIsActive",
            "description": "Changes active state for a username of a bot. The editable username can't be disabled. May return an error with a message 'USERNAMES_ACTIVE_TOO_MUCH' if the maximum number of active usernames has been reached. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "The username to change",
                    "required": true
                },
                {
                    "name": "is_active",
                    "type": "Bool",
                    "description": "Pass true to activate the username; pass false to disable it",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderBotActiveUsernames",
            "description": "Changes order of active usernames of a bot. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "usernames",
                    "type": "vector<string>",
                    "description": "The new order of active usernames. All currently active usernames must be specified",
                    "required": true
                }
            ]
        },
        {
            "name": "setBotInfoDescription",
            "description": "Sets the text shown in the chat with a bot if the chat is empty. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code. If empty, the description will be shown to all users for whose languages there is no dedicated description",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "New bot's description on the specified language",
                    "required": true
                }
            ]
        },
        {
            "name": "getBotInfoDescription",
            "description": "Returns the text shown in the chat with a bot if the chat is empty in the given language. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Text",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code or an empty string",
                    "required": true
                }
            ]
        },
        {
            "name": "setBotInfoShortDescription",
            "description": "Sets the text shown on a bot's profile page and sent together with the link when users share the bot. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code. If empty, the short description will be shown to all users for whose languages there is no dedicated description",
                    "required": true
                },
                {
                    "name": "short_description",
                    "type": "string",
                    "description": "New bot's short description on the specified language",
                    "required": true
                }
            ]
        },
        {
            "name": "getBotInfoShortDescription",
            "description": "Returns the text shown on a bot's profile page and sent together with the link when users share the bot in the given language. Can be called only if userTypeBot.can_be_edited == true",
            "type": "Text",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Identifier of the target bot",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code or an empty string",
                    "required": true
                }
            ]
        },
        {
            "name": "getActiveSessions",
            "description": "Returns all active sessions of the current user",
            "type": "Sessions",
            "annotations": []
        },
        {
            "name": "terminateSession",
            "description": "Terminates a session of the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "session_id",
                    "type": "int64",
                    "description": "Session identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "terminateAllOtherSessions",
            "description": "Terminates all other sessions of the current user",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "confirmSession",
            "description": "Confirms an unconfirmed session of the current user from another device",
            "type": "Ok",
            "annotations": [
                {
                    "name": "session_id",
                    "type": "int64",
                    "description": "Session identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSessionCanAcceptCalls",
            "description": "Toggles whether a session can accept incoming calls",
            "type": "Ok",
            "annotations": [
                {
                    "name": "session_id",
                    "type": "int64",
                    "description": "Session identifier",
                    "required": true
                },
                {
                    "name": "can_accept_calls",
                    "type": "Bool",
                    "description": "Pass true to allow accepting incoming calls by the session; pass false otherwise",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSessionCanAcceptSecretChats",
            "description": "Toggles whether a session can accept incoming secret chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "session_id",
                    "type": "int64",
                    "description": "Session identifier",
                    "required": true
                },
                {
                    "name": "can_accept_secret_chats",
                    "type": "Bool",
                    "description": "Pass true to allow accepting secret chats by the session; pass false otherwise",
                    "required": true
                }
            ]
        },
        {
            "name": "setInactiveSessionTtl",
            "description": "Changes the period of inactivity after which sessions will automatically be terminated",
            "type": "Ok",
            "annotations": [
                {
                    "name": "inactive_session_ttl_days",
                    "type": "int32",
                    "description": "New number of days of inactivity before sessions will be automatically terminated; 1-366 days",
                    "required": true
                }
            ]
        },
        {
            "name": "getConnectedWebsites",
            "description": "Returns all website where the current user used Telegram to log in",
            "type": "ConnectedWebsites",
            "annotations": []
        },
        {
            "name": "disconnectWebsite",
            "description": "Disconnects website from the current user's Telegram account",
            "type": "Ok",
            "annotations": [
                {
                    "name": "website_id",
                    "type": "int64",
                    "description": "Website identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "disconnectAllWebsites",
            "description": "Disconnects all websites from the current user's Telegram account",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "setSupergroupUsername",
            "description": "Changes the editable username of a supergroup or channel, requires owner privileges in the supergroup or channel",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "New value of the username. Use an empty string to remove the username. The username can't be completely removed if there is another active or disabled username",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupUsernameIsActive",
            "description": "Changes active state for a username of a supergroup or channel, requires owner privileges in the supergroup or channel. The editable username can't be disabled.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "The username to change",
                    "required": true
                },
                {
                    "name": "is_active",
                    "type": "Bool",
                    "description": "Pass true to activate the username; pass false to disable it",
                    "required": true
                }
            ]
        },
        {
            "name": "disableAllSupergroupUsernames",
            "description": "Disables all active non-editable usernames of a supergroup or channel, requires owner privileges in the supergroup or channel",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                }
            ]
        },
        {
            "name": "reorderSupergroupActiveUsernames",
            "description": "Changes order of active usernames of a supergroup or channel, requires owner privileges in the supergroup or channel",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                },
                {
                    "name": "usernames",
                    "type": "vector<string>",
                    "description": "The new order of active usernames. All currently active usernames must be specified",
                    "required": true
                }
            ]
        },
        {
            "name": "setSupergroupStickerSet",
            "description": "Changes the sticker set of a supergroup; requires can_change_info administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup",
                    "required": true
                },
                {
                    "name": "sticker_set_id",
                    "type": "int64",
                    "description": "New value of the supergroup sticker set identifier. Use 0 to remove the supergroup sticker set",
                    "required": true
                }
            ]
        },
        {
            "name": "setSupergroupCustomEmojiStickerSet",
            "description": "Changes the custom emoji sticker set of a supergroup; requires can_change_info administrator right. The chat must have at least chatBoostFeatures.min_custom_emoji_sticker_set_boost_level boost level to pass the corresponding color",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup",
                    "required": true
                },
                {
                    "name": "custom_emoji_sticker_set_id",
                    "type": "int64",
                    "description": "New value of the custom emoji sticker set identifier for the supergroup. Use 0 to remove the custom emoji sticker set in the supergroup",
                    "required": true
                }
            ]
        },
        {
            "name": "setSupergroupUnrestrictBoostCount",
            "description": "Changes the number of times the supergroup must be boosted by a user to ignore slow mode and chat permission restrictions; requires can_restrict_members administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup",
                    "required": true
                },
                {
                    "name": "unrestrict_boost_count",
                    "type": "int32",
                    "description": "New value of the unrestrict_boost_count supergroup setting; 0-8. Use 0 to remove the setting",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupSignMessages",
            "description": "Toggles whether sender signature or link to the account is added to sent messages in a channel; requires can_change_info member right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the channel",
                    "required": true
                },
                {
                    "name": "sign_messages",
                    "type": "Bool",
                    "description": "New value of sign_messages",
                    "required": true
                },
                {
                    "name": "show_message_sender",
                    "type": "Bool",
                    "description": "New value of show_message_sender",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupJoinToSendMessages",
            "description": "Toggles whether joining is mandatory to send messages to a discussion supergroup; requires can_restrict_members administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup that isn't a broadcast group",
                    "required": true
                },
                {
                    "name": "join_to_send_messages",
                    "type": "Bool",
                    "description": "New value of join_to_send_messages",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupJoinByRequest",
            "description": "Toggles whether all users directly joining the supergroup need to be approved by supergroup administrators; requires can_restrict_members administrator right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup that isn't a broadcast group",
                    "required": true
                },
                {
                    "name": "join_by_request",
                    "type": "Bool",
                    "description": "New value of join_by_request",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupIsAllHistoryAvailable",
            "description": "Toggles whether the message history of a supergroup is available to new members; requires can_change_info member right",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "The identifier of the supergroup",
                    "required": true
                },
                {
                    "name": "is_all_history_available",
                    "type": "Bool",
                    "description": "The new value of is_all_history_available",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupCanHaveSponsoredMessages",
            "description": "Toggles whether sponsored messages are shown in the channel chat; requires owner privileges in the channel. The chat must have at least chatBoostFeatures.min_sponsored_message_disable_boost_level boost level to disable sponsored messages",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "The identifier of the channel",
                    "required": true
                },
                {
                    "name": "can_have_sponsored_messages",
                    "type": "Bool",
                    "description": "The new value of can_have_sponsored_messages",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupHasHiddenMembers",
            "description": "Toggles whether non-administrators can receive only administrators and bots using getSupergroupMembers or searchChatMembers. Can be called only if supergroupFullInfo.can_hide_members == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup",
                    "required": true
                },
                {
                    "name": "has_hidden_members",
                    "type": "Bool",
                    "description": "New value of has_hidden_members",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupHasAggressiveAntiSpamEnabled",
            "description": "Toggles whether aggressive anti-spam checks are enabled in the supergroup. Can be called only if supergroupFullInfo.can_toggle_aggressive_anti_spam == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "The identifier of the supergroup, which isn't a broadcast group",
                    "required": true
                },
                {
                    "name": "has_aggressive_anti_spam_enabled",
                    "type": "Bool",
                    "description": "The new value of has_aggressive_anti_spam_enabled",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupIsForum",
            "description": "Toggles whether the supergroup is a forum; requires owner privileges in the supergroup. Discussion supergroups can't be converted to forums",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup",
                    "required": true
                },
                {
                    "name": "is_forum",
                    "type": "Bool",
                    "description": "New value of is_forum",
                    "required": true
                }
            ]
        },
        {
            "name": "toggleSupergroupIsBroadcastGroup",
            "description": "Upgrades supergroup to a broadcast group; requires owner privileges in the supergroup",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup",
                    "required": true
                }
            ]
        },
        {
            "name": "reportSupergroupSpam",
            "description": "Reports messages in a supergroup as spam; requires administrator rights in the supergroup",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup identifier",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of messages to report. Use messageProperties.can_be_reported to check whether the message can be reported",
                    "required": true
                }
            ]
        },
        {
            "name": "reportSupergroupAntiSpamFalsePositive",
            "description": "Reports a false deletion of a message by aggressive anti-spam checks; requires administrator rights in the supergroup. Can be called only for messages from chatEventMessageDeleted with can_report_anti_spam_false_positive == true",
            "type": "Ok",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the erroneously deleted message from chatEventMessageDeleted",
                    "required": true
                }
            ]
        },
        {
            "name": "getSupergroupMembers",
            "description": "Returns information about members or banned users in a supergroup or channel. Can be used only if supergroupFullInfo.can_get_members == true; additionally, administrator privileges may be required for some filters",
            "type": "ChatMembers",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                },
                {
                    "name": "filter",
                    "type": "SupergroupMembersFilter",
                    "description": "The type of users to return; pass null to use supergroupMembersFilterRecent",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Number of users to skip",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of users to be returned; up to 200",
                    "required": true
                }
            ]
        },
        {
            "name": "closeSecretChat",
            "description": "Closes a secret chat, effectively transferring its state to secretChatStateClosed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "secret_chat_id",
                    "type": "int32",
                    "description": "Secret chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatEventLog",
            "description": "Returns a list of service actions taken by chat members and administrators in the last 48 hours. Available only for supergroups and channels. Requires administrator rights. Returns results in reverse chronological order (i.e., in order of decreasing event_id)",
            "type": "ChatEvents",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Search query by which to filter events",
                    "required": true
                },
                {
                    "name": "from_event_id",
                    "type": "int64",
                    "description": "Identifier of an event from which to return results. Use 0 to get results from the latest events",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of events to return; up to 100",
                    "required": true
                },
                {
                    "name": "filters",
                    "type": "chatEventLogFilters",
                    "description": "The types of events to return; pass null to get chat events of all types",
                    "required": false
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers by which to filter events. By default, events relating to all users will be returned",
                    "required": true
                }
            ]
        },
        {
            "name": "getTimeZones",
            "description": "Returns the list of supported time zones",
            "type": "TimeZones",
            "annotations": []
        },
        {
            "name": "getPaymentForm",
            "description": "Returns an invoice payment form. This method must be called when the user presses inline button of the type inlineKeyboardButtonTypeBuy, or wants to buy access to media in a messagePaidMedia message",
            "type": "PaymentForm",
            "annotations": [
                {
                    "name": "input_invoice",
                    "type": "InputInvoice",
                    "description": "The invoice",
                    "required": true
                },
                {
                    "name": "theme",
                    "type": "themeParameters",
                    "description": "Preferred payment form theme; pass null to use the default theme",
                    "required": false
                }
            ]
        },
        {
            "name": "validateOrderInfo",
            "description": "Validates the order information provided by a user and returns the available shipping options for a flexible invoice",
            "type": "ValidatedOrderInfo",
            "annotations": [
                {
                    "name": "input_invoice",
                    "type": "InputInvoice",
                    "description": "The invoice",
                    "required": true
                },
                {
                    "name": "order_info",
                    "type": "orderInfo",
                    "description": "The order information, provided by the user; pass null if empty",
                    "required": false
                },
                {
                    "name": "allow_save",
                    "type": "Bool",
                    "description": "Pass true to save the order information",
                    "required": true
                }
            ]
        },
        {
            "name": "sendPaymentForm",
            "description": "Sends a filled-out payment form to the bot for final verification",
            "type": "PaymentResult",
            "annotations": [
                {
                    "name": "input_invoice",
                    "type": "InputInvoice",
                    "description": "The invoice",
                    "required": true
                },
                {
                    "name": "payment_form_id",
                    "type": "int64",
                    "description": "Payment form identifier returned by getPaymentForm",
                    "required": true
                },
                {
                    "name": "order_info_id",
                    "type": "string",
                    "description": "Identifier returned by validateOrderInfo, or an empty string",
                    "required": true
                },
                {
                    "name": "shipping_option_id",
                    "type": "string",
                    "description": "Identifier of a chosen shipping option, if applicable",
                    "required": true
                },
                {
                    "name": "credentials",
                    "type": "InputCredentials",
                    "description": "The credentials chosen by user for payment; pass null for a payment in Telegram Stars",
                    "required": false
                },
                {
                    "name": "tip_amount",
                    "type": "int53",
                    "description": "Chosen by the user amount of tip in the smallest units of the currency",
                    "required": true
                }
            ]
        },
        {
            "name": "getPaymentReceipt",
            "description": "Returns information about a successful payment",
            "type": "PaymentReceipt",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the messagePaymentSuccessful message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getSavedOrderInfo",
            "description": "Returns saved order information. Returns a 404 error if there is no saved order information",
            "type": "OrderInfo",
            "annotations": []
        },
        {
            "name": "deleteSavedOrderInfo",
            "description": "Deletes saved order information",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "deleteSavedCredentials",
            "description": "Deletes saved credentials for all payment provider bots",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "createInvoiceLink",
            "description": "Creates a link for the given invoice; for bots only",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "invoice",
                    "type": "InputMessageContent",
                    "description": "Information about the invoice of the type inputMessageInvoice",
                    "required": true
                }
            ]
        },
        {
            "name": "refundStarPayment",
            "description": "Refunds a previously done payment in Telegram Stars",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user that did the payment",
                    "required": true
                },
                {
                    "name": "telegram_payment_charge_id",
                    "type": "string",
                    "description": "Telegram payment identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getSupportUser",
            "description": "Returns a user that can be contacted to get support",
            "type": "User",
            "annotations": []
        },
        {
            "name": "getBackgroundUrl",
            "description": "Constructs a persistent HTTP URL for a background",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Background name",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "BackgroundType",
                    "description": "Background type; backgroundTypeChatTheme isn't supported",
                    "required": true
                }
            ]
        },
        {
            "name": "searchBackground",
            "description": "Searches for a background by its name",
            "type": "Background",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the background",
                    "required": true
                }
            ]
        },
        {
            "name": "setDefaultBackground",
            "description": "Sets default background for chats; adds the background to the list of installed backgrounds",
            "type": "Background",
            "annotations": [
                {
                    "name": "background",
                    "type": "InputBackground",
                    "description": "The input background to use; pass null to create a new filled background",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "BackgroundType",
                    "description": "Background type; pass null to use the default type of the remote background; backgroundTypeChatTheme isn't supported",
                    "required": false
                },
                {
                    "name": "for_dark_theme",
                    "type": "Bool",
                    "description": "Pass true if the background is set for a dark theme",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteDefaultBackground",
            "description": "Deletes default background for chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "for_dark_theme",
                    "type": "Bool",
                    "description": "Pass true if the background is deleted for a dark theme",
                    "required": true
                }
            ]
        },
        {
            "name": "getInstalledBackgrounds",
            "description": "Returns backgrounds installed by the user",
            "type": "Backgrounds",
            "annotations": [
                {
                    "name": "for_dark_theme",
                    "type": "Bool",
                    "description": "Pass true to order returned backgrounds for a dark theme",
                    "required": true
                }
            ]
        },
        {
            "name": "removeInstalledBackground",
            "description": "Removes background from the list of installed backgrounds",
            "type": "Ok",
            "annotations": [
                {
                    "name": "background_id",
                    "type": "int64",
                    "description": "The background identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "resetInstalledBackgrounds",
            "description": "Resets list of installed backgrounds to its default value",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getLocalizationTargetInfo",
            "description": "Returns information about the current localization target. This is an offline request if only_local is true. Can be called before authorization",
            "type": "LocalizationTargetInfo",
            "annotations": [
                {
                    "name": "only_local",
                    "type": "Bool",
                    "description": "Pass true to get only locally available information without sending network requests",
                    "required": true
                }
            ]
        },
        {
            "name": "getLanguagePackInfo",
            "description": "Returns information about a language pack. Returned language pack identifier may be different from a provided one. Can be called before authorization",
            "type": "LanguagePackInfo",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Language pack identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getLanguagePackStrings",
            "description": "Returns strings from a language pack in the current localization target by their keys. Can be called before authorization",
            "type": "LanguagePackStrings",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Language pack identifier of the strings to be returned",
                    "required": true
                },
                {
                    "name": "keys",
                    "type": "vector<string>",
                    "description": "Language pack keys of the strings to be returned; leave empty to request all available strings",
                    "required": true
                }
            ]
        },
        {
            "name": "synchronizeLanguagePack",
            "description": "Fetches the latest versions of all strings from a language pack in the current localization target from the server.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Language pack identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "addCustomServerLanguagePack",
            "description": "Adds a custom server language pack to the list of installed language packs in current localization target. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Identifier of a language pack to be added",
                    "required": true
                }
            ]
        },
        {
            "name": "setCustomLanguagePack",
            "description": "Adds or changes a custom local language pack to the current localization target",
            "type": "Ok",
            "annotations": [
                {
                    "name": "info",
                    "type": "languagePackInfo",
                    "description": "Information about the language pack. Language pack identifier must start with 'X', consist only of English letters, digits and hyphens, and must not exceed 64 characters. Can be called before authorization",
                    "required": true
                },
                {
                    "name": "strings",
                    "type": "vector<languagePackString>",
                    "description": "Strings of the new language pack",
                    "required": true
                }
            ]
        },
        {
            "name": "editCustomLanguagePackInfo",
            "description": "Edits information about a custom local language pack in the current localization target. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "info",
                    "type": "languagePackInfo",
                    "description": "New information about the custom local language pack",
                    "required": true
                }
            ]
        },
        {
            "name": "setCustomLanguagePackString",
            "description": "Adds, edits or deletes a string in a custom local language pack. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Identifier of a previously added custom local language pack in the current localization target",
                    "required": true
                },
                {
                    "name": "new_string",
                    "type": "languagePackString",
                    "description": "New language pack string",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteLanguagePack",
            "description": "Deletes all information about a language pack in the current localization target. The language pack which is currently in use (including base language pack) or is being synchronized can't be deleted.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Identifier of the language pack to delete",
                    "required": true
                }
            ]
        },
        {
            "name": "registerDevice",
            "description": "Registers the currently used device for receiving push notifications. Returns a globally unique identifier of the push notification subscription",
            "type": "PushReceiverId",
            "annotations": [
                {
                    "name": "device_token",
                    "type": "DeviceToken",
                    "description": "Device token",
                    "required": true
                },
                {
                    "name": "other_user_ids",
                    "type": "vector<int53>",
                    "description": "List of user identifiers of other users currently using the application",
                    "required": true
                }
            ]
        },
        {
            "name": "processPushNotification",
            "description": "Handles a push notification. Returns error with code 406 if the push notification is not supported and connection to the server is required to fetch new data. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "payload",
                    "type": "string",
                    "description": "JSON-encoded push notification payload with all fields sent by the server, and 'google.sent_time' and 'google.notification.sound' fields added",
                    "required": true
                }
            ]
        },
        {
            "name": "getPushReceiverId",
            "description": "Returns a globally unique push notification subscription identifier for identification of an account, which has received a push notification. Can be called synchronously",
            "type": "PushReceiverId",
            "annotations": [
                {
                    "name": "payload",
                    "type": "string",
                    "description": "JSON-encoded push notification payload",
                    "required": true
                }
            ]
        },
        {
            "name": "getRecentlyVisitedTMeUrls",
            "description": "Returns t.me URLs recently visited by a newly registered user",
            "type": "TMeUrls",
            "annotations": [
                {
                    "name": "referrer",
                    "type": "string",
                    "description": "Google Play referrer to identify the user",
                    "required": true
                }
            ]
        },
        {
            "name": "setUserPrivacySettingRules",
            "description": "Changes user privacy settings",
            "type": "Ok",
            "annotations": [
                {
                    "name": "setting",
                    "type": "UserPrivacySetting",
                    "description": "The privacy setting",
                    "required": true
                },
                {
                    "name": "rules",
                    "type": "userPrivacySettingRules",
                    "description": "The new privacy rules",
                    "required": true
                }
            ]
        },
        {
            "name": "getUserPrivacySettingRules",
            "description": "Returns the current privacy settings",
            "type": "UserPrivacySettingRules",
            "annotations": [
                {
                    "name": "setting",
                    "type": "UserPrivacySetting",
                    "description": "The privacy setting",
                    "required": true
                }
            ]
        },
        {
            "name": "setReadDatePrivacySettings",
            "description": "Changes privacy settings for message read date",
            "type": "Ok",
            "annotations": [
                {
                    "name": "settings",
                    "type": "readDatePrivacySettings",
                    "description": "New settings",
                    "required": true
                }
            ]
        },
        {
            "name": "getReadDatePrivacySettings",
            "description": "Returns privacy settings for message read date",
            "type": "ReadDatePrivacySettings",
            "annotations": []
        },
        {
            "name": "setNewChatPrivacySettings",
            "description": "Changes privacy settings for new chat creation; can be used only if getOption('can_set_new_chat_privacy_settings')",
            "type": "Ok",
            "annotations": [
                {
                    "name": "settings",
                    "type": "newChatPrivacySettings",
                    "description": "New settings",
                    "required": true
                }
            ]
        },
        {
            "name": "getNewChatPrivacySettings",
            "description": "Returns privacy settings for new chat creation",
            "type": "NewChatPrivacySettings",
            "annotations": []
        },
        {
            "name": "canSendMessageToUser",
            "description": "Check whether the current user can message another user or try to create a chat with them",
            "type": "CanSendMessageToUserResult",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the other user",
                    "required": true
                },
                {
                    "name": "only_local",
                    "type": "Bool",
                    "description": "Pass true to get only locally available information without sending network requests",
                    "required": true
                }
            ]
        },
        {
            "name": "getOption",
            "description": "Returns the value of an option by its name. (Check the list of available options on https://core.telegram.org/tdlib/options.) Can be called before authorization. Can be called synchronously for options 'version' and 'commit_hash'",
            "type": "OptionValue",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the option",
                    "required": true
                }
            ]
        },
        {
            "name": "setOption",
            "description": "Sets the value of an option. (Check the list of available options on https://core.telegram.org/tdlib/options.) Only writable options can be set. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the option",
                    "required": true
                },
                {
                    "name": "value",
                    "type": "OptionValue",
                    "description": "The new value of the option; pass null to reset option value to a default value",
                    "required": false
                }
            ]
        },
        {
            "name": "setAccountTtl",
            "description": "Changes the period of inactivity after which the account of the current user will automatically be deleted",
            "type": "Ok",
            "annotations": [
                {
                    "name": "ttl",
                    "type": "accountTtl",
                    "description": "New account TTL",
                    "required": true
                }
            ]
        },
        {
            "name": "getAccountTtl",
            "description": "Returns the period of inactivity after which the account of the current user will automatically be deleted",
            "type": "AccountTtl",
            "annotations": []
        },
        {
            "name": "deleteAccount",
            "description": "Deletes the account of the current user, deleting all information associated with the user from the server. The phone number of the account can be used to create a new account.",
            "type": "Ok",
            "annotations": [
                {
                    "name": "reason",
                    "type": "string",
                    "description": "The reason why the account was deleted; optional",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user. If the current user isn't authorized, then an empty string can be passed and account deletion can be canceled within one week",
                    "required": true
                }
            ]
        },
        {
            "name": "setDefaultMessageAutoDeleteTime",
            "description": "Changes the default message auto-delete time for new chats",
            "type": "Ok",
            "annotations": [
                {
                    "name": "message_auto_delete_time",
                    "type": "messageAutoDeleteTime",
                    "description": "New default message auto-delete time; must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically",
                    "required": true
                }
            ]
        },
        {
            "name": "getDefaultMessageAutoDeleteTime",
            "description": "Returns default message auto-delete time setting for new chats",
            "type": "MessageAutoDeleteTime",
            "annotations": []
        },
        {
            "name": "removeChatActionBar",
            "description": "Removes a chat action bar without any other action",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "reportChat",
            "description": "Reports a chat to the Telegram moderators. A chat can be reported only from the chat action bar, or if chat.can_be_reported",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of reported messages; may be empty to report the whole chat. Use messageProperties.can_be_reported to check whether the message can be reported",
                    "required": false
                },
                {
                    "name": "reason",
                    "type": "ReportReason",
                    "description": "The reason for reporting the chat",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "Additional report details; 0-1024 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "reportChatPhoto",
            "description": "Reports a chat photo to the Telegram moderators. A chat photo can be reported only if chat.can_be_reported",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "Identifier of the photo to report. Only full photos from chatPhoto can be reported",
                    "required": true
                },
                {
                    "name": "reason",
                    "type": "ReportReason",
                    "description": "The reason for reporting the chat photo",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "Additional report details; 0-1024 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "reportMessageReactions",
            "description": "Reports reactions set on a message to the Telegram moderators. Reactions on a message can be reported only if messageProperties.can_report_reactions",
            "type": "Ok",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender, which added the reaction",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatRevenueStatistics",
            "description": "Returns detailed revenue statistics about a chat. Currently, this method can be used only for channels if supergroupFullInfo.can_get_revenue_statistics == true",
            "type": "ChatRevenueStatistics",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "Pass true if a dark theme is used by the application",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatRevenueWithdrawalUrl",
            "description": "Returns a URL for chat revenue withdrawal; requires owner privileges in the chat. Currently, this method can be used only for channels if supergroupFullInfo.can_get_revenue_statistics == true and getOption('can_withdraw_chat_revenue')",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatRevenueTransactions",
            "description": "Returns the list of revenue transactions for a chat. Currently, this method can be used only for channels if supergroupFullInfo.can_get_revenue_statistics == true",
            "type": "ChatRevenueTransactions",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Number of transactions to skip",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of transactions to be returned; up to 200",
                    "required": true
                }
            ]
        },
        {
            "name": "getStarRevenueStatistics",
            "description": "Returns detailed Telegram Star revenue statistics",
            "type": "StarRevenueStatistics",
            "annotations": [
                {
                    "name": "owner_id",
                    "type": "MessageSender",
                    "description": "Identifier of the owner of the Telegram Stars; can be identifier of an owned bot, or identifier of a channel chat with supergroupFullInfo.can_get_star_revenue_statistics == true",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "Pass true if a dark theme is used by the application",
                    "required": true
                }
            ]
        },
        {
            "name": "getStarWithdrawalUrl",
            "description": "Returns a URL for Telegram Star withdrawal",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "owner_id",
                    "type": "MessageSender",
                    "description": "Identifier of the owner of the Telegram Stars; can be identifier of an owned bot, or identifier of an owned channel chat",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The number of Telegram Stars to withdraw. Must be at least getOption('star_withdrawal_count_min')",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "getStarAdAccountUrl",
            "description": "Returns a URL for a Telegram Ad platform account that can be used to set up advertisements for the chat paid in the owned Telegram Stars",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "owner_id",
                    "type": "MessageSender",
                    "description": "Identifier of the owner of the Telegram Stars; can be identifier of an owned bot, or identifier of an owned channel chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getChatStatistics",
            "description": "Returns detailed statistics about a chat. Currently, this method can be used only for supergroups and channels. Can be used only if supergroupFullInfo.can_get_statistics == true",
            "type": "ChatStatistics",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "Pass true if a dark theme is used by the application",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessageStatistics",
            "description": "Returns detailed statistics about a message. Can be used only if messageProperties.can_get_statistics == true",
            "type": "MessageStatistics",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "Pass true if a dark theme is used by the application",
                    "required": true
                }
            ]
        },
        {
            "name": "getMessagePublicForwards",
            "description": "Returns forwarded copies of a channel message to different public channels and public reposts as a story. Can be used only if messageProperties.can_get_statistics == true. For optimal performance, the number of returned messages and stories is chosen by TDLib",
            "type": "PublicForwards",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of messages and stories to be returned; must be positive and can't be greater than 100. For optimal performance, the number of returned objects is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getStoryStatistics",
            "description": "Returns detailed statistics about a story. Can be used only if story.can_get_statistics == true",
            "type": "StoryStatistics",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "Pass true if a dark theme is used by the application",
                    "required": true
                }
            ]
        },
        {
            "name": "getStatisticalGraph",
            "description": "Loads an asynchronous or a zoomed in statistical graph",
            "type": "StatisticalGraph",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "token",
                    "type": "string",
                    "description": "The token for graph loading",
                    "required": true
                },
                {
                    "name": "x",
                    "type": "int53",
                    "description": "X-value for zoomed in graph or 0 otherwise",
                    "required": true
                }
            ]
        },
        {
            "name": "getStorageStatistics",
            "description": "Returns storage usage statistics. Can be called before authorization",
            "type": "StorageStatistics",
            "annotations": [
                {
                    "name": "chat_limit",
                    "type": "int32",
                    "description": "The maximum number of chats with the largest storage usage for which separate statistics need to be returned. All other chats will be grouped in entries with chat_id == 0. If the chat info database is not used, the chat_limit is ignored and is always set to 0",
                    "required": true
                }
            ]
        },
        {
            "name": "getStorageStatisticsFast",
            "description": "Quickly returns approximate storage usage statistics. Can be called before authorization",
            "type": "StorageStatisticsFast",
            "annotations": []
        },
        {
            "name": "getDatabaseStatistics",
            "description": "Returns database statistics",
            "type": "DatabaseStatistics",
            "annotations": []
        },
        {
            "name": "optimizeStorage",
            "description": "Optimizes storage usage, i.e. deletes some files and returns new storage usage statistics. Secret thumbnails can't be deleted",
            "type": "StorageStatistics",
            "annotations": [
                {
                    "name": "size",
                    "type": "int53",
                    "description": "Limit on the total size of files after deletion, in bytes. Pass -1 to use the default limit",
                    "required": true
                },
                {
                    "name": "ttl",
                    "type": "int32",
                    "description": "Limit on the time that has passed since the last time a file was accessed (or creation time for some filesystems). Pass -1 to use the default limit",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int32",
                    "description": "Limit on the total number of files after deletion. Pass -1 to use the default limit",
                    "required": true
                },
                {
                    "name": "immunity_delay",
                    "type": "int32",
                    "description": "The amount of time after the creation of a file during which it can't be deleted, in seconds. Pass -1 to use the default value",
                    "required": true
                },
                {
                    "name": "file_types",
                    "type": "vector<FileType>",
                    "description": "If non-empty, only files with the given types are considered. By default, all types except thumbnails, profile photos, stickers and wallpapers are deleted",
                    "required": false
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "If non-empty, only files from the given chats are considered. Use 0 as chat identifier to delete files not belonging to any chat (e.g., profile photos)",
                    "required": false
                },
                {
                    "name": "exclude_chat_ids",
                    "type": "vector<int53>",
                    "description": "If non-empty, files from the given chats are excluded. Use 0 as chat identifier to exclude all files not belonging to any chat (e.g., profile photos)",
                    "required": false
                },
                {
                    "name": "return_deleted_file_statistics",
                    "type": "Bool",
                    "description": "Pass true if statistics about the files that were deleted must be returned instead of the whole storage usage statistics. Affects only returned statistics",
                    "required": true
                },
                {
                    "name": "chat_limit",
                    "type": "int32",
                    "description": "Same as in getStorageStatistics. Affects only returned statistics",
                    "required": true
                }
            ]
        },
        {
            "name": "setNetworkType",
            "description": "Sets the current network type. Can be called before authorization. Calling this method forces all network connections to reopen, mitigating the delay in switching between different networks,",
            "type": "Ok",
            "annotations": [
                {
                    "name": "type",
                    "type": "NetworkType",
                    "description": "The new network type; pass null to set network type to networkTypeOther",
                    "required": false
                }
            ]
        },
        {
            "name": "getNetworkStatistics",
            "description": "Returns network data usage statistics. Can be called before authorization",
            "type": "NetworkStatistics",
            "annotations": [
                {
                    "name": "only_current",
                    "type": "Bool",
                    "description": "Pass true to get statistics only for the current library launch",
                    "required": true
                }
            ]
        },
        {
            "name": "addNetworkStatistics",
            "description": "Adds the specified data to data usage statistics. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "entry",
                    "type": "NetworkStatisticsEntry",
                    "description": "The network statistics entry with the data to be added to statistics",
                    "required": true
                }
            ]
        },
        {
            "name": "resetNetworkStatistics",
            "description": "Resets all network data usage statistics to zero. Can be called before authorization",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getAutoDownloadSettingsPresets",
            "description": "Returns auto-download settings presets for the current user",
            "type": "AutoDownloadSettingsPresets",
            "annotations": []
        },
        {
            "name": "setAutoDownloadSettings",
            "description": "Sets auto-download settings",
            "type": "Ok",
            "annotations": [
                {
                    "name": "settings",
                    "type": "autoDownloadSettings",
                    "description": "New user auto-download settings",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "NetworkType",
                    "description": "Type of the network for which the new settings are relevant",
                    "required": true
                }
            ]
        },
        {
            "name": "getAutosaveSettings",
            "description": "Returns autosave settings for the current user",
            "type": "AutosaveSettings",
            "annotations": []
        },
        {
            "name": "setAutosaveSettings",
            "description": "Sets autosave settings for the given scope. The method is guaranteed to work only after at least one call to getAutosaveSettings",
            "type": "Ok",
            "annotations": [
                {
                    "name": "scope",
                    "type": "AutosaveSettingsScope",
                    "description": "Autosave settings scope",
                    "required": true
                },
                {
                    "name": "settings",
                    "type": "scopeAutosaveSettings",
                    "description": "New autosave settings for the scope; pass null to set autosave settings to default",
                    "required": false
                }
            ]
        },
        {
            "name": "clearAutosaveSettingsExceptions",
            "description": "Clears the list of all autosave settings exceptions. The method is guaranteed to work only after at least one call to getAutosaveSettings",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getBankCardInfo",
            "description": "Returns information about a bank card",
            "type": "BankCardInfo",
            "annotations": [
                {
                    "name": "bank_card_number",
                    "type": "string",
                    "description": "The bank card number",
                    "required": true
                }
            ]
        },
        {
            "name": "getPassportElement",
            "description": "Returns one of the available Telegram Passport elements",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "type",
                    "type": "PassportElementType",
                    "description": "Telegram Passport element type",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "getAllPassportElements",
            "description": "Returns all available Telegram Passport elements",
            "type": "PassportElements",
            "annotations": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "setPassportElement",
            "description": "Adds an element to the user's Telegram Passport. May return an error with a message 'PHONE_VERIFICATION_NEEDED' or 'EMAIL_VERIFICATION_NEEDED' if the chosen phone number or the chosen email address must be verified first",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "element",
                    "type": "InputPassportElement",
                    "description": "Input Telegram Passport element",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "deletePassportElement",
            "description": "Deletes a Telegram Passport element",
            "type": "Ok",
            "annotations": [
                {
                    "name": "type",
                    "type": "PassportElementType",
                    "description": "Element type",
                    "required": true
                }
            ]
        },
        {
            "name": "setPassportElementErrors",
            "description": "Informs the user that some of the elements in their Telegram Passport contain errors; for bots only. The user will not be able to resend the elements, until the errors are fixed",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "errors",
                    "type": "vector<inputPassportElementError>",
                    "description": "The errors",
                    "required": true
                }
            ]
        },
        {
            "name": "getPreferredCountryLanguage",
            "description": "Returns an IETF language tag of the language preferred in the country, which must be used to fill native fields in Telegram Passport personal details. Returns a 404 error if unknown",
            "type": "Text",
            "annotations": [
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code",
                    "required": true
                }
            ]
        },
        {
            "name": "sendEmailAddressVerificationCode",
            "description": "Sends a code to verify an email address to be added to a user's Telegram Passport",
            "type": "EmailAddressAuthenticationCodeInfo",
            "annotations": [
                {
                    "name": "email_address",
                    "type": "string",
                    "description": "Email address",
                    "required": true
                }
            ]
        },
        {
            "name": "resendEmailAddressVerificationCode",
            "description": "Resends the code to verify an email address to be added to a user's Telegram Passport",
            "type": "EmailAddressAuthenticationCodeInfo",
            "annotations": []
        },
        {
            "name": "checkEmailAddressVerificationCode",
            "description": "Checks the email address verification code for Telegram Passport",
            "type": "Ok",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "Verification code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "getPassportAuthorizationForm",
            "description": "Returns a Telegram Passport authorization form for sharing data with a service",
            "type": "PassportAuthorizationForm",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the service's bot",
                    "required": true
                },
                {
                    "name": "scope",
                    "type": "string",
                    "description": "Telegram Passport element types requested by the service",
                    "required": true
                },
                {
                    "name": "public_key",
                    "type": "string",
                    "description": "Service's public key",
                    "required": true
                },
                {
                    "name": "nonce",
                    "type": "string",
                    "description": "Unique request identifier provided by the service",
                    "required": true
                }
            ]
        },
        {
            "name": "getPassportAuthorizationFormAvailableElements",
            "description": "Returns already available Telegram Passport elements suitable for completing a Telegram Passport authorization form. Result can be received only once for each authorization form",
            "type": "PassportElementsWithErrors",
            "annotations": [
                {
                    "name": "authorization_form_id",
                    "type": "int32",
                    "description": "Authorization form identifier",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password of the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "sendPassportAuthorizationForm",
            "description": "Sends a Telegram Passport authorization form, effectively sharing data with the service. This method must be called after getPassportAuthorizationFormAvailableElements if some previously available elements are going to be reused",
            "type": "Ok",
            "annotations": [
                {
                    "name": "authorization_form_id",
                    "type": "int32",
                    "description": "Authorization form identifier",
                    "required": true
                },
                {
                    "name": "types",
                    "type": "vector<PassportElementType>",
                    "description": "Types of Telegram Passport elements chosen by user to complete the authorization form",
                    "required": true
                }
            ]
        },
        {
            "name": "setBotUpdatesStatus",
            "description": "Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "pending_update_count",
                    "type": "int32",
                    "description": "The number of pending updates",
                    "required": true
                },
                {
                    "name": "error_message",
                    "type": "string",
                    "description": "The last error message",
                    "required": true
                }
            ]
        },
        {
            "name": "uploadStickerFile",
            "description": "Uploads a file with a sticker; returns the uploaded file",
            "type": "File",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Sticker file owner; ignored for regular users",
                    "required": true
                },
                {
                    "name": "sticker_format",
                    "type": "StickerFormat",
                    "description": "Sticker format",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "File file to upload; must fit in a 512x512 square. For WEBP stickers the file must be in WEBP or PNG format, which will be converted to WEBP server-side.",
                    "required": true
                }
            ]
        },
        {
            "name": "getSuggestedStickerSetName",
            "description": "Returns a suggested name for a new sticker set with a given title",
            "type": "Text",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Sticker set title; 1-64 characters",
                    "required": true
                }
            ]
        },
        {
            "name": "checkStickerSetName",
            "description": "Checks whether a name can be used for a new sticker set",
            "type": "CheckStickerSetNameResult",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name to be checked",
                    "required": true
                }
            ]
        },
        {
            "name": "createNewStickerSet",
            "description": "Creates a new sticker set. Returns the newly created sticker set",
            "type": "StickerSet",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Sticker set owner; ignored for regular users",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Sticker set title; 1-64 characters",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. Can contain only English letters, digits and underscores. Must end with *'_by_<bot username>'* (*<bot_username>* is case insensitive) for bots; 0-64 characters.",
                    "required": true
                },
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the stickers in the set",
                    "required": true
                },
                {
                    "name": "needs_repainting",
                    "type": "Bool",
                    "description": "Pass true if stickers in the sticker set must be repainted; for custom emoji sticker sets only",
                    "required": true
                },
                {
                    "name": "stickers",
                    "type": "vector<inputSticker>",
                    "description": "List of stickers to be added to the set; 1-200 stickers for custom emoji sticker sets, and 1-120 stickers otherwise. For TGS stickers, uploadStickerFile must be used before the sticker is shown",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "string",
                    "description": "Source of the sticker set; may be empty if unknown",
                    "required": false
                }
            ]
        },
        {
            "name": "addStickerToSet",
            "description": "Adds a new sticker to a set",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Sticker set owner; ignored for regular users",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. The sticker set must be owned by the current user, and contain less than 200 stickers for custom emoji sticker sets and less than 120 otherwise",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "inputSticker",
                    "description": "Sticker to add to the set",
                    "required": true
                }
            ]
        },
        {
            "name": "replaceStickerInSet",
            "description": "Replaces existing sticker in a set. The function is equivalent to removeStickerFromSet, then addStickerToSet, then setStickerPositionInSet",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Sticker set owner; ignored for regular users",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. The sticker set must be owned by the current user",
                    "required": true
                },
                {
                    "name": "old_sticker",
                    "type": "InputFile",
                    "description": "Sticker to remove from the set",
                    "required": true
                },
                {
                    "name": "new_sticker",
                    "type": "inputSticker",
                    "description": "Sticker to add to the set",
                    "required": true
                }
            ]
        },
        {
            "name": "setStickerSetThumbnail",
            "description": "Sets a sticker set thumbnail",
            "type": "Ok",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Sticker set owner; ignored for regular users",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. The sticker set must be owned by the current user",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "InputFile",
                    "description": "Thumbnail to set; pass null to remove the sticker set thumbnail",
                    "required": false
                },
                {
                    "name": "format",
                    "type": "StickerFormat",
                    "description": "Format of the thumbnail; pass null if thumbnail is removed",
                    "required": false
                }
            ]
        },
        {
            "name": "setCustomEmojiStickerSetThumbnail",
            "description": "Sets a custom emoji sticker set thumbnail",
            "type": "Ok",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. The sticker set must be owned by the current user",
                    "required": true
                },
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of the custom emoji from the sticker set, which will be set as sticker set thumbnail; pass 0 to remove the sticker set thumbnail",
                    "required": true
                }
            ]
        },
        {
            "name": "setStickerSetTitle",
            "description": "Sets a sticker set title",
            "type": "Ok",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. The sticker set must be owned by the current user",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "New sticker set title",
                    "required": true
                }
            ]
        },
        {
            "name": "deleteStickerSet",
            "description": "Completely deletes a sticker set",
            "type": "Ok",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Sticker set name. The sticker set must be owned by the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "setStickerPositionInSet",
            "description": "Changes the position of a sticker in the set to which it belongs. The sticker set must be owned by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker",
                    "required": true
                },
                {
                    "name": "position",
                    "type": "int32",
                    "description": "New position of the sticker in the set, 0-based",
                    "required": true
                }
            ]
        },
        {
            "name": "removeStickerFromSet",
            "description": "Removes a sticker from the set to which it belongs. The sticker set must be owned by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker to remove from the set",
                    "required": true
                }
            ]
        },
        {
            "name": "setStickerEmojis",
            "description": "Changes the list of emojis corresponding to a sticker. The sticker must belong to a regular or custom emoji sticker set that is owned by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker",
                    "required": true
                },
                {
                    "name": "emojis",
                    "type": "string",
                    "description": "New string with 1-20 emoji corresponding to the sticker",
                    "required": true
                }
            ]
        },
        {
            "name": "setStickerKeywords",
            "description": "Changes the list of keywords of a sticker. The sticker must belong to a regular or custom emoji sticker set that is owned by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker",
                    "required": true
                },
                {
                    "name": "keywords",
                    "type": "vector<string>",
                    "description": "List of up to 20 keywords with total length up to 64 characters, which can be used to find the sticker",
                    "required": true
                }
            ]
        },
        {
            "name": "setStickerMaskPosition",
            "description": "Changes the mask position of a mask sticker. The sticker must belong to a mask sticker set that is owned by the current user",
            "type": "Ok",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker",
                    "required": true
                },
                {
                    "name": "mask_position",
                    "type": "maskPosition",
                    "description": "Position where the mask is placed; pass null to remove mask position",
                    "required": false
                }
            ]
        },
        {
            "name": "getOwnedStickerSets",
            "description": "Returns sticker sets owned by the current user",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "offset_sticker_set_id",
                    "type": "int64",
                    "description": "Identifier of the sticker set from which to return owned sticker sets; use 0 to get results from the beginning",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of sticker sets to be returned; must be positive and can't be greater than 100. For optimal performance, the number of returned objects is chosen by TDLib and can be smaller than the specified limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getMapThumbnailFile",
            "description": "Returns information about a file with a map thumbnail in PNG format. Only map thumbnail files with size less than 1MB can be downloaded",
            "type": "File",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "Location of the map center",
                    "required": true
                },
                {
                    "name": "zoom",
                    "type": "int32",
                    "description": "Map zoom level; 13-20",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Map width in pixels before applying scale; 16-1024",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Map height in pixels before applying scale; 16-1024",
                    "required": true
                },
                {
                    "name": "scale",
                    "type": "int32",
                    "description": "Map scale; 1-3",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat in which the thumbnail will be shown. Use 0 if unknown",
                    "required": true
                }
            ]
        },
        {
            "name": "getPremiumLimit",
            "description": "Returns information about a limit, increased for Premium users. Returns a 404 error if the limit is unknown",
            "type": "PremiumLimit",
            "annotations": [
                {
                    "name": "limit_type",
                    "type": "PremiumLimitType",
                    "description": "Type of the limit",
                    "required": true
                }
            ]
        },
        {
            "name": "getPremiumFeatures",
            "description": "Returns information about features, available to Premium users",
            "type": "PremiumFeatures",
            "annotations": [
                {
                    "name": "source",
                    "type": "PremiumSource",
                    "description": "Source of the request; pass null if the method is called from some non-standard source",
                    "required": false
                }
            ]
        },
        {
            "name": "getPremiumStickerExamples",
            "description": "Returns examples of premium stickers for demonstration purposes",
            "type": "Stickers",
            "annotations": []
        },
        {
            "name": "viewPremiumFeature",
            "description": "Informs TDLib that the user viewed detailed information about a Premium feature on the Premium features screen",
            "type": "Ok",
            "annotations": [
                {
                    "name": "feature",
                    "type": "PremiumFeature",
                    "description": "The viewed premium feature",
                    "required": true
                }
            ]
        },
        {
            "name": "clickPremiumSubscriptionButton",
            "description": "Informs TDLib that the user clicked Premium subscription button on the Premium features screen",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "getPremiumState",
            "description": "Returns state of Telegram Premium subscription and promotion videos for Premium features",
            "type": "PremiumState",
            "annotations": []
        },
        {
            "name": "getPremiumGiftCodePaymentOptions",
            "description": "Returns available options for Telegram Premium gift code or giveaway creation",
            "type": "PremiumGiftCodePaymentOptions",
            "annotations": [
                {
                    "name": "boosted_chat_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel chat, which will be automatically boosted by receivers of the gift codes and which is administered by the user; 0 if none",
                    "required": true
                }
            ]
        },
        {
            "name": "checkPremiumGiftCode",
            "description": "Return information about a Telegram Premium gift code",
            "type": "PremiumGiftCodeInfo",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "The code to check",
                    "required": true
                }
            ]
        },
        {
            "name": "applyPremiumGiftCode",
            "description": "Applies a Telegram Premium gift code",
            "type": "Ok",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "The code to apply",
                    "required": true
                }
            ]
        },
        {
            "name": "launchPrepaidPremiumGiveaway",
            "description": "Launches a prepaid Telegram Premium giveaway",
            "type": "Ok",
            "annotations": [
                {
                    "name": "giveaway_id",
                    "type": "int64",
                    "description": "Unique identifier of the prepaid giveaway",
                    "required": true
                },
                {
                    "name": "parameters",
                    "type": "premiumGiveawayParameters",
                    "description": "Giveaway parameters",
                    "required": true
                }
            ]
        },
        {
            "name": "getPremiumGiveawayInfo",
            "description": "Returns information about a Telegram Premium giveaway",
            "type": "PremiumGiveawayInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the channel chat which started the giveaway",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the giveaway or a giveaway winners message in the chat",
                    "required": true
                }
            ]
        },
        {
            "name": "getStarPaymentOptions",
            "description": "Returns available options for Telegram Stars purchase",
            "type": "StarPaymentOptions",
            "annotations": []
        },
        {
            "name": "getStarGiftPaymentOptions",
            "description": "Returns available options for Telegram Stars gifting",
            "type": "StarPaymentOptions",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user that will receive Telegram Stars; pass 0 to get options for an unspecified user",
                    "required": true
                }
            ]
        },
        {
            "name": "getStarTransactions",
            "description": "Returns the list of Telegram Star transactions for the specified owner",
            "type": "StarTransactions",
            "annotations": [
                {
                    "name": "owner_id",
                    "type": "MessageSender",
                    "description": "Identifier of the owner of the Telegram Stars; can be the identifier of the current user, identifier of an owned bot,",
                    "required": true
                },
                {
                    "name": "subscription_id",
                    "type": "string",
                    "description": "If non-empty, only transactions related to the Star Subscription will be returned",
                    "required": false
                },
                {
                    "name": "direction",
                    "type": "StarTransactionDirection",
                    "description": "Direction of the transactions to receive; pass null to get all transactions",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first transaction to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of transactions to return",
                    "required": true
                }
            ]
        },
        {
            "name": "getStarSubscriptions",
            "description": "Returns the list of Telegram Star subscriptions for the current user",
            "type": "StarSubscriptions",
            "annotations": [
                {
                    "name": "only_expiring",
                    "type": "Bool",
                    "description": "Pass true to receive only expiring subscriptions for which there are no enough Telegram Stars to extend",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first subscription to return as received from the previous request; use empty string to get the first chunk of results",
                    "required": true
                }
            ]
        },
        {
            "name": "canPurchaseFromStore",
            "description": "Checks whether an in-store purchase is possible. Must be called before any in-store purchase",
            "type": "Ok",
            "annotations": [
                {
                    "name": "purpose",
                    "type": "StorePaymentPurpose",
                    "description": "Transaction purpose",
                    "required": true
                }
            ]
        },
        {
            "name": "assignAppStoreTransaction",
            "description": "Informs server about a purchase through App Store. For official applications only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "receipt",
                    "type": "bytes",
                    "description": "App Store receipt",
                    "required": true
                },
                {
                    "name": "purpose",
                    "type": "StorePaymentPurpose",
                    "description": "Transaction purpose",
                    "required": true
                }
            ]
        },
        {
            "name": "assignGooglePlayTransaction",
            "description": "Informs server about a purchase through Google Play. For official applications only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "package_name",
                    "type": "string",
                    "description": "Application package name",
                    "required": true
                },
                {
                    "name": "store_product_id",
                    "type": "string",
                    "description": "Identifier of the purchased store product",
                    "required": true
                },
                {
                    "name": "purchase_token",
                    "type": "string",
                    "description": "Google Play purchase token",
                    "required": true
                },
                {
                    "name": "purpose",
                    "type": "StorePaymentPurpose",
                    "description": "Transaction purpose",
                    "required": true
                }
            ]
        },
        {
            "name": "editStarSubscription",
            "description": "Cancels or reenables Telegram Star subscription to a channel",
            "type": "Ok",
            "annotations": [
                {
                    "name": "subscription_id",
                    "type": "string",
                    "description": "Identifier of the subscription to change",
                    "required": true
                },
                {
                    "name": "is_canceled",
                    "type": "Bool",
                    "description": "New value of is_canceled",
                    "required": true
                }
            ]
        },
        {
            "name": "reuseStarSubscription",
            "description": "Reuses an active subscription and joins the subscribed chat again",
            "type": "Ok",
            "annotations": [
                {
                    "name": "subscription_id",
                    "type": "string",
                    "description": "Identifier of the subscription",
                    "required": true
                }
            ]
        },
        {
            "name": "getBusinessFeatures",
            "description": "Returns information about features, available to Business users",
            "type": "BusinessFeatures",
            "annotations": [
                {
                    "name": "source",
                    "type": "BusinessFeature",
                    "description": "Source of the request; pass null if the method is called from settings or some non-standard source",
                    "required": false
                }
            ]
        },
        {
            "name": "acceptTermsOfService",
            "description": "Accepts Telegram terms of services",
            "type": "Ok",
            "annotations": [
                {
                    "name": "terms_of_service_id",
                    "type": "string",
                    "description": "Terms of service identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "searchStringsByPrefix",
            "description": "Searches specified query by word prefixes in the provided strings. Returns 0-based positions of strings that matched. Can be called synchronously",
            "type": "FoundPositions",
            "annotations": [
                {
                    "name": "strings",
                    "type": "vector<string>",
                    "description": "The strings to search in for the query",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "int32",
                    "description": "The maximum number of objects to return",
                    "required": true
                },
                {
                    "name": "return_none_for_empty_query",
                    "type": "Bool",
                    "description": "Pass true to receive no results for an empty query",
                    "required": true
                }
            ]
        },
        {
            "name": "sendCustomRequest",
            "description": "Sends a custom request; for bots only",
            "type": "CustomRequestResult",
            "annotations": [
                {
                    "name": "method",
                    "type": "string",
                    "description": "The method name",
                    "required": true
                },
                {
                    "name": "parameters",
                    "type": "string",
                    "description": "JSON-serialized method parameters",
                    "required": true
                }
            ]
        },
        {
            "name": "answerCustomQuery",
            "description": "Answers a custom query; for bots only",
            "type": "Ok",
            "annotations": [
                {
                    "name": "custom_query_id",
                    "type": "int64",
                    "description": "Identifier of a custom query",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "JSON-serialized answer to the query",
                    "required": true
                }
            ]
        },
        {
            "name": "setAlarm",
            "description": "Succeeds after a specified amount of time has passed. Can be called before initialization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "seconds",
                    "type": "double",
                    "description": "Number of seconds before the function returns",
                    "required": true
                }
            ]
        },
        {
            "name": "getCountries",
            "description": "Returns information about existing countries. Can be called before authorization",
            "type": "Countries",
            "annotations": []
        },
        {
            "name": "getCountryCode",
            "description": "Uses the current IP address to find the current country. Returns two-letter ISO 3166-1 alpha-2 country code. Can be called before authorization",
            "type": "Text",
            "annotations": []
        },
        {
            "name": "getPhoneNumberInfo",
            "description": "Returns information about a phone number by its prefix. Can be called before authorization",
            "type": "PhoneNumberInfo",
            "annotations": [
                {
                    "name": "phone_number_prefix",
                    "type": "string",
                    "description": "The phone number prefix",
                    "required": true
                }
            ]
        },
        {
            "name": "getPhoneNumberInfoSync",
            "description": "Returns information about a phone number by its prefix synchronously. getCountries must be called at least once after changing localization to the specified language if properly localized country information is expected. Can be called synchronously",
            "type": "PhoneNumberInfo",
            "annotations": [
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "A two-letter ISO 639-1 language code for country information localization",
                    "required": true
                },
                {
                    "name": "phone_number_prefix",
                    "type": "string",
                    "description": "The phone number prefix",
                    "required": true
                }
            ]
        },
        {
            "name": "getCollectibleItemInfo",
            "description": "Returns information about a given collectible item that was purchased at https://fragment.com",
            "type": "CollectibleItemInfo",
            "annotations": [
                {
                    "name": "type",
                    "type": "CollectibleItemType",
                    "description": "Type of the collectible item. The item must be used by a user and must be visible to the current user",
                    "required": true
                }
            ]
        },
        {
            "name": "getDeepLinkInfo",
            "description": "Returns information about a tg:// deep link. Use 'tg://need_update_for_some_feature' or 'tg:some_unsupported_feature' for testing. Returns a 404 error for unknown links. Can be called before authorization",
            "type": "DeepLinkInfo",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link",
                    "required": true
                }
            ]
        },
        {
            "name": "getApplicationConfig",
            "description": "Returns application config, provided by the server. Can be called before authorization",
            "type": "JsonValue",
            "annotations": []
        },
        {
            "name": "saveApplicationLogEvent",
            "description": "Saves application log event on the server. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Event type",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Optional chat identifier, associated with the event",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "JsonValue",
                    "description": "The log event data",
                    "required": true
                }
            ]
        },
        {
            "name": "getApplicationDownloadLink",
            "description": "Returns the link for downloading official Telegram application to be used when the current user invites friends to Telegram",
            "type": "HttpUrl",
            "annotations": []
        },
        {
            "name": "addProxy",
            "description": "Adds a proxy server for network requests. Can be called before authorization",
            "type": "Proxy",
            "annotations": [
                {
                    "name": "server",
                    "type": "string",
                    "description": "Proxy server domain or IP address",
                    "required": true
                },
                {
                    "name": "port",
                    "type": "int32",
                    "description": "Proxy server port",
                    "required": true
                },
                {
                    "name": "enable",
                    "type": "Bool",
                    "description": "Pass true to immediately enable the proxy",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ProxyType",
                    "description": "Proxy type",
                    "required": true
                }
            ]
        },
        {
            "name": "editProxy",
            "description": "Edits an existing proxy server for network requests. Can be called before authorization",
            "type": "Proxy",
            "annotations": [
                {
                    "name": "proxy_id",
                    "type": "int32",
                    "description": "Proxy identifier",
                    "required": true
                },
                {
                    "name": "server",
                    "type": "string",
                    "description": "Proxy server domain or IP address",
                    "required": true
                },
                {
                    "name": "port",
                    "type": "int32",
                    "description": "Proxy server port",
                    "required": true
                },
                {
                    "name": "enable",
                    "type": "Bool",
                    "description": "Pass true to immediately enable the proxy",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ProxyType",
                    "description": "Proxy type",
                    "required": true
                }
            ]
        },
        {
            "name": "enableProxy",
            "description": "Enables a proxy. Only one proxy can be enabled at a time. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "proxy_id",
                    "type": "int32",
                    "description": "Proxy identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "disableProxy",
            "description": "Disables the currently enabled proxy. Can be called before authorization",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "removeProxy",
            "description": "Removes a proxy server. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "proxy_id",
                    "type": "int32",
                    "description": "Proxy identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "getProxies",
            "description": "Returns the list of proxies that are currently set up. Can be called before authorization",
            "type": "Proxies",
            "annotations": []
        },
        {
            "name": "getProxyLink",
            "description": "Returns an HTTPS link, which can be used to add a proxy. Available only for SOCKS5 and MTProto proxies. Can be called before authorization",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "proxy_id",
                    "type": "int32",
                    "description": "Proxy identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "pingProxy",
            "description": "Computes time needed to receive a response from a Telegram server through a proxy. Can be called before authorization",
            "type": "Seconds",
            "annotations": [
                {
                    "name": "proxy_id",
                    "type": "int32",
                    "description": "Proxy identifier. Use 0 to ping a Telegram server without a proxy",
                    "required": true
                }
            ]
        },
        {
            "name": "setLogStream",
            "description": "Sets new log stream for internal logging of TDLib. Can be called synchronously",
            "type": "Ok",
            "annotations": [
                {
                    "name": "log_stream",
                    "type": "LogStream",
                    "description": "New log stream",
                    "required": true
                }
            ]
        },
        {
            "name": "getLogStream",
            "description": "Returns information about currently used log stream for internal logging of TDLib. Can be called synchronously",
            "type": "LogStream",
            "annotations": []
        },
        {
            "name": "setLogVerbosityLevel",
            "description": "Sets the verbosity level of the internal logging of TDLib. Can be called synchronously",
            "type": "Ok",
            "annotations": [
                {
                    "name": "new_verbosity_level",
                    "type": "int32",
                    "description": "New value of the verbosity level for logging. Value 0 corresponds to fatal errors, value 1 corresponds to errors, value 2 corresponds to warnings and debug warnings,",
                    "required": true
                }
            ]
        },
        {
            "name": "getLogVerbosityLevel",
            "description": "Returns current verbosity level of the internal logging of TDLib. Can be called synchronously",
            "type": "LogVerbosityLevel",
            "annotations": []
        },
        {
            "name": "getLogTags",
            "description": "Returns the list of available TDLib internal log tags, for example, ['actor', 'binlog', 'connections', 'notifications', 'proxy']. Can be called synchronously",
            "type": "LogTags",
            "annotations": []
        },
        {
            "name": "setLogTagVerbosityLevel",
            "description": "Sets the verbosity level for a specified TDLib internal log tag. Can be called synchronously",
            "type": "Ok",
            "annotations": [
                {
                    "name": "tag",
                    "type": "string",
                    "description": "Logging tag to change verbosity level",
                    "required": true
                },
                {
                    "name": "new_verbosity_level",
                    "type": "int32",
                    "description": "New verbosity level; 1-1024",
                    "required": true
                }
            ]
        },
        {
            "name": "getLogTagVerbosityLevel",
            "description": "Returns current verbosity level for a specified TDLib internal log tag. Can be called synchronously",
            "type": "LogVerbosityLevel",
            "annotations": [
                {
                    "name": "tag",
                    "type": "string",
                    "description": "Logging tag to change verbosity level",
                    "required": true
                }
            ]
        },
        {
            "name": "addLogMessage",
            "description": "Adds a message to TDLib internal log. Can be called synchronously",
            "type": "Ok",
            "annotations": [
                {
                    "name": "verbosity_level",
                    "type": "int32",
                    "description": "The minimum verbosity level needed for the message to be logged; 0-1023",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of a message to log",
                    "required": true
                }
            ]
        },
        {
            "name": "getUserSupportInfo",
            "description": "Returns support information for the given user; for Telegram support only",
            "type": "UserSupportInfo",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ]
        },
        {
            "name": "setUserSupportInfo",
            "description": "Sets support information for the given user; for Telegram support only",
            "type": "UserSupportInfo",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "formattedText",
                    "description": "New information message",
                    "required": true
                }
            ]
        },
        {
            "name": "getSupportName",
            "description": "Returns localized name of the Telegram support user; for Telegram support only",
            "type": "Text",
            "annotations": []
        },
        {
            "name": "testCallEmpty",
            "description": "Does nothing; for testing only. This is an offline method. Can be called before authorization",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "testCallString",
            "description": "Returns the received string; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestString",
            "annotations": [
                {
                    "name": "x",
                    "type": "string",
                    "description": "String to return",
                    "required": true
                }
            ]
        },
        {
            "name": "testCallBytes",
            "description": "Returns the received bytes; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestBytes",
            "annotations": [
                {
                    "name": "x",
                    "type": "bytes",
                    "description": "Bytes to return",
                    "required": true
                }
            ]
        },
        {
            "name": "testCallVectorInt",
            "description": "Returns the received vector of numbers; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestVectorInt",
            "annotations": [
                {
                    "name": "x",
                    "type": "vector<int32>",
                    "description": "Vector of numbers to return",
                    "required": true
                }
            ]
        },
        {
            "name": "testCallVectorIntObject",
            "description": "Returns the received vector of objects containing a number; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestVectorIntObject",
            "annotations": [
                {
                    "name": "x",
                    "type": "vector<testInt>",
                    "description": "Vector of objects to return",
                    "required": true
                }
            ]
        },
        {
            "name": "testCallVectorString",
            "description": "Returns the received vector of strings; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestVectorString",
            "annotations": [
                {
                    "name": "x",
                    "type": "vector<string>",
                    "description": "Vector of strings to return",
                    "required": true
                }
            ]
        },
        {
            "name": "testCallVectorStringObject",
            "description": "Returns the received vector of objects containing a string; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestVectorStringObject",
            "annotations": [
                {
                    "name": "x",
                    "type": "vector<testString>",
                    "description": "Vector of objects to return",
                    "required": true
                }
            ]
        },
        {
            "name": "testSquareInt",
            "description": "Returns the squared received number; for testing only. This is an offline method. Can be called before authorization",
            "type": "TestInt",
            "annotations": [
                {
                    "name": "x",
                    "type": "int32",
                    "description": "Number to square",
                    "required": true
                }
            ]
        },
        {
            "name": "testNetwork",
            "description": "Sends a simple network request to the Telegram servers; for testing only. Can be called before authorization",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "testProxy",
            "description": "Sends a simple network request to the Telegram servers via proxy; for testing only. Can be called before authorization",
            "type": "Ok",
            "annotations": [
                {
                    "name": "server",
                    "type": "string",
                    "description": "Proxy server domain or IP address",
                    "required": true
                },
                {
                    "name": "port",
                    "type": "int32",
                    "description": "Proxy server port",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ProxyType",
                    "description": "Proxy type",
                    "required": true
                },
                {
                    "name": "dc_id",
                    "type": "int32",
                    "description": "Identifier of a datacenter with which to test connection",
                    "required": true
                },
                {
                    "name": "timeout",
                    "type": "double",
                    "description": "The maximum overall timeout for the request",
                    "required": true
                }
            ]
        },
        {
            "name": "testGetDifference",
            "description": "Forces an updates.getDifference call to the Telegram servers; for testing only",
            "type": "Ok",
            "annotations": []
        },
        {
            "name": "testUseUpdate",
            "description": "Does nothing and ensures that the Update object is used; for testing only. This is an offline method. Can be called before authorization",
            "type": "Update",
            "annotations": []
        },
        {
            "name": "testReturnError",
            "description": "Returns the specified error and ensures that the Error object is used; for testing only. Can be called synchronously",
            "type": "Error",
            "annotations": [
                {
                    "name": "error",
                    "type": "error",
                    "description": "The error to be returned",
                    "required": true
                }
            ]
        }
    ],
    "updates": [
        {
            "name": "updateAuthorizationState",
            "description": "The user authorization state has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "authorization_state",
                    "type": "AuthorizationState",
                    "description": "New authorization state",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewMessage",
            "description": "A new message was received; can also be an outgoing message",
            "type": "Update",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The new message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageSendAcknowledged",
            "description": "A request to send a message has reached the Telegram server. This doesn't mean that the message will be sent successfully.",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The chat identifier of the sent message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "A temporary message identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageSendSucceeded",
            "description": "A message has been successfully sent",
            "type": "Update",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The sent message. Usually only the message identifier, date, and content are changed, but almost all other fields can also change",
                    "required": true
                },
                {
                    "name": "old_message_id",
                    "type": "int53",
                    "description": "The previous temporary message identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageSendFailed",
            "description": "A message failed to send. Be aware that some messages being sent can be irrecoverably deleted, in which case updateDeleteMessages will be received instead of this update",
            "type": "Update",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The failed to send message",
                    "required": true
                },
                {
                    "name": "old_message_id",
                    "type": "int53",
                    "description": "The previous temporary message identifier",
                    "required": true
                },
                {
                    "name": "error",
                    "type": "error",
                    "description": "The cause of the message sending failure",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageContent",
            "description": "The message content has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "new_content",
                    "type": "MessageContent",
                    "description": "New message content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageEdited",
            "description": "A message was edited. Changes in the message content will come in a separate updateMessageContent",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "edit_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was edited",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "New message reply markup; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageIsPinned",
            "description": "The message pinned state was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The message identifier",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is pinned",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageInteractionInfo",
            "description": "The information about interactions with a message has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "interaction_info",
                    "type": "messageInteractionInfo",
                    "description": "New information about interactions with the message; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageContentOpened",
            "description": "The message content was opened. Updates voice note messages to 'listened', video note messages to 'viewed' and starts the self-destruct timer",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageMentionRead",
            "description": "A message with an unread mention was read",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "unread_mention_count",
                    "type": "int32",
                    "description": "The new number of unread mention messages left in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageUnreadReactions",
            "description": "The list of unread reactions added to a message was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "unread_reactions",
                    "type": "vector<unreadReaction>",
                    "description": "The new list of unread reactions",
                    "required": true
                },
                {
                    "name": "unread_reaction_count",
                    "type": "int32",
                    "description": "The new number of messages with unread reactions left in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageFactCheck",
            "description": "A fact-check added to a message was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "fact_check",
                    "type": "factCheck",
                    "description": "The new fact-check",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageLiveLocationViewed",
            "description": "A message with a live location was viewed. When the update is received, the application is supposed to update the live location",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat with the live location message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message with live location",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewChat",
            "description": "A new chat has been loaded/created. This update is guaranteed to come before the chat identifier is returned to the application. The chat field changes will be reported through separate updates",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat",
                    "type": "chat",
                    "description": "The chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatTitle",
            "description": "The title of a chat was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "The new chat title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatPhoto",
            "description": "A chat photo was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "chatPhotoInfo",
                    "description": "The new chat photo; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatAccentColors",
            "description": "Chat accent colors have changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "The new chat accent color identifier",
                    "required": true
                },
                {
                    "name": "background_custom_emoji_id",
                    "type": "int64",
                    "description": "The new identifier of a custom emoji to be shown on the reply header and link preview background; 0 if none",
                    "required": true
                },
                {
                    "name": "profile_accent_color_id",
                    "type": "int32",
                    "description": "The new chat profile accent color identifier; -1 if none",
                    "required": true
                },
                {
                    "name": "profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "The new identifier of a custom emoji to be shown on the profile background; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatPermissions",
            "description": "Chat permissions were changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "permissions",
                    "type": "chatPermissions",
                    "description": "The new chat permissions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatLastMessage",
            "description": "The last message of a chat was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "last_message",
                    "type": "message",
                    "description": "The new last message in the chat; may be null if the last message became unknown. While the last message is unknown, new messages can be added to the chat without corresponding updateNewMessage update",
                    "required": false
                },
                {
                    "name": "positions",
                    "type": "vector<chatPosition>",
                    "description": "The new chat positions in the chat lists",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatPosition",
            "description": "The position of a chat in a chat list has changed. An updateChatLastMessage or updateChatDraftMessage update might be sent instead of the update",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "position",
                    "type": "chatPosition",
                    "description": "New chat position. If new order is 0, then the chat needs to be removed from the list",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatAddedToList",
            "description": "A chat was added to a chat list",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list to which the chat was added",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatRemovedFromList",
            "description": "A chat was removed from a chat list",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list from which the chat was removed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatReadInbox",
            "description": "Incoming messages were read or the number of unread messages has been changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "last_read_inbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read incoming message",
                    "required": true
                },
                {
                    "name": "unread_count",
                    "type": "int32",
                    "description": "The number of unread messages left in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatReadOutbox",
            "description": "Outgoing messages were read",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "last_read_outbox_message_id",
                    "type": "int53",
                    "description": "Identifier of last read outgoing message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatActionBar",
            "description": "The chat action bar was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "action_bar",
                    "type": "ChatActionBar",
                    "description": "The new value of the action bar; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatBusinessBotManageBar",
            "description": "The bar for managing business bot was changed in a chat",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "business_bot_manage_bar",
                    "type": "businessBotManageBar",
                    "description": "The new value of the business bot manage bar; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatAvailableReactions",
            "description": "The chat available reactions were changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "available_reactions",
                    "type": "ChatAvailableReactions",
                    "description": "The new reactions, available in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatDraftMessage",
            "description": "A chat draft has changed. Be aware that the update may come in the currently opened chat but with old content of the draft. If the user has changed the content of the draft, this update mustn't be applied",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "draft_message",
                    "type": "draftMessage",
                    "description": "The new draft message; may be null if none",
                    "required": false
                },
                {
                    "name": "positions",
                    "type": "vector<chatPosition>",
                    "description": "The new chat positions in the chat lists",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatEmojiStatus",
            "description": "Chat emoji status has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "emoji_status",
                    "type": "emojiStatus",
                    "description": "The new chat emoji status; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatMessageSender",
            "description": "The message sender that is selected to send messages in a chat has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_sender_id",
                    "type": "MessageSender",
                    "description": "New value of message_sender_id; may be null if the user can't change message sender",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatMessageAutoDeleteTime",
            "description": "The message auto-delete or self-destruct timer setting for a chat was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_auto_delete_time",
                    "type": "int32",
                    "description": "New value of message_auto_delete_time",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatNotificationSettings",
            "description": "Notification settings for a chat were changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "chatNotificationSettings",
                    "description": "The new notification settings",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatPendingJoinRequests",
            "description": "The chat pending join requests were changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "pending_join_requests",
                    "type": "chatJoinRequestsInfo",
                    "description": "The new data about pending join requests; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatReplyMarkup",
            "description": "The default chat reply markup was changed. Can occur because new messages with reply markup were received or because an old reply markup was hidden by the user",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "reply_markup_message_id",
                    "type": "int53",
                    "description": "Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatBackground",
            "description": "The chat background was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "background",
                    "type": "chatBackground",
                    "description": "The new chat background; may be null if background was reset to default",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatTheme",
            "description": "The chat theme was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "The new name of the chat theme; may be empty if theme was reset to default",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatUnreadMentionCount",
            "description": "The chat unread_mention_count has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "unread_mention_count",
                    "type": "int32",
                    "description": "The number of unread mention messages left in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatUnreadReactionCount",
            "description": "The chat unread_reaction_count has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "unread_reaction_count",
                    "type": "int32",
                    "description": "The number of messages with unread reactions left in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatVideoChat",
            "description": "A chat video chat state has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "video_chat",
                    "type": "videoChat",
                    "description": "New value of video_chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatDefaultDisableNotification",
            "description": "The value of the default disable_notification parameter, used when a message is sent to the chat, was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "default_disable_notification",
                    "type": "Bool",
                    "description": "The new default_disable_notification value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatHasProtectedContent",
            "description": "A chat content was allowed or restricted for saving",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "has_protected_content",
                    "type": "Bool",
                    "description": "New value of has_protected_content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatIsTranslatable",
            "description": "Translation of chat messages was enabled or disabled",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_translatable",
                    "type": "Bool",
                    "description": "New value of is_translatable",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatIsMarkedAsUnread",
            "description": "A chat was marked as unread or was read",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "is_marked_as_unread",
                    "type": "Bool",
                    "description": "New value of is_marked_as_unread",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatViewAsTopics",
            "description": "A chat default appearance has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "view_as_topics",
                    "type": "Bool",
                    "description": "New value of view_as_topics",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatBlockList",
            "description": "A chat was blocked or unblocked",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "block_list",
                    "type": "BlockList",
                    "description": "Block list to which the chat is added; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatHasScheduledMessages",
            "description": "A chat's has_scheduled_messages field has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "has_scheduled_messages",
                    "type": "Bool",
                    "description": "New value of has_scheduled_messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatFolders",
            "description": "The list of chat folders or a chat folder has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_folders",
                    "type": "vector<chatFolderInfo>",
                    "description": "The new list of chat folders",
                    "required": true
                },
                {
                    "name": "main_chat_list_position",
                    "type": "int32",
                    "description": "Position of the main chat list among chat folders, 0-based",
                    "required": true
                },
                {
                    "name": "are_tags_enabled",
                    "type": "Bool",
                    "description": "True, if folder tags are enabled",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatOnlineMemberCount",
            "description": "The number of online group members has changed. This update with non-zero number of online group members is sent only for currently opened chats.",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "online_member_count",
                    "type": "int32",
                    "description": "New number of online members in the chat, or 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSavedMessagesTopic",
            "description": "Basic information about a Saved Messages topic has changed. This update is guaranteed to come before the topic identifier is returned to the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "topic",
                    "type": "savedMessagesTopic",
                    "description": "New data about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSavedMessagesTopicCount",
            "description": "Number of Saved Messages topics has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "topic_count",
                    "type": "int32",
                    "description": "Approximate total number of Saved Messages topics",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateQuickReplyShortcut",
            "description": "Basic information about a quick reply shortcut has changed. This update is guaranteed to come before the quick shortcut name is returned to the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "shortcut",
                    "type": "quickReplyShortcut",
                    "description": "New data about the shortcut",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateQuickReplyShortcutDeleted",
            "description": "A quick reply shortcut and all its messages were deleted",
            "type": "Update",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "The identifier of the deleted shortcut",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateQuickReplyShortcuts",
            "description": "The list of quick reply shortcuts has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "shortcut_ids",
                    "type": "vector<int32>",
                    "description": "The new list of identifiers of quick reply shortcuts",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateQuickReplyShortcutMessages",
            "description": "The list of quick reply shortcut messages has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "The identifier of the shortcut",
                    "required": true
                },
                {
                    "name": "messages",
                    "type": "vector<quickReplyMessage>",
                    "description": "The new list of quick reply messages for the shortcut in order from the first to the last sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateForumTopicInfo",
            "description": "Basic information about a topic in a forum chat was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "info",
                    "type": "forumTopicInfo",
                    "description": "New information about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateScopeNotificationSettings",
            "description": "Notification settings for some type of chats were updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "scope",
                    "type": "NotificationSettingsScope",
                    "description": "Types of chats for which notification settings were updated",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "scopeNotificationSettings",
                    "description": "The new notification settings",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateReactionNotificationSettings",
            "description": "Notification settings for reactions were updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "notification_settings",
                    "type": "reactionNotificationSettings",
                    "description": "The new notification settings",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNotification",
            "description": "A notification was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "notification_group_id",
                    "type": "int32",
                    "description": "Unique notification group identifier",
                    "required": true
                },
                {
                    "name": "notification",
                    "type": "notification",
                    "description": "Changed notification",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNotificationGroup",
            "description": "A list of active notifications in a notification group has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "notification_group_id",
                    "type": "int32",
                    "description": "Unique notification group identifier",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "NotificationGroupType",
                    "description": "New type of the notification group",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat to which all notifications in the group belong",
                    "required": true
                },
                {
                    "name": "notification_settings_chat_id",
                    "type": "int53",
                    "description": "Chat identifier, which notification settings must be applied to the added notifications",
                    "required": true
                },
                {
                    "name": "notification_sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound to be played; 0 if sound is disabled",
                    "required": true
                },
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of unread notifications in the group, can be bigger than number of active notifications",
                    "required": true
                },
                {
                    "name": "added_notifications",
                    "type": "vector<notification>",
                    "description": "List of added group notifications, sorted by notification identifier",
                    "required": true
                },
                {
                    "name": "removed_notification_ids",
                    "type": "vector<int32>",
                    "description": "Identifiers of removed group notifications, sorted by notification identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateActiveNotifications",
            "description": "Contains active notifications that were shown on previous application launches. This update is sent only if the message database is used. In that case it comes once before any updateNotification and updateNotificationGroup update",
            "type": "Update",
            "annotations": [
                {
                    "name": "groups",
                    "type": "vector<notificationGroup>",
                    "description": "Lists of active notification groups",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateHavePendingNotifications",
            "description": "Describes whether there are some pending notification updates. Can be used to prevent application from killing, while there are some pending notifications",
            "type": "Update",
            "annotations": [
                {
                    "name": "have_delayed_notifications",
                    "type": "Bool",
                    "description": "True, if there are some delayed notification updates, which will be sent soon",
                    "required": true
                },
                {
                    "name": "have_unreceived_notifications",
                    "type": "Bool",
                    "description": "True, if there can be some yet unreceived notifications, which are being fetched from the server",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateDeleteMessages",
            "description": "Some messages were deleted",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the deleted messages",
                    "required": true
                },
                {
                    "name": "is_permanent",
                    "type": "Bool",
                    "description": "True, if the messages are permanently deleted by a user (as opposed to just becoming inaccessible)",
                    "required": true
                },
                {
                    "name": "from_cache",
                    "type": "Bool",
                    "description": "True, if the messages are deleted only from the cache and can possibly be retrieved again in the future",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatAction",
            "description": "A message sender activity in the chat has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If not 0, the message thread identifier in which the action was performed",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of a message sender performing the action",
                    "required": true
                },
                {
                    "name": "action",
                    "type": "ChatAction",
                    "description": "The action",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUserStatus",
            "description": "The user went online or offline",
            "type": "Update",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "UserStatus",
                    "description": "New status of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUser",
            "description": "Some data of a user has changed. This update is guaranteed to come before the user identifier is returned to the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "user",
                    "type": "user",
                    "description": "New data about the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateBasicGroup",
            "description": "Some data of a basic group has changed. This update is guaranteed to come before the basic group identifier is returned to the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "basic_group",
                    "type": "basicGroup",
                    "description": "New data about the group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSupergroup",
            "description": "Some data of a supergroup or a channel has changed. This update is guaranteed to come before the supergroup identifier is returned to the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "supergroup",
                    "type": "supergroup",
                    "description": "New data about the supergroup",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSecretChat",
            "description": "Some data of a secret chat has changed. This update is guaranteed to come before the secret chat identifier is returned to the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "secret_chat",
                    "type": "secretChat",
                    "description": "New data about the secret chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUserFullInfo",
            "description": "Some data in userFullInfo has been changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "user_full_info",
                    "type": "userFullInfo",
                    "description": "New full information about the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateBasicGroupFullInfo",
            "description": "Some data in basicGroupFullInfo has been changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "basic_group_id",
                    "type": "int53",
                    "description": "Identifier of a basic group",
                    "required": true
                },
                {
                    "name": "basic_group_full_info",
                    "type": "basicGroupFullInfo",
                    "description": "New full information about the group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSupergroupFullInfo",
            "description": "Some data in supergroupFullInfo has been changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                },
                {
                    "name": "supergroup_full_info",
                    "type": "supergroupFullInfo",
                    "description": "New full information about the supergroup",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateServiceNotification",
            "description": "A service notification from the server was received. Upon receiving this the application must show a popup with the content of the notification",
            "type": "Update",
            "annotations": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Notification type. If type begins with 'AUTH_KEY_DROP_', then two buttons 'Cancel' and 'Log out' must be shown under notification; if user presses the second, all local data must be destroyed using Destroy method",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "MessageContent",
                    "description": "Notification content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFile",
            "description": "Information about a file was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "file",
                    "type": "file",
                    "description": "New data about the file",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFileGenerationStart",
            "description": "The file generation process needs to be started by the application",
            "type": "Update",
            "annotations": [
                {
                    "name": "generation_id",
                    "type": "int64",
                    "description": "Unique identifier for the generation process",
                    "required": true
                },
                {
                    "name": "original_path",
                    "type": "string",
                    "description": "The path to a file from which a new file is generated; may be empty",
                    "required": false
                },
                {
                    "name": "destination_path",
                    "type": "string",
                    "description": "The path to a file that must be created and where the new file is generated",
                    "required": true
                },
                {
                    "name": "conversion",
                    "type": "string",
                    "description": "String specifying the conversion applied to the original file. If conversion is '#url#' than original_path contains an HTTP/HTTPS URL of a file, which must be downloaded by the application",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFileGenerationStop",
            "description": "File generation is no longer needed",
            "type": "Update",
            "annotations": [
                {
                    "name": "generation_id",
                    "type": "int64",
                    "description": "Unique identifier for the generation process",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFileDownloads",
            "description": "The state of the file download list has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "total_size",
                    "type": "int53",
                    "description": "Total size of files in the file download list, in bytes",
                    "required": true
                },
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of files in the file download list",
                    "required": true
                },
                {
                    "name": "downloaded_size",
                    "type": "int53",
                    "description": "Total downloaded size of files in the file download list, in bytes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFileAddedToDownloads",
            "description": "A file was added to the file download list. This update is sent only after file download list is loaded for the first time",
            "type": "Update",
            "annotations": [
                {
                    "name": "file_download",
                    "type": "fileDownload",
                    "description": "The added file download",
                    "required": true
                },
                {
                    "name": "counts",
                    "type": "downloadedFileCounts",
                    "description": "New number of being downloaded and recently downloaded files found",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFileDownload",
            "description": "A file download was changed. This update is sent only after file download list is loaded for the first time",
            "type": "Update",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "File identifier",
                    "required": true
                },
                {
                    "name": "complete_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the file downloading was completed; 0 if the file downloading isn't completed",
                    "required": true
                },
                {
                    "name": "is_paused",
                    "type": "Bool",
                    "description": "True, if downloading of the file is paused",
                    "required": true
                },
                {
                    "name": "counts",
                    "type": "downloadedFileCounts",
                    "description": "New number of being downloaded and recently downloaded files found",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFileRemovedFromDownloads",
            "description": "A file was removed from the file download list. This update is sent only after file download list is loaded for the first time",
            "type": "Update",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "File identifier",
                    "required": true
                },
                {
                    "name": "counts",
                    "type": "downloadedFileCounts",
                    "description": "New number of being downloaded and recently downloaded files found",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateApplicationVerificationRequired",
            "description": "A request can't be completed unless application verification is performed; for official mobile applications only.",
            "type": "Update",
            "annotations": [
                {
                    "name": "verification_id",
                    "type": "int53",
                    "description": "Unique identifier for the verification process",
                    "required": true
                },
                {
                    "name": "nonce",
                    "type": "string",
                    "description": "Unique base64url-encoded nonce for the classic Play Integrity verification (https://developer.android.com/google/play/integrity/classic) for Android,",
                    "required": true
                },
                {
                    "name": "cloud_project_number",
                    "type": "int64",
                    "description": "Cloud project number to pass to the Play Integrity API on Android",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateCall",
            "description": "New call was created or information about a call was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "call",
                    "type": "call",
                    "description": "New data about a call",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateGroupCall",
            "description": "Information about a group call was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "group_call",
                    "type": "groupCall",
                    "description": "New data about a group call",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateGroupCallParticipant",
            "description": "Information about a group call participant was changed. The updates are sent only after the group call is received through getGroupCall and only if the call is joined or being joined",
            "type": "Update",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Identifier of group call",
                    "required": true
                },
                {
                    "name": "participant",
                    "type": "groupCallParticipant",
                    "description": "New data about a participant",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewCallSignalingData",
            "description": "New call signaling data arrived",
            "type": "Update",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "The call identifier",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "The data",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUserPrivacySettingRules",
            "description": "Some privacy setting rules have been changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "setting",
                    "type": "UserPrivacySetting",
                    "description": "The privacy setting",
                    "required": true
                },
                {
                    "name": "rules",
                    "type": "userPrivacySettingRules",
                    "description": "New privacy rules",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUnreadMessageCount",
            "description": "Number of unread messages in a chat list has changed. This update is sent only if the message database is used",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list with changed number of unread messages",
                    "required": true
                },
                {
                    "name": "unread_count",
                    "type": "int32",
                    "description": "Total number of unread messages",
                    "required": true
                },
                {
                    "name": "unread_unmuted_count",
                    "type": "int32",
                    "description": "Total number of unread messages in unmuted chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUnreadChatCount",
            "description": "Number of unread chats, i.e. with unread messages or marked as unread, has changed. This update is sent only if the message database is used",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_list",
                    "type": "ChatList",
                    "description": "The chat list with changed number of unread messages",
                    "required": true
                },
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of chats in the chat list",
                    "required": true
                },
                {
                    "name": "unread_count",
                    "type": "int32",
                    "description": "Total number of unread chats",
                    "required": true
                },
                {
                    "name": "unread_unmuted_count",
                    "type": "int32",
                    "description": "Total number of unread unmuted chats",
                    "required": true
                },
                {
                    "name": "marked_as_unread_count",
                    "type": "int32",
                    "description": "Total number of chats marked as unread",
                    "required": true
                },
                {
                    "name": "marked_as_unread_unmuted_count",
                    "type": "int32",
                    "description": "Total number of unmuted chats marked as unread",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStory",
            "description": "A story was changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "story",
                    "type": "story",
                    "description": "The new information about the story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStoryDeleted",
            "description": "A story became inaccessible",
            "type": "Update",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStorySendSucceeded",
            "description": "A story has been successfully sent",
            "type": "Update",
            "annotations": [
                {
                    "name": "story",
                    "type": "story",
                    "description": "The sent story",
                    "required": true
                },
                {
                    "name": "old_story_id",
                    "type": "int32",
                    "description": "The previous temporary story identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStorySendFailed",
            "description": "A story failed to send. If the story sending is canceled, then updateStoryDeleted will be received instead of this update",
            "type": "Update",
            "annotations": [
                {
                    "name": "story",
                    "type": "story",
                    "description": "The failed to send story",
                    "required": true
                },
                {
                    "name": "error",
                    "type": "error",
                    "description": "The cause of the story sending failure",
                    "required": true
                },
                {
                    "name": "error_type",
                    "type": "CanSendStoryResult",
                    "description": "Type of the error; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatActiveStories",
            "description": "The list of active stories posted by a specific chat has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "active_stories",
                    "type": "chatActiveStories",
                    "description": "The new list of active stories",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStoryListChatCount",
            "description": "Number of chats in a story list has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "story_list",
                    "type": "StoryList",
                    "description": "The story list",
                    "required": true
                },
                {
                    "name": "chat_count",
                    "type": "int32",
                    "description": "Approximate total number of chats with active stories in the list",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStoryStealthMode",
            "description": "Story stealth mode settings have changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "active_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) until stealth mode is active; 0 if it is disabled",
                    "required": true
                },
                {
                    "name": "cooldown_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when stealth mode can be enabled again; 0 if there is no active cooldown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateOption",
            "description": "An option changed its value",
            "type": "Update",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The option name",
                    "required": true
                },
                {
                    "name": "value",
                    "type": "OptionValue",
                    "description": "The new option value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStickerSet",
            "description": "A sticker set has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "sticker_set",
                    "type": "stickerSet",
                    "description": "The sticker set",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateInstalledStickerSets",
            "description": "The list of installed sticker sets was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the affected stickers",
                    "required": true
                },
                {
                    "name": "sticker_set_ids",
                    "type": "vector<int64>",
                    "description": "The new list of installed ordinary sticker sets",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateTrendingStickerSets",
            "description": "The list of trending sticker sets was updated or some of them were viewed",
            "type": "Update",
            "annotations": [
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the affected stickers",
                    "required": true
                },
                {
                    "name": "sticker_sets",
                    "type": "trendingStickerSets",
                    "description": "The prefix of the list of trending sticker sets with the newest trending sticker sets",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateRecentStickers",
            "description": "The list of recently used stickers was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "is_attached",
                    "type": "Bool",
                    "description": "True, if the list of stickers attached to photo or video files was updated; otherwise, the list of sent stickers is updated",
                    "required": true
                },
                {
                    "name": "sticker_ids",
                    "type": "vector<int32>",
                    "description": "The new list of file identifiers of recently used stickers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateFavoriteStickers",
            "description": "The list of favorite stickers was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "sticker_ids",
                    "type": "vector<int32>",
                    "description": "The new list of file identifiers of favorite stickers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSavedAnimations",
            "description": "The list of saved animations was updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "animation_ids",
                    "type": "vector<int32>",
                    "description": "The new list of file identifiers of saved animations",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSavedNotificationSounds",
            "description": "The list of saved notification sounds was updated. This update may not be sent until information about a notification sound was requested for the first time",
            "type": "Update",
            "annotations": [
                {
                    "name": "notification_sound_ids",
                    "type": "vector<int64>",
                    "description": "The new list of identifiers of saved notification sounds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateDefaultBackground",
            "description": "The default background has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "for_dark_theme",
                    "type": "Bool",
                    "description": "True, if default background for dark theme has changed",
                    "required": true
                },
                {
                    "name": "background",
                    "type": "background",
                    "description": "The new default background; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatThemes",
            "description": "The list of available chat themes has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_themes",
                    "type": "vector<chatTheme>",
                    "description": "The new list of chat themes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateAccentColors",
            "description": "The list of supported accent colors has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "colors",
                    "type": "vector<accentColor>",
                    "description": "Information about supported colors; colors with identifiers 0 (red), 1 (orange), 2 (purple/violet), 3 (green), 4 (cyan), 5 (blue), 6 (pink) must always be supported",
                    "required": true
                },
                {
                    "name": "available_accent_color_ids",
                    "type": "vector<int32>",
                    "description": "The list of accent color identifiers, which can be set through setAccentColor and setChatAccentColor. The colors must be shown in the specififed order",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateProfileAccentColors",
            "description": "The list of supported accent colors for user profiles has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "colors",
                    "type": "vector<profileAccentColor>",
                    "description": "Information about supported colors",
                    "required": true
                },
                {
                    "name": "available_accent_color_ids",
                    "type": "vector<int32>",
                    "description": "The list of accent color identifiers, which can be set through setProfileAccentColor and setChatProfileAccentColor. The colors must be shown in the specififed order",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateLanguagePackStrings",
            "description": "Some language pack strings have been updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "localization_target",
                    "type": "string",
                    "description": "Localization target to which the language pack belongs",
                    "required": true
                },
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Identifier of the updated language pack",
                    "required": true
                },
                {
                    "name": "strings",
                    "type": "vector<languagePackString>",
                    "description": "List of changed language pack strings; empty if all strings have changed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateConnectionState",
            "description": "The connection state has changed. This update must be used only to show a human-readable description of the connection state",
            "type": "Update",
            "annotations": [
                {
                    "name": "state",
                    "type": "ConnectionState",
                    "description": "The new connection state",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateTermsOfService",
            "description": "New terms of service must be accepted by the user. If the terms of service are declined, then the deleteAccount method must be called with the reason 'Decline ToS update'",
            "type": "Update",
            "annotations": [
                {
                    "name": "terms_of_service_id",
                    "type": "string",
                    "description": "Identifier of the terms of service",
                    "required": true
                },
                {
                    "name": "terms_of_service",
                    "type": "termsOfService",
                    "description": "The new terms of service",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUsersNearby",
            "description": "The list of users nearby has changed. The update is guaranteed to be sent only 60 seconds after a successful searchChatsNearby request",
            "type": "Update",
            "annotations": [
                {
                    "name": "users_nearby",
                    "type": "vector<chatNearby>",
                    "description": "The new list of users nearby",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateUnconfirmedSession",
            "description": "The first unconfirmed session has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "session",
                    "type": "unconfirmedSession",
                    "description": "The unconfirmed session; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateAttachmentMenuBots",
            "description": "The list of bots added to attachment or side menu has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "bots",
                    "type": "vector<attachmentMenuBot>",
                    "description": "The new list of bots. The bots must not be shown on scheduled messages screen",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateWebAppMessageSent",
            "description": "A message was sent by an opened Web App, so the Web App needs to be closed",
            "type": "Update",
            "annotations": [
                {
                    "name": "web_app_launch_id",
                    "type": "int64",
                    "description": "Identifier of Web App launch",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateActiveEmojiReactions",
            "description": "The list of active emoji reactions has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "emojis",
                    "type": "vector<string>",
                    "description": "The new list of active emoji reactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateAvailableMessageEffects",
            "description": "The list of available message effects has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "reaction_effect_ids",
                    "type": "vector<int64>",
                    "description": "The new list of available message effects from emoji reactions",
                    "required": true
                },
                {
                    "name": "sticker_effect_ids",
                    "type": "vector<int64>",
                    "description": "The new list of available message effects from Premium stickers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateDefaultReactionType",
            "description": "The type of default reaction has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "The new type of the default reaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSavedMessagesTags",
            "description": "Tags used in Saved Messages or a Saved Messages topic have changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of Saved Messages topic which tags were changed; 0 if tags for the whole chat has changed",
                    "required": true
                },
                {
                    "name": "tags",
                    "type": "savedMessagesTags",
                    "description": "The new tags",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateActiveLiveLocationMessages",
            "description": "The list of messages with active live location that need to be updated by the application has changed. The list is persistent across application restarts only if the message database is used",
            "type": "Update",
            "annotations": [
                {
                    "name": "messages",
                    "type": "vector<message>",
                    "description": "The list of messages with active live locations",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateOwnedStarCount",
            "description": "The number of Telegram Stars owned by the current user has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The new number of Telegram Stars owned",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatRevenueAmount",
            "description": "The revenue earned from sponsored messages in a chat has changed. If chat revenue screen is opened, then getChatRevenueTransactions may be called to fetch new transactions",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "revenue_amount",
                    "type": "chatRevenueAmount",
                    "description": "New amount of earned revenue",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateStarRevenueStatus",
            "description": "The Telegram Star revenue earned by a bot or a chat has changed. If Telegram Star transaction screen of the chat is opened, then getStarTransactions may be called to fetch new transactions",
            "type": "Update",
            "annotations": [
                {
                    "name": "owner_id",
                    "type": "MessageSender",
                    "description": "Identifier of the owner of the Telegram Stars",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "starRevenueStatus",
                    "description": "New Telegram Star revenue status",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSpeechRecognitionTrial",
            "description": "The parameters of speech recognition without Telegram Premium subscription has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "max_media_duration",
                    "type": "int32",
                    "description": "The maximum allowed duration of media for speech recognition without Telegram Premium subscription, in seconds",
                    "required": true
                },
                {
                    "name": "weekly_count",
                    "type": "int32",
                    "description": "The total number of allowed speech recognitions per week; 0 if none",
                    "required": true
                },
                {
                    "name": "left_count",
                    "type": "int32",
                    "description": "Number of left speech recognition attempts this week",
                    "required": true
                },
                {
                    "name": "next_reset_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the weekly number of tries will reset; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateDiceEmojis",
            "description": "The list of supported dice emojis has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "emojis",
                    "type": "vector<string>",
                    "description": "The new list of supported dice emojis",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateAnimatedEmojiMessageClicked",
            "description": "Some animated emoji message was clicked and a big animated sticker must be played if the message is visible on the screen. chatActionWatchingAnimations with the text of the message needs to be sent if the sticker is played",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "The animated sticker to be played",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateAnimationSearchParameters",
            "description": "The parameters of animation search through getOption('animation_search_bot_username') bot has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "provider",
                    "type": "string",
                    "description": "Name of the animation search provider",
                    "required": true
                },
                {
                    "name": "emojis",
                    "type": "vector<string>",
                    "description": "The new list of emojis suggested for searching",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSuggestedActions",
            "description": "The list of suggested to the user actions has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "added_actions",
                    "type": "vector<SuggestedAction>",
                    "description": "Added suggested actions",
                    "required": true
                },
                {
                    "name": "removed_actions",
                    "type": "vector<SuggestedAction>",
                    "description": "Removed suggested actions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateSpeedLimitNotification",
            "description": "Download or upload file speed for the user was limited, but it can be restored by subscription to Telegram Premium. The notification can be postponed until a being downloaded or uploaded file is visible to the user",
            "type": "Update",
            "annotations": [
                {
                    "name": "is_upload",
                    "type": "Bool",
                    "description": "True, if upload speed was limited; false, if download speed was limited",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateContactCloseBirthdays",
            "description": "The list of contacts that had birthdays recently or will have birthday soon has changed",
            "type": "Update",
            "annotations": [
                {
                    "name": "close_birthday_users",
                    "type": "vector<closeBirthdayUser>",
                    "description": "List of contact users with close birthday",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateAutosaveSettings",
            "description": "Autosave settings for some type of chats were updated",
            "type": "Update",
            "annotations": [
                {
                    "name": "scope",
                    "type": "AutosaveSettingsScope",
                    "description": "Type of chats for which autosave settings were updated",
                    "required": true
                },
                {
                    "name": "settings",
                    "type": "scopeAutosaveSettings",
                    "description": "The new autosave settings; may be null if the settings are reset to default",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateBusinessConnection",
            "description": "A business connection has changed; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "connection",
                    "type": "businessConnection",
                    "description": "New data about the connection",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewBusinessMessage",
            "description": "A new message was added to a business account; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "connection_id",
                    "type": "string",
                    "description": "Unique identifier of the business connection",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "businessMessage",
                    "description": "The new message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateBusinessMessageEdited",
            "description": "A message in a business account was edited; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "connection_id",
                    "type": "string",
                    "description": "Unique identifier of the business connection",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "businessMessage",
                    "description": "The edited message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateBusinessMessagesDeleted",
            "description": "Messages in a business account were deleted; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "connection_id",
                    "type": "string",
                    "description": "Unique identifier of the business connection",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat in the business account in which messages were deleted",
                    "required": true
                },
                {
                    "name": "message_ids",
                    "type": "vector<int53>",
                    "description": "Unique message identifiers of the deleted messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewInlineQuery",
            "description": "A new incoming inline query; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique query identifier",
                    "required": true
                },
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "user_location",
                    "type": "location",
                    "description": "User location; may be null",
                    "required": false
                },
                {
                    "name": "chat_type",
                    "type": "ChatType",
                    "description": "The type of the chat from which the query originated; may be null if unknown",
                    "required": false
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Text of the query",
                    "required": true
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "Offset of the first entry to return",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewChosenInlineResult",
            "description": "The user has chosen a result of an inline query; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "user_location",
                    "type": "location",
                    "description": "User location; may be null",
                    "required": false
                },
                {
                    "name": "query",
                    "type": "string",
                    "description": "Text of the query",
                    "required": true
                },
                {
                    "name": "result_id",
                    "type": "string",
                    "description": "Identifier of the chosen result",
                    "required": true
                },
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Identifier of the sent inline message, if known",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewCallbackQuery",
            "description": "A new incoming callback query; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique query identifier",
                    "required": true
                },
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat where the query was sent",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message from which the query originated",
                    "required": true
                },
                {
                    "name": "chat_instance",
                    "type": "int64",
                    "description": "Identifier that uniquely corresponds to the chat to which the message was sent",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "CallbackQueryPayload",
                    "description": "Query payload",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewInlineCallbackQuery",
            "description": "A new incoming callback query from a message sent via a bot; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique query identifier",
                    "required": true
                },
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Identifier of the inline message from which the query originated",
                    "required": true
                },
                {
                    "name": "chat_instance",
                    "type": "int64",
                    "description": "An identifier uniquely corresponding to the chat a message was sent to",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "CallbackQueryPayload",
                    "description": "Query payload",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewBusinessCallbackQuery",
            "description": "A new incoming callback query from a business message; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique query identifier",
                    "required": true
                },
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "connection_id",
                    "type": "string",
                    "description": "Unique identifier of the business connection",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "businessMessage",
                    "description": "The message from the business account from which the query originated",
                    "required": true
                },
                {
                    "name": "chat_instance",
                    "type": "int64",
                    "description": "An identifier uniquely corresponding to the chat a message was sent to",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "CallbackQueryPayload",
                    "description": "Query payload",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewShippingQuery",
            "description": "A new incoming shipping query; for bots only. Only for invoices with flexible price",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique query identifier",
                    "required": true
                },
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "invoice_payload",
                    "type": "string",
                    "description": "Invoice payload",
                    "required": true
                },
                {
                    "name": "shipping_address",
                    "type": "address",
                    "description": "User shipping address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewPreCheckoutQuery",
            "description": "A new incoming pre-checkout query; for bots only. Contains full information about a checkout",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique query identifier",
                    "required": true
                },
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user who sent the query",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the product price",
                    "required": true
                },
                {
                    "name": "total_amount",
                    "type": "int53",
                    "description": "Total price for the product, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "invoice_payload",
                    "type": "bytes",
                    "description": "Invoice payload",
                    "required": true
                },
                {
                    "name": "shipping_option_id",
                    "type": "string",
                    "description": "Identifier of a shipping option chosen by the user; may be empty if not applicable",
                    "required": false
                },
                {
                    "name": "order_info",
                    "type": "orderInfo",
                    "description": "Information about the order; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewCustomEvent",
            "description": "A new incoming event; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "event",
                    "type": "string",
                    "description": "A JSON-serialized event",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewCustomQuery",
            "description": "A new incoming query; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "The query identifier",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "JSON-serialized query data",
                    "required": true
                },
                {
                    "name": "timeout",
                    "type": "int32",
                    "description": "Query timeout",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updatePoll",
            "description": "A poll was updated; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "poll",
                    "type": "poll",
                    "description": "New data about the poll",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updatePollAnswer",
            "description": "A user changed the answer to a poll; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "poll_id",
                    "type": "int64",
                    "description": "Unique poll identifier",
                    "required": true
                },
                {
                    "name": "voter_id",
                    "type": "MessageSender",
                    "description": "Identifier of the message sender that changed the answer to the poll",
                    "required": true
                },
                {
                    "name": "option_ids",
                    "type": "vector<int32>",
                    "description": "0-based identifiers of answer options, chosen by the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatMember",
            "description": "User rights changed in a chat; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "actor_user_id",
                    "type": "int53",
                    "description": "Identifier of the user, changing the rights",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user rights were changed",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "If user has joined the chat using an invite link, the invite link; may be null",
                    "required": false
                },
                {
                    "name": "via_join_request",
                    "type": "Bool",
                    "description": "True, if the user has joined the chat after sending a join request and being approved by an administrator",
                    "required": true
                },
                {
                    "name": "via_chat_folder_invite_link",
                    "type": "Bool",
                    "description": "True, if the user has joined the chat using an invite link for a chat folder",
                    "required": true
                },
                {
                    "name": "old_chat_member",
                    "type": "chatMember",
                    "description": "Previous chat member",
                    "required": true
                },
                {
                    "name": "new_chat_member",
                    "type": "chatMember",
                    "description": "New chat member",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateNewChatJoinRequest",
            "description": "A user sent a join request to a chat; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "request",
                    "type": "chatJoinRequest",
                    "description": "Join request",
                    "required": true
                },
                {
                    "name": "user_chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the private chat with the user",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "The invite link, which was used to send join request; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateChatBoost",
            "description": "A chat boost has changed; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "boost",
                    "type": "chatBoost",
                    "description": "New information about the boost",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageReaction",
            "description": "User changed its reactions on a message with public reactions; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "actor_id",
                    "type": "MessageSender",
                    "description": "Identifier of the user or chat that changed reactions",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the reactions were changed",
                    "required": true
                },
                {
                    "name": "old_reaction_types",
                    "type": "vector<ReactionType>",
                    "description": "Old list of chosen reactions",
                    "required": true
                },
                {
                    "name": "new_reaction_types",
                    "type": "vector<ReactionType>",
                    "description": "New list of chosen reactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updateMessageReactions",
            "description": "Reactions added to a message with anonymous reactions have changed; for bots only",
            "type": "Update",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the reactions were changed",
                    "required": true
                },
                {
                    "name": "reactions",
                    "type": "vector<messageReaction>",
                    "description": "The list of reactions added to the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        },
        {
            "name": "updates",
            "description": "Contains a list of updates",
            "type": "Updates",
            "annotations": [
                {
                    "name": "updates",
                    "type": "vector<Update>",
                    "description": "List of updates",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": false,
            "is_update": true
        }
    ],
    "types": [
        {
            "name": "error",
            "description": "An object of this type can be returned on every function call, in case of an error",
            "type": "Error",
            "annotations": [
                {
                    "name": "code",
                    "type": "int32",
                    "description": "Error code; subject to future changes. If the error code is 406, the error message must not be processed in any way and must not be displayed to the user",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "string",
                    "description": "Error message; subject to future changes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "ok",
            "description": "An object of this type is returned on a successful function call for certain functions",
            "type": "Ok",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeTelegramMessage",
            "description": "A digit-only authentication code is delivered via a private Telegram message, which can be viewed from another active session",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeSms",
            "description": "A digit-only authentication code is delivered via an SMS message to the specified phone number; non-official applications may not receive this type of code",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeSmsWord",
            "description": "An authentication code is a word delivered via an SMS message to the specified phone number; non-official applications may not receive this type of code",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "first_letter",
                    "type": "string",
                    "description": "The first letters of the word if known",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeSmsPhrase",
            "description": "An authentication code is a phrase from multiple words delivered via an SMS message to the specified phone number; non-official applications may not receive this type of code",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "first_word",
                    "type": "string",
                    "description": "The first word of the phrase if known",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeCall",
            "description": "A digit-only authentication code is delivered via a phone call to the specified phone number",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeFlashCall",
            "description": "An authentication code is delivered by an immediately canceled call to the specified phone number. The phone number that calls is the code that must be entered automatically",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "pattern",
                    "type": "string",
                    "description": "Pattern of the phone number from which the call will be made",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeMissedCall",
            "description": "An authentication code is delivered by an immediately canceled call to the specified phone number. The last digits of the phone number that calls are the code that must be entered manually by the user",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "phone_number_prefix",
                    "type": "string",
                    "description": "Prefix of the phone number from which the call will be made",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Number of digits in the code, excluding the prefix",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeFragment",
            "description": "A digit-only authentication code is delivered to https://fragment.com. The user must be logged in there via a wallet owning the phone number's NFT",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to open to receive the code",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeFirebaseAndroid",
            "description": "A digit-only authentication code is delivered via Firebase Authentication to the official Android application",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "device_verification_parameters",
                    "type": "FirebaseDeviceVerificationParameters",
                    "description": "Parameters to be used for device verification",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeTypeFirebaseIos",
            "description": "A digit-only authentication code is delivered via Firebase Authentication to the official iOS application",
            "type": "AuthenticationCodeType",
            "annotations": [
                {
                    "name": "receipt",
                    "type": "string",
                    "description": "Receipt of successful application token validation to compare with receipt from push notification",
                    "required": true
                },
                {
                    "name": "push_timeout",
                    "type": "int32",
                    "description": "Time after the next authentication method is supposed to be used if verification push notification isn't received, in seconds",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authenticationCodeInfo",
            "description": "Information about the authentication code that was sent",
            "type": "AuthenticationCodeInfo",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "A phone number that is being authenticated",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "AuthenticationCodeType",
                    "description": "The way the code was sent to the user",
                    "required": true
                },
                {
                    "name": "next_type",
                    "type": "AuthenticationCodeType",
                    "description": "The way the next code will be sent to the user; may be null",
                    "required": false
                },
                {
                    "name": "timeout",
                    "type": "int32",
                    "description": "Timeout before the code can be re-sent, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emailAddressAuthenticationCodeInfo",
            "description": "Information about the email address authentication code that was sent",
            "type": "EmailAddressAuthenticationCodeInfo",
            "annotations": [
                {
                    "name": "email_address_pattern",
                    "type": "string",
                    "description": "Pattern of the email address to which an authentication code was sent",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the code; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emailAddressAuthenticationCode",
            "description": "An authentication code delivered to a user's email address",
            "type": "EmailAddressAuthentication",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "The code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emailAddressAuthenticationAppleId",
            "description": "An authentication token received through Apple ID",
            "type": "EmailAddressAuthentication",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "The token",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emailAddressAuthenticationGoogleId",
            "description": "An authentication token received through Google ID",
            "type": "EmailAddressAuthentication",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "The token",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emailAddressResetStateAvailable",
            "description": "Email address can be reset after the given period. Call resetAuthenticationEmailAddress to reset it and allow the user to authorize with a code sent to the user's phone number",
            "type": "EmailAddressResetState",
            "annotations": [
                {
                    "name": "wait_period",
                    "type": "int32",
                    "description": "Time required to wait before the email address can be reset; 0 if the user is subscribed to Telegram Premium",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emailAddressResetStatePending",
            "description": "Email address reset has already been requested. Call resetAuthenticationEmailAddress to check whether immediate reset is possible",
            "type": "EmailAddressResetState",
            "annotations": [
                {
                    "name": "reset_in",
                    "type": "int32",
                    "description": "Left time before the email address will be reset, in seconds. updateAuthorizationState is not sent when this field changes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntity",
            "description": "Represents a part of the text that needs to be formatted in some unusual way",
            "type": "TextEntity",
            "annotations": [
                {
                    "name": "offset",
                    "type": "int32",
                    "description": "Offset of the entity, in UTF-16 code units",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Length of the entity, in UTF-16 code units",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "TextEntityType",
                    "description": "Type of the entity",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntities",
            "description": "Contains a list of text entities",
            "type": "TextEntities",
            "annotations": [
                {
                    "name": "entities",
                    "type": "vector<textEntity>",
                    "description": "List of text entities",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "formattedText",
            "description": "A text with some entities",
            "type": "FormattedText",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "The text",
                    "required": true
                },
                {
                    "name": "entities",
                    "type": "vector<textEntity>",
                    "description": "Entities contained in the text. Entities can be nested, but must not mutually intersect with each other.",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "termsOfService",
            "description": "Contains Telegram terms of service",
            "type": "TermsOfService",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text of the terms of service",
                    "required": true
                },
                {
                    "name": "min_user_age",
                    "type": "int32",
                    "description": "The minimum age of a user to be able to accept the terms; 0 if age isn't restricted",
                    "required": true
                },
                {
                    "name": "show_popup",
                    "type": "Bool",
                    "description": "True, if a blocking popup with terms of service must be shown to the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitTdlibParameters",
            "description": "Initialization parameters are needed. Call setTdlibParameters to provide them",
            "type": "AuthorizationState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitPhoneNumber",
            "description": "TDLib needs the user's phone number to authorize. Call setAuthenticationPhoneNumber to provide the phone number, or use requestQrCodeAuthentication or checkAuthenticationBotToken for other authentication options",
            "type": "AuthorizationState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitEmailAddress",
            "description": "TDLib needs the user's email address to authorize. Call setAuthenticationEmailAddress to provide the email address, or directly call checkAuthenticationEmailCode with Apple ID/Google ID token if allowed",
            "type": "AuthorizationState",
            "annotations": [
                {
                    "name": "allow_apple_id",
                    "type": "Bool",
                    "description": "True, if authorization through Apple ID is allowed",
                    "required": true
                },
                {
                    "name": "allow_google_id",
                    "type": "Bool",
                    "description": "True, if authorization through Google ID is allowed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitEmailCode",
            "description": "TDLib needs the user's authentication code sent to an email address to authorize. Call checkAuthenticationEmailCode to provide the code",
            "type": "AuthorizationState",
            "annotations": [
                {
                    "name": "allow_apple_id",
                    "type": "Bool",
                    "description": "True, if authorization through Apple ID is allowed",
                    "required": true
                },
                {
                    "name": "allow_google_id",
                    "type": "Bool",
                    "description": "True, if authorization through Google ID is allowed",
                    "required": true
                },
                {
                    "name": "code_info",
                    "type": "emailAddressAuthenticationCodeInfo",
                    "description": "Information about the sent authentication code",
                    "required": true
                },
                {
                    "name": "email_address_reset_state",
                    "type": "EmailAddressResetState",
                    "description": "Reset state of the email address; may be null if the email address can't be reset",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitCode",
            "description": "TDLib needs the user's authentication code to authorize. Call checkAuthenticationCode to check the code",
            "type": "AuthorizationState",
            "annotations": [
                {
                    "name": "code_info",
                    "type": "authenticationCodeInfo",
                    "description": "Information about the authorization code that was sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitOtherDeviceConfirmation",
            "description": "The user needs to confirm authorization on another logged in device by scanning a QR code with the provided link",
            "type": "AuthorizationState",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "A tg:// URL for the QR code. The link will be updated frequently",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitRegistration",
            "description": "The user is unregistered and need to accept terms of service and enter their first name and last name to finish registration. Call registerUser to accept the terms of service and provide the data",
            "type": "AuthorizationState",
            "annotations": [
                {
                    "name": "terms_of_service",
                    "type": "termsOfService",
                    "description": "Telegram terms of service",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateWaitPassword",
            "description": "The user has been authorized, but needs to enter a 2-step verification password to start using the application.",
            "type": "AuthorizationState",
            "annotations": [
                {
                    "name": "password_hint",
                    "type": "string",
                    "description": "Hint for the password; may be empty",
                    "required": false
                },
                {
                    "name": "has_recovery_email_address",
                    "type": "Bool",
                    "description": "True, if a recovery email address has been set up",
                    "required": true
                },
                {
                    "name": "has_passport_data",
                    "type": "Bool",
                    "description": "True, if some Telegram Passport elements were saved",
                    "required": true
                },
                {
                    "name": "recovery_email_address_pattern",
                    "type": "string",
                    "description": "Pattern of the email address to which the recovery email was sent; empty until a recovery email has been sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateReady",
            "description": "The user has been successfully authorized. TDLib is now ready to answer general requests",
            "type": "AuthorizationState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateLoggingOut",
            "description": "The user is currently logging out",
            "type": "AuthorizationState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateClosing",
            "description": "TDLib is closing, all subsequent queries will be answered with the error 500. Note that closing TDLib can take a while. All resources will be freed only after authorizationStateClosed has been received",
            "type": "AuthorizationState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "authorizationStateClosed",
            "description": "TDLib client is in its final state. All databases are closed and all resources are released. No other updates will be received after this. All queries will be responded to",
            "type": "AuthorizationState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "firebaseDeviceVerificationParametersSafetyNet",
            "description": "Device verification must be performed with the SafetyNet Attestation API",
            "type": "FirebaseDeviceVerificationParameters",
            "annotations": [
                {
                    "name": "nonce",
                    "type": "bytes",
                    "description": "Nonce to pass to the SafetyNet Attestation API",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "firebaseDeviceVerificationParametersPlayIntegrity",
            "description": "Device verification must be performed with the classic Play Integrity verification (https://developer.android.com/google/play/integrity/classic)",
            "type": "FirebaseDeviceVerificationParameters",
            "annotations": [
                {
                    "name": "nonce",
                    "type": "string",
                    "description": "Base64url-encoded nonce to pass to the Play Integrity API",
                    "required": true
                },
                {
                    "name": "cloud_project_number",
                    "type": "int64",
                    "description": "Cloud project number to pass to the Play Integrity API",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passwordState",
            "description": "Represents the current state of 2-step verification",
            "type": "PasswordState",
            "annotations": [
                {
                    "name": "has_password",
                    "type": "Bool",
                    "description": "True, if a 2-step verification password is set",
                    "required": true
                },
                {
                    "name": "password_hint",
                    "type": "string",
                    "description": "Hint for the password; may be empty",
                    "required": false
                },
                {
                    "name": "has_recovery_email_address",
                    "type": "Bool",
                    "description": "True, if a recovery email is set",
                    "required": true
                },
                {
                    "name": "has_passport_data",
                    "type": "Bool",
                    "description": "True, if some Telegram Passport elements were saved",
                    "required": true
                },
                {
                    "name": "recovery_email_address_code_info",
                    "type": "emailAddressAuthenticationCodeInfo",
                    "description": "Information about the recovery email address to which the confirmation email was sent; may be null",
                    "required": false
                },
                {
                    "name": "login_email_address_pattern",
                    "type": "string",
                    "description": "Pattern of the email address set up for logging in",
                    "required": true
                },
                {
                    "name": "pending_reset_date",
                    "type": "int32",
                    "description": "If not 0, point in time (Unix timestamp) after which the 2-step verification password can be reset immediately using resetPassword",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "recoveryEmailAddress",
            "description": "Contains information about the current recovery email address",
            "type": "RecoveryEmailAddress",
            "annotations": [
                {
                    "name": "recovery_email_address",
                    "type": "string",
                    "description": "Recovery email address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "temporaryPasswordState",
            "description": "Returns information about the availability of a temporary password, which can be used for payments",
            "type": "TemporaryPasswordState",
            "annotations": [
                {
                    "name": "has_password",
                    "type": "Bool",
                    "description": "True, if a temporary password is available",
                    "required": true
                },
                {
                    "name": "valid_for",
                    "type": "int32",
                    "description": "Time left before the temporary password expires, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "localFile",
            "description": "Represents a local file",
            "type": "LocalFile",
            "annotations": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "Local path to the locally available file part; may be empty",
                    "required": false
                },
                {
                    "name": "can_be_downloaded",
                    "type": "Bool",
                    "description": "True, if it is possible to download or generate the file",
                    "required": true
                },
                {
                    "name": "can_be_deleted",
                    "type": "Bool",
                    "description": "True, if the file can be deleted",
                    "required": true
                },
                {
                    "name": "is_downloading_active",
                    "type": "Bool",
                    "description": "True, if the file is currently being downloaded (or a local copy is being generated by some other means)",
                    "required": true
                },
                {
                    "name": "is_downloading_completed",
                    "type": "Bool",
                    "description": "True, if the local copy is fully available",
                    "required": true
                },
                {
                    "name": "download_offset",
                    "type": "int53",
                    "description": "Download will be started from this offset. downloaded_prefix_size is calculated from this offset",
                    "required": true
                },
                {
                    "name": "downloaded_prefix_size",
                    "type": "int53",
                    "description": "If is_downloading_completed is false, then only some prefix of the file starting from download_offset is ready to be read. downloaded_prefix_size is the size of that prefix in bytes",
                    "required": true
                },
                {
                    "name": "downloaded_size",
                    "type": "int53",
                    "description": "Total downloaded file size, in bytes. Can be used only for calculating download progress. The actual file size may be bigger, and some parts of it may contain garbage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "remoteFile",
            "description": "Represents a remote file",
            "type": "RemoteFile",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Remote file identifier; may be empty. Can be used by the current user across application restarts or even from other devices. Uniquely identifies a file, but a file can have a lot of different valid identifiers.",
                    "required": false
                },
                {
                    "name": "unique_id",
                    "type": "string",
                    "description": "Unique file identifier; may be empty if unknown. The unique file identifier which is the same for the same file even for different users and is persistent over time",
                    "required": false
                },
                {
                    "name": "is_uploading_active",
                    "type": "Bool",
                    "description": "True, if the file is currently being uploaded (or a remote copy is being generated by some other means)",
                    "required": true
                },
                {
                    "name": "is_uploading_completed",
                    "type": "Bool",
                    "description": "True, if a remote copy is fully available",
                    "required": true
                },
                {
                    "name": "uploaded_size",
                    "type": "int53",
                    "description": "Size of the remote available part of the file, in bytes; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "file",
            "description": "Represents a file",
            "type": "File",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique file identifier",
                    "required": true
                },
                {
                    "name": "size",
                    "type": "int53",
                    "description": "File size, in bytes; 0 if unknown",
                    "required": true
                },
                {
                    "name": "expected_size",
                    "type": "int53",
                    "description": "Approximate file size in bytes in case the exact file size is unknown. Can be used to show download/upload progress",
                    "required": true
                },
                {
                    "name": "local",
                    "type": "localFile",
                    "description": "Information about the local copy of the file",
                    "required": true
                },
                {
                    "name": "remote",
                    "type": "remoteFile",
                    "description": "Information about the remote copy of the file",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputFileId",
            "description": "A file defined by its unique identifier",
            "type": "InputFile",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique file identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputFileRemote",
            "description": "A file defined by its remote identifier. The remote identifier is guaranteed to be usable only if the corresponding file is still accessible to the user and known to TDLib.",
            "type": "InputFile",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Remote file identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputFileLocal",
            "description": "A file defined by a local path",
            "type": "InputFile",
            "annotations": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "Local path to the file",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputFileGenerated",
            "description": "A file generated by the application",
            "type": "InputFile",
            "annotations": [
                {
                    "name": "original_path",
                    "type": "string",
                    "description": "Local path to a file from which the file is generated; may be empty if there is no such file",
                    "required": false
                },
                {
                    "name": "conversion",
                    "type": "string",
                    "description": "String specifying the conversion applied to the original file; must be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage",
                    "required": true
                },
                {
                    "name": "expected_size",
                    "type": "int53",
                    "description": "Expected size of the generated file, in bytes; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "photoSize",
            "description": "Describes an image in JPEG format",
            "type": "PhotoSize",
            "annotations": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Image type (see https://core.telegram.org/constructor/photoSize)",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "file",
                    "description": "Information about the image file",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Image width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Image height",
                    "required": true
                },
                {
                    "name": "progressive_sizes",
                    "type": "vector<int32>",
                    "description": "Sizes of progressive JPEG file prefixes, which can be used to preliminarily show the image; in bytes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "minithumbnail",
            "description": "Thumbnail image of a very poor quality and low resolution",
            "type": "Minithumbnail",
            "annotations": [
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Thumbnail width, usually doesn't exceed 40",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Thumbnail height, usually doesn't exceed 40",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "The thumbnail in JPEG format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatJpeg",
            "description": "The thumbnail is in JPEG format",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatGif",
            "description": "The thumbnail is in static GIF format. It will be used only for some bot inline query results",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatMpeg4",
            "description": "The thumbnail is in MPEG4 format. It will be used only for some animations and videos",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatPng",
            "description": "The thumbnail is in PNG format. It will be used only for background patterns",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatTgs",
            "description": "The thumbnail is in TGS format. It will be used only for sticker sets",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatWebm",
            "description": "The thumbnail is in WEBM format. It will be used only for sticker sets",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnailFormatWebp",
            "description": "The thumbnail is in WEBP format. It will be used only for some stickers and sticker sets",
            "type": "ThumbnailFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "thumbnail",
            "description": "Represents a thumbnail",
            "type": "Thumbnail",
            "annotations": [
                {
                    "name": "format",
                    "type": "ThumbnailFormat",
                    "description": "Thumbnail format",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Thumbnail width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Thumbnail height",
                    "required": true
                },
                {
                    "name": "file",
                    "type": "file",
                    "description": "The thumbnail",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "maskPointForehead",
            "description": "The mask is placed relatively to the forehead",
            "type": "MaskPoint",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "maskPointEyes",
            "description": "The mask is placed relatively to the eyes",
            "type": "MaskPoint",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "maskPointMouth",
            "description": "The mask is placed relatively to the mouth",
            "type": "MaskPoint",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "maskPointChin",
            "description": "The mask is placed relatively to the chin",
            "type": "MaskPoint",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "maskPosition",
            "description": "Position on a photo where a mask is placed",
            "type": "MaskPosition",
            "annotations": [
                {
                    "name": "point",
                    "type": "MaskPoint",
                    "description": "Part of the face, relative to which the mask is placed",
                    "required": true
                },
                {
                    "name": "x_shift",
                    "type": "double",
                    "description": "Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. (For example, -1.0 will place the mask just to the left of the default mask position)",
                    "required": true
                },
                {
                    "name": "y_shift",
                    "type": "double",
                    "description": "Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. (For example, 1.0 will place the mask just below the default mask position)",
                    "required": true
                },
                {
                    "name": "scale",
                    "type": "double",
                    "description": "Mask scaling coefficient. (For example, 2.0 means a doubled size)",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerFormatWebp",
            "description": "The sticker is an image in WEBP format",
            "type": "StickerFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerFormatTgs",
            "description": "The sticker is an animation in TGS format",
            "type": "StickerFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerFormatWebm",
            "description": "The sticker is a video in WEBM format",
            "type": "StickerFormat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerTypeRegular",
            "description": "The sticker is a regular sticker",
            "type": "StickerType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerTypeMask",
            "description": "The sticker is a mask in WEBP format to be placed on photos or videos",
            "type": "StickerType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerTypeCustomEmoji",
            "description": "The sticker is a custom emoji to be used inside message text and caption",
            "type": "StickerType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerFullTypeRegular",
            "description": "The sticker is a regular sticker",
            "type": "StickerFullType",
            "annotations": [
                {
                    "name": "premium_animation",
                    "type": "file",
                    "description": "Premium animation of the sticker; may be null. If present, only Telegram Premium users can use the sticker",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerFullTypeMask",
            "description": "The sticker is a mask in WEBP format to be placed on photos or videos",
            "type": "StickerFullType",
            "annotations": [
                {
                    "name": "mask_position",
                    "type": "maskPosition",
                    "description": "Position where the mask is placed; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerFullTypeCustomEmoji",
            "description": "The sticker is a custom emoji to be used inside message text and caption. Currently, only Telegram Premium users can use custom emoji",
            "type": "StickerFullType",
            "annotations": [
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of the custom emoji",
                    "required": true
                },
                {
                    "name": "needs_repainting",
                    "type": "Bool",
                    "description": "True, if the sticker must be repainted to a text color in messages, the color of the Telegram Premium badge in emoji status, white color on chat photos, or another appropriate color in other places",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "closedVectorPath",
            "description": "Represents a closed vector path. The path begins at the end point of the last command",
            "type": "ClosedVectorPath",
            "annotations": [
                {
                    "name": "commands",
                    "type": "vector<VectorPathCommand>",
                    "description": "List of vector path commands",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pollOption",
            "description": "Describes one answer option of a poll",
            "type": "PollOption",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Option text; 1-100 characters. Only custom emoji entities are allowed",
                    "required": true
                },
                {
                    "name": "voter_count",
                    "type": "int32",
                    "description": "Number of voters for this option, available only for closed or voted polls",
                    "required": true
                },
                {
                    "name": "vote_percentage",
                    "type": "int32",
                    "description": "The percentage of votes for this option; 0-100",
                    "required": true
                },
                {
                    "name": "is_chosen",
                    "type": "Bool",
                    "description": "True, if the option was chosen by the user",
                    "required": true
                },
                {
                    "name": "is_being_chosen",
                    "type": "Bool",
                    "description": "True, if the option is being chosen by a pending setPollAnswer request",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pollTypeRegular",
            "description": "A regular poll",
            "type": "PollType",
            "annotations": [
                {
                    "name": "allow_multiple_answers",
                    "type": "Bool",
                    "description": "True, if multiple answer options can be chosen simultaneously",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pollTypeQuiz",
            "description": "A poll in quiz mode, which has exactly one correct answer option and can be answered only once",
            "type": "PollType",
            "annotations": [
                {
                    "name": "correct_option_id",
                    "type": "int32",
                    "description": "0-based identifier of the correct answer option; -1 for a yet unanswered poll",
                    "required": true
                },
                {
                    "name": "explanation",
                    "type": "formattedText",
                    "description": "Text that is shown when the user chooses an incorrect answer or taps on the lamp icon; 0-200 characters with at most 2 line feeds; empty for a yet unanswered poll",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "animation",
            "description": "Describes an animation file. The animation must be encoded in GIF or MPEG4 format",
            "type": "Animation",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the animation, in seconds; as defined by the sender",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Width of the animation",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Height of the animation",
                    "required": true
                },
                {
                    "name": "file_name",
                    "type": "string",
                    "description": "Original name of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the file, usually 'image/gif' or 'video/mp4'",
                    "required": true
                },
                {
                    "name": "has_stickers",
                    "type": "Bool",
                    "description": "True, if stickers were added to the animation. The list of corresponding sticker set can be received using getAttachedStickerSets",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Animation minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Animation thumbnail in JPEG or MPEG4 format; may be null",
                    "required": false
                },
                {
                    "name": "animation",
                    "type": "file",
                    "description": "File containing the animation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "audio",
            "description": "Describes an audio file. Audio is usually in MP3 or M4A format",
            "type": "Audio",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the audio, in seconds; as defined by the sender",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the audio; as defined by the sender",
                    "required": true
                },
                {
                    "name": "performer",
                    "type": "string",
                    "description": "Performer of the audio; as defined by the sender",
                    "required": true
                },
                {
                    "name": "file_name",
                    "type": "string",
                    "description": "Original name of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "The MIME type of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "album_cover_minithumbnail",
                    "type": "minithumbnail",
                    "description": "The minithumbnail of the album cover; may be null",
                    "required": false
                },
                {
                    "name": "album_cover_thumbnail",
                    "type": "thumbnail",
                    "description": "The thumbnail of the album cover in JPEG format; as defined by the sender. The full size thumbnail is supposed to be extracted from the downloaded audio file; may be null",
                    "required": false
                },
                {
                    "name": "external_album_covers",
                    "type": "vector<thumbnail>",
                    "description": "Album cover variants to use if the downloaded audio file contains no album cover. Provided thumbnail dimensions are approximate",
                    "required": true
                },
                {
                    "name": "audio",
                    "type": "file",
                    "description": "File containing the audio",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "document",
            "description": "Describes a document of any type",
            "type": "Document",
            "annotations": [
                {
                    "name": "file_name",
                    "type": "string",
                    "description": "Original name of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Document minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Document thumbnail in JPEG or PNG format (PNG will be used only for background patterns); as defined by the sender; may be null",
                    "required": false
                },
                {
                    "name": "document",
                    "type": "file",
                    "description": "File containing the document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "photo",
            "description": "Describes a photo",
            "type": "Photo",
            "annotations": [
                {
                    "name": "has_stickers",
                    "type": "Bool",
                    "description": "True, if stickers were added to the photo. The list of corresponding sticker sets can be received using getAttachedStickerSets",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Photo minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "sizes",
                    "type": "vector<photoSize>",
                    "description": "Available variants of the photo, in different sizes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sticker",
            "description": "Describes a sticker",
            "type": "Sticker",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique sticker identifier within the set; 0 if none",
                    "required": true
                },
                {
                    "name": "set_id",
                    "type": "int64",
                    "description": "Identifier of the sticker set to which the sticker belongs; 0 if none",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Sticker width; as defined by the sender",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Sticker height; as defined by the sender",
                    "required": true
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji corresponding to the sticker",
                    "required": true
                },
                {
                    "name": "format",
                    "type": "StickerFormat",
                    "description": "Sticker format",
                    "required": true
                },
                {
                    "name": "full_type",
                    "type": "StickerFullType",
                    "description": "Sticker's full type",
                    "required": true
                },
                {
                    "name": "outline",
                    "type": "vector<closedVectorPath>",
                    "description": "Sticker's outline represented as a list of closed vector paths; may be empty. The coordinate system origin is in the upper-left corner",
                    "required": false
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Sticker thumbnail in WEBP or JPEG format; may be null",
                    "required": false
                },
                {
                    "name": "sticker",
                    "type": "file",
                    "description": "File containing the sticker",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "video",
            "description": "Describes a video file",
            "type": "Video",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds; as defined by the sender",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Video width; as defined by the sender",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Video height; as defined by the sender",
                    "required": true
                },
                {
                    "name": "file_name",
                    "type": "string",
                    "description": "Original name of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the file; as defined by the sender",
                    "required": true
                },
                {
                    "name": "has_stickers",
                    "type": "Bool",
                    "description": "True, if stickers were added to the video. The list of corresponding sticker sets can be received using getAttachedStickerSets",
                    "required": true
                },
                {
                    "name": "supports_streaming",
                    "type": "Bool",
                    "description": "True, if the video is supposed to be streamed",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Video minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Video thumbnail in JPEG or MPEG4 format; as defined by the sender; may be null",
                    "required": false
                },
                {
                    "name": "video",
                    "type": "file",
                    "description": "File containing the video",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "videoNote",
            "description": "Describes a video note. The video must be equal in width and height, cropped to a circle, and stored in MPEG4 format",
            "type": "VideoNote",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds; as defined by the sender",
                    "required": true
                },
                {
                    "name": "waveform",
                    "type": "bytes",
                    "description": "A waveform representation of the video note's audio in 5-bit format; may be empty if unknown",
                    "required": false
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Video width and height; as defined by the sender",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Video minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Video thumbnail in JPEG format; as defined by the sender; may be null",
                    "required": false
                },
                {
                    "name": "speech_recognition_result",
                    "type": "SpeechRecognitionResult",
                    "description": "Result of speech recognition in the video note; may be null",
                    "required": false
                },
                {
                    "name": "video",
                    "type": "file",
                    "description": "File containing the video",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "voiceNote",
            "description": "Describes a voice note",
            "type": "VoiceNote",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the voice note, in seconds; as defined by the sender",
                    "required": true
                },
                {
                    "name": "waveform",
                    "type": "bytes",
                    "description": "A waveform representation of the voice note in 5-bit format",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the file; as defined by the sender. Usually, one of 'audio/ogg' for Opus in an OGG container, 'audio/mpeg' for an MP3 audio, or 'audio/mp4' for an M4A audio",
                    "required": true
                },
                {
                    "name": "speech_recognition_result",
                    "type": "SpeechRecognitionResult",
                    "description": "Result of speech recognition in the voice note; may be null",
                    "required": false
                },
                {
                    "name": "voice",
                    "type": "file",
                    "description": "File containing the voice note",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "animatedEmoji",
            "description": "Describes an animated or custom representation of an emoji",
            "type": "AnimatedEmoji",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "Sticker for the emoji; may be null if yet unknown for a custom emoji. If the sticker is a custom emoji, then it can have arbitrary format",
                    "required": false
                },
                {
                    "name": "sticker_width",
                    "type": "int32",
                    "description": "Expected width of the sticker, which can be used if the sticker is null",
                    "required": true
                },
                {
                    "name": "sticker_height",
                    "type": "int32",
                    "description": "Expected height of the sticker, which can be used if the sticker is null",
                    "required": true
                },
                {
                    "name": "fitzpatrick_type",
                    "type": "int32",
                    "description": "Emoji modifier fitzpatrick type; 0-6; 0 if none",
                    "required": true
                },
                {
                    "name": "sound",
                    "type": "file",
                    "description": "File containing the sound to be played when the sticker is clicked; may be null. The sound is encoded with the Opus codec, and stored inside an OGG container",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "contact",
            "description": "Describes a user contact",
            "type": "Contact",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number of the user",
                    "required": true
                },
                {
                    "name": "first_name",
                    "type": "string",
                    "description": "First name of the user; 1-255 characters in length",
                    "required": true
                },
                {
                    "name": "last_name",
                    "type": "string",
                    "description": "Last name of the user",
                    "required": true
                },
                {
                    "name": "vcard",
                    "type": "string",
                    "description": "Additional data about the user in a form of vCard; 0-2048 bytes in length",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user, if known; 0 otherwise",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "location",
            "description": "Describes a location on planet Earth",
            "type": "Location",
            "annotations": [
                {
                    "name": "latitude",
                    "type": "double",
                    "description": "Latitude of the location in degrees; as defined by the sender",
                    "required": true
                },
                {
                    "name": "longitude",
                    "type": "double",
                    "description": "Longitude of the location, in degrees; as defined by the sender",
                    "required": true
                },
                {
                    "name": "horizontal_accuracy",
                    "type": "double",
                    "description": "The estimated horizontal accuracy of the location, in meters; as defined by the sender. 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "venue",
            "description": "Describes a venue",
            "type": "Venue",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "Venue location; as defined by the sender",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Venue name; as defined by the sender",
                    "required": true
                },
                {
                    "name": "address",
                    "type": "string",
                    "description": "Venue address; as defined by the sender",
                    "required": true
                },
                {
                    "name": "provider",
                    "type": "string",
                    "description": "Provider of the venue database; as defined by the sender. Currently, only 'foursquare' and 'gplaces' (Google Places) need to be supported",
                    "required": true
                },
                {
                    "name": "id",
                    "type": "string",
                    "description": "Identifier of the venue in the provider database; as defined by the sender",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "Type of the venue in the provider database; as defined by the sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "game",
            "description": "Describes a game. Use getInternalLink with internalLinkTypeGame to share the game",
            "type": "Game",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique game identifier",
                    "required": true
                },
                {
                    "name": "short_name",
                    "type": "string",
                    "description": "Game short name",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Game title",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Game text, usually containing scoreboards for a game",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Game description",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Game photo",
                    "required": true
                },
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Game animation; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "webApp",
            "description": "Describes a Web App. Use getInternalLink with internalLinkTypeWebApp to share the Web App",
            "type": "WebApp",
            "annotations": [
                {
                    "name": "short_name",
                    "type": "string",
                    "description": "Web App short name",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Web App title",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Web App description",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Web App photo",
                    "required": true
                },
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Web App animation; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "poll",
            "description": "Describes a poll",
            "type": "Poll",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique poll identifier",
                    "required": true
                },
                {
                    "name": "question",
                    "type": "formattedText",
                    "description": "Poll question; 1-300 characters. Only custom emoji entities are allowed",
                    "required": true
                },
                {
                    "name": "options",
                    "type": "vector<pollOption>",
                    "description": "List of poll answer options",
                    "required": true
                },
                {
                    "name": "total_voter_count",
                    "type": "int32",
                    "description": "Total number of voters, participating in the poll",
                    "required": true
                },
                {
                    "name": "recent_voter_ids",
                    "type": "vector<MessageSender>",
                    "description": "Identifiers of recent voters, if the poll is non-anonymous",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "True, if the poll is anonymous",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "PollType",
                    "description": "Type of the poll",
                    "required": true
                },
                {
                    "name": "open_period",
                    "type": "int32",
                    "description": "Amount of time the poll will be active after creation, in seconds",
                    "required": true
                },
                {
                    "name": "close_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the poll will automatically be closed",
                    "required": true
                },
                {
                    "name": "is_closed",
                    "type": "Bool",
                    "description": "True, if the poll is closed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "background",
            "description": "Describes a chat background",
            "type": "Background",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique background identifier",
                    "required": true
                },
                {
                    "name": "is_default",
                    "type": "Bool",
                    "description": "True, if this is one of default backgrounds",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "True, if the background is dark and is recommended to be used with dark theme",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Unique background name",
                    "required": true
                },
                {
                    "name": "document",
                    "type": "document",
                    "description": "Document with the background; may be null. Null only for filled and chat theme backgrounds",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "BackgroundType",
                    "description": "Type of the background",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgrounds",
            "description": "Contains a list of backgrounds",
            "type": "Backgrounds",
            "annotations": [
                {
                    "name": "backgrounds",
                    "type": "vector<background>",
                    "description": "A list of backgrounds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBackground",
            "description": "Describes a background set for a specific chat",
            "type": "ChatBackground",
            "annotations": [
                {
                    "name": "background",
                    "type": "background",
                    "description": "The background",
                    "required": true
                },
                {
                    "name": "dark_theme_dimming",
                    "type": "int32",
                    "description": "Dimming of the background in dark themes, as a percentage; 0-100. Applied only to Wallpaper and Fill types of background",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "profilePhoto",
            "description": "Describes a user profile photo",
            "type": "ProfilePhoto",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Photo identifier; 0 for an empty photo. Can be used to find a photo in a list of user profile photos",
                    "required": true
                },
                {
                    "name": "small",
                    "type": "file",
                    "description": "A small (160x160) user profile photo. The file can be downloaded only before the photo is changed",
                    "required": true
                },
                {
                    "name": "big",
                    "type": "file",
                    "description": "A big (640x640) user profile photo. The file can be downloaded only before the photo is changed",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "User profile photo minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "has_animation",
                    "type": "Bool",
                    "description": "True, if the photo has animated variant",
                    "required": true
                },
                {
                    "name": "is_personal",
                    "type": "Bool",
                    "description": "True, if the photo is visible only for the current user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPhotoInfo",
            "description": "Contains basic information about the photo of a chat",
            "type": "ChatPhotoInfo",
            "annotations": [
                {
                    "name": "small",
                    "type": "file",
                    "description": "A small (160x160) chat photo variant in JPEG format. The file can be downloaded only before the photo is changed",
                    "required": true
                },
                {
                    "name": "big",
                    "type": "file",
                    "description": "A big (640x640) chat photo variant in JPEG format. The file can be downloaded only before the photo is changed",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Chat photo minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "has_animation",
                    "type": "Bool",
                    "description": "True, if the photo has animated variant",
                    "required": true
                },
                {
                    "name": "is_personal",
                    "type": "Bool",
                    "description": "True, if the photo is visible only for the current user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userTypeRegular",
            "description": "A regular user",
            "type": "UserType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userTypeDeleted",
            "description": "A deleted user or deleted bot. No information on the user besides the user identifier is available. It is not possible to perform any active actions on this type of user",
            "type": "UserType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userTypeBot",
            "description": "A bot (see https://core.telegram.org/bots)",
            "type": "UserType",
            "annotations": [
                {
                    "name": "can_be_edited",
                    "type": "Bool",
                    "description": "True, if the bot is owned by the current user and can be edited using the methods toggleBotUsernameIsActive, reorderBotActiveUsernames, setBotProfilePhoto, setBotName, setBotInfoDescription, and setBotInfoShortDescription",
                    "required": true
                },
                {
                    "name": "can_join_groups",
                    "type": "Bool",
                    "description": "True, if the bot can be invited to basic group and supergroup chats",
                    "required": true
                },
                {
                    "name": "can_read_all_group_messages",
                    "type": "Bool",
                    "description": "True, if the bot can read all messages in basic group or supergroup chats and not just those addressed to the bot. In private and channel chats a bot can always read all messages",
                    "required": true
                },
                {
                    "name": "has_main_web_app",
                    "type": "Bool",
                    "description": "True, if the bot has the main Web App",
                    "required": true
                },
                {
                    "name": "is_inline",
                    "type": "Bool",
                    "description": "True, if the bot supports inline queries",
                    "required": true
                },
                {
                    "name": "inline_query_placeholder",
                    "type": "string",
                    "description": "Placeholder for inline queries (displayed on the application input field)",
                    "required": true
                },
                {
                    "name": "need_location",
                    "type": "Bool",
                    "description": "True, if the location of the user is expected to be sent with every inline query to this bot",
                    "required": true
                },
                {
                    "name": "can_connect_to_business",
                    "type": "Bool",
                    "description": "True, if the bot supports connection to Telegram Business accounts",
                    "required": true
                },
                {
                    "name": "can_be_added_to_attachment_menu",
                    "type": "Bool",
                    "description": "True, if the bot can be added to attachment or side menu",
                    "required": true
                },
                {
                    "name": "active_user_count",
                    "type": "int32",
                    "description": "The number of recently active users of the bot",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userTypeUnknown",
            "description": "No information on the user besides the user identifier is available, yet this user has not been deleted. This object is extremely rare and must be handled like a deleted user. It is not possible to perform any actions on users of this type",
            "type": "UserType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommand",
            "description": "Represents a command supported by a bot",
            "type": "BotCommand",
            "annotations": [
                {
                    "name": "command",
                    "type": "string",
                    "description": "Text of the bot command",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Description of the bot command",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommands",
            "description": "Contains a list of bot commands",
            "type": "BotCommands",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "Bot's user identifier",
                    "required": true
                },
                {
                    "name": "commands",
                    "type": "vector<botCommand>",
                    "description": "List of bot commands",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botMenuButton",
            "description": "Describes a button to be shown instead of bot commands menu button",
            "type": "BotMenuButton",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the button",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of a Web App to open when the button is pressed. If the link is of the type internalLinkTypeWebApp, then it must be processed accordingly. Otherwise, the link must be passed to openWebApp",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatLocation",
            "description": "Represents a location to which a chat is connected",
            "type": "ChatLocation",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The location",
                    "required": true
                },
                {
                    "name": "address",
                    "type": "string",
                    "description": "Location address; 1-64 characters, as defined by the chat owner",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "birthdate",
            "description": "Represents a birthdate of a user",
            "type": "Birthdate",
            "annotations": [
                {
                    "name": "day",
                    "type": "int32",
                    "description": "Day of the month; 1-31",
                    "required": true
                },
                {
                    "name": "month",
                    "type": "int32",
                    "description": "Month of the year; 1-12",
                    "required": true
                },
                {
                    "name": "year",
                    "type": "int32",
                    "description": "Birth year; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "closeBirthdayUser",
            "description": "Describes a user that had or will have a birthday soon",
            "type": "CloseBirthdayUser",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "birthdate",
                    "type": "birthdate",
                    "description": "Birthdate of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessAwayMessageScheduleAlways",
            "description": "Send away messages always",
            "type": "BusinessAwayMessageSchedule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessAwayMessageScheduleOutsideOfOpeningHours",
            "description": "Send away messages outside of the business opening hours",
            "type": "BusinessAwayMessageSchedule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessAwayMessageScheduleCustom",
            "description": "Send away messages only in the specified time span",
            "type": "BusinessAwayMessageSchedule",
            "annotations": [
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the away messages will start to be sent",
                    "required": true
                },
                {
                    "name": "end_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the away messages will stop to be sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessLocation",
            "description": "Represents a location of a business",
            "type": "BusinessLocation",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The location; may be null if not specified",
                    "required": false
                },
                {
                    "name": "address",
                    "type": "string",
                    "description": "Location address; 1-96 characters",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessRecipients",
            "description": "Describes private chats chosen for automatic interaction with a business",
            "type": "BusinessRecipients",
            "annotations": [
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of selected private chats",
                    "required": true
                },
                {
                    "name": "excluded_chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of private chats that are always excluded; for businessConnectedBot only",
                    "required": true
                },
                {
                    "name": "select_existing_chats",
                    "type": "Bool",
                    "description": "True, if all existing private chats are selected",
                    "required": true
                },
                {
                    "name": "select_new_chats",
                    "type": "Bool",
                    "description": "True, if all new private chats are selected",
                    "required": true
                },
                {
                    "name": "select_contacts",
                    "type": "Bool",
                    "description": "True, if all private chats with contacts are selected",
                    "required": true
                },
                {
                    "name": "select_non_contacts",
                    "type": "Bool",
                    "description": "True, if all private chats with non-contacts are selected",
                    "required": true
                },
                {
                    "name": "exclude_selected",
                    "type": "Bool",
                    "description": "If true, then all private chats except the selected are chosen. Otherwise, only the selected chats are chosen",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessAwayMessageSettings",
            "description": "Describes settings for messages that are automatically sent by a Telegram Business account when it is away",
            "type": "BusinessAwayMessageSettings",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique quick reply shortcut identifier for the away messages",
                    "required": true
                },
                {
                    "name": "recipients",
                    "type": "businessRecipients",
                    "description": "Chosen recipients of the away messages",
                    "required": true
                },
                {
                    "name": "schedule",
                    "type": "BusinessAwayMessageSchedule",
                    "description": "Settings used to check whether the current user is away",
                    "required": true
                },
                {
                    "name": "offline_only",
                    "type": "Bool",
                    "description": "True, if the messages must not be sent if the account was online in the last 10 minutes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessGreetingMessageSettings",
            "description": "Describes settings for greeting messages that are automatically sent by a Telegram Business account as response to incoming messages in an inactive private chat",
            "type": "BusinessGreetingMessageSettings",
            "annotations": [
                {
                    "name": "shortcut_id",
                    "type": "int32",
                    "description": "Unique quick reply shortcut identifier for the greeting messages",
                    "required": true
                },
                {
                    "name": "recipients",
                    "type": "businessRecipients",
                    "description": "Chosen recipients of the greeting messages",
                    "required": true
                },
                {
                    "name": "inactivity_days",
                    "type": "int32",
                    "description": "The number of days after which a chat will be considered as inactive; currently, must be on of 7, 14, 21, or 28",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessConnectedBot",
            "description": "Describes a bot connected to a business account",
            "type": "BusinessConnectedBot",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the bot",
                    "required": true
                },
                {
                    "name": "recipients",
                    "type": "businessRecipients",
                    "description": "Private chats that will be accessible to the bot",
                    "required": true
                },
                {
                    "name": "can_reply",
                    "type": "Bool",
                    "description": "True, if the bot can send messages to the private chats; false otherwise",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessStartPage",
            "description": "Describes settings for a business account start page",
            "type": "BusinessStartPage",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title text of the start page",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "string",
                    "description": "Message text of the start page",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "Greeting sticker of the start page; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputBusinessStartPage",
            "description": "Describes settings for a business account start page to set",
            "type": "InputBusinessStartPage",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title text of the start page; 0-getOption('business_start_page_title_length_max') characters",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "string",
                    "description": "Message text of the start page; 0-getOption('business_start_page_message_length_max') characters",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Greeting sticker of the start page; pass null if none. The sticker must belong to a sticker set and must not be a custom emoji",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessOpeningHoursInterval",
            "description": "Describes an interval of time when the business is open",
            "type": "BusinessOpeningHoursInterval",
            "annotations": [
                {
                    "name": "start_minute",
                    "type": "int32",
                    "description": "The minute's sequence number in a week, starting on Monday, marking the start of the time interval during which the business is open; 0-7*24*60",
                    "required": true
                },
                {
                    "name": "end_minute",
                    "type": "int32",
                    "description": "The minute's sequence number in a week, starting on Monday, marking the end of the time interval during which the business is open; 1-8*24*60",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessOpeningHours",
            "description": "Describes opening hours of a business",
            "type": "BusinessOpeningHours",
            "annotations": [
                {
                    "name": "time_zone_id",
                    "type": "string",
                    "description": "Unique time zone identifier",
                    "required": true
                },
                {
                    "name": "opening_hours",
                    "type": "vector<businessOpeningHoursInterval>",
                    "description": "Intervals of the time when the business is open",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessInfo",
            "description": "Contains information about a Telegram Business account",
            "type": "BusinessInfo",
            "annotations": [
                {
                    "name": "location",
                    "type": "businessLocation",
                    "description": "Location of the business; may be null if none",
                    "required": false
                },
                {
                    "name": "opening_hours",
                    "type": "businessOpeningHours",
                    "description": "Opening hours of the business; may be null if none. The hours are guaranteed to be valid and has already been split by week days",
                    "required": false
                },
                {
                    "name": "local_opening_hours",
                    "type": "businessOpeningHours",
                    "description": "Opening hours of the business in the local time; may be null if none. The hours are guaranteed to be valid and has already been split by week days.",
                    "required": false
                },
                {
                    "name": "next_open_in",
                    "type": "int32",
                    "description": "Time left before the business will open the next time, in seconds; 0 if unknown. An updateUserFullInfo update is not triggered when value of this field changes",
                    "required": true
                },
                {
                    "name": "next_close_in",
                    "type": "int32",
                    "description": "Time left before the business will close the next time, in seconds; 0 if unknown. An updateUserFullInfo update is not triggered when value of this field changes",
                    "required": true
                },
                {
                    "name": "greeting_message_settings",
                    "type": "businessGreetingMessageSettings",
                    "description": "The greeting message; may be null if none or the Business account is not of the current user",
                    "required": false
                },
                {
                    "name": "away_message_settings",
                    "type": "businessAwayMessageSettings",
                    "description": "The away message; may be null if none or the Business account is not of the current user",
                    "required": false
                },
                {
                    "name": "start_page",
                    "type": "businessStartPage",
                    "description": "Information about start page of the account; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessChatLink",
            "description": "Contains information about a business chat link",
            "type": "BusinessChatLink",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The HTTPS link",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Message draft text that will be added to the input field",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Link title",
                    "required": true
                },
                {
                    "name": "view_count",
                    "type": "int32",
                    "description": "Number of times the link was used",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessChatLinks",
            "description": "Contains a list of business chat links created by the user",
            "type": "BusinessChatLinks",
            "annotations": [
                {
                    "name": "links",
                    "type": "vector<businessChatLink>",
                    "description": "List of links",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputBusinessChatLink",
            "description": "Describes a business chat link to create or edit",
            "type": "InputBusinessChatLink",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Message draft text that will be added to the input field",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Link title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessChatLinkInfo",
            "description": "Contains information about a business chat link",
            "type": "BusinessChatLinkInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the private chat that created the link",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Message draft text that must be added to the input field",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPhotoStickerTypeRegularOrMask",
            "description": "Information about the sticker, which was used to create the chat photo",
            "type": "ChatPhotoStickerType",
            "annotations": [
                {
                    "name": "sticker_set_id",
                    "type": "int64",
                    "description": "Sticker set identifier",
                    "required": true
                },
                {
                    "name": "sticker_id",
                    "type": "int64",
                    "description": "Identifier of the sticker in the set",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPhotoStickerTypeCustomEmoji",
            "description": "Information about the custom emoji, which was used to create the chat photo",
            "type": "ChatPhotoStickerType",
            "annotations": [
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of the custom emoji",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPhotoSticker",
            "description": "Information about the sticker, which was used to create the chat photo. The sticker is shown at the center of the photo and occupies at most 67% of it",
            "type": "ChatPhotoSticker",
            "annotations": [
                {
                    "name": "type",
                    "type": "ChatPhotoStickerType",
                    "description": "Type of the sticker",
                    "required": true
                },
                {
                    "name": "background_fill",
                    "type": "BackgroundFill",
                    "description": "The fill to be used as background for the sticker; rotation angle in backgroundFillGradient isn't supported",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "animatedChatPhoto",
            "description": "Animated variant of a chat photo in MPEG4 format",
            "type": "AnimatedChatPhoto",
            "annotations": [
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Animation width and height",
                    "required": true
                },
                {
                    "name": "file",
                    "type": "file",
                    "description": "Information about the animation file",
                    "required": true
                },
                {
                    "name": "main_frame_timestamp",
                    "type": "double",
                    "description": "Timestamp of the frame, used as a static chat photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPhoto",
            "description": "Describes a chat or user profile photo",
            "type": "ChatPhoto",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique photo identifier",
                    "required": true
                },
                {
                    "name": "added_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the photo has been added",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Photo minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "sizes",
                    "type": "vector<photoSize>",
                    "description": "Available variants of the photo in JPEG format, in different size",
                    "required": true
                },
                {
                    "name": "animation",
                    "type": "animatedChatPhoto",
                    "description": "A big (up to 1280x1280) animated variant of the photo in MPEG4 format; may be null",
                    "required": false
                },
                {
                    "name": "small_animation",
                    "type": "animatedChatPhoto",
                    "description": "A small (160x160) animated variant of the photo in MPEG4 format; may be null even the big animation is available",
                    "required": false
                },
                {
                    "name": "sticker",
                    "type": "chatPhotoSticker",
                    "description": "Sticker-based version of the chat photo; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPhotos",
            "description": "Contains a list of chat or user profile photos",
            "type": "ChatPhotos",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of photos",
                    "required": true
                },
                {
                    "name": "photos",
                    "type": "vector<chatPhoto>",
                    "description": "List of photos",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputChatPhotoPrevious",
            "description": "A previously used profile photo of the current user",
            "type": "InputChatPhoto",
            "annotations": [
                {
                    "name": "chat_photo_id",
                    "type": "int64",
                    "description": "Identifier of the current user's profile photo to reuse",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputChatPhotoStatic",
            "description": "A static photo in JPEG format",
            "type": "InputChatPhoto",
            "annotations": [
                {
                    "name": "photo",
                    "type": "InputFile",
                    "description": "Photo to be set as profile photo. Only inputFileLocal and inputFileGenerated are allowed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputChatPhotoAnimation",
            "description": "An animation in MPEG4 format; must be square, at most 10 seconds long, have width between 160 and 1280 and be at most 2MB in size",
            "type": "InputChatPhoto",
            "annotations": [
                {
                    "name": "animation",
                    "type": "InputFile",
                    "description": "Animation to be set as profile photo. Only inputFileLocal and inputFileGenerated are allowed",
                    "required": true
                },
                {
                    "name": "main_frame_timestamp",
                    "type": "double",
                    "description": "Timestamp of the frame, which will be used as static chat photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputChatPhotoSticker",
            "description": "A sticker on a custom background",
            "type": "InputChatPhoto",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "chatPhotoSticker",
                    "description": "Information about the sticker",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPermissions",
            "description": "Describes actions that a user is allowed to take in a chat",
            "type": "ChatPermissions",
            "annotations": [
                {
                    "name": "can_send_basic_messages",
                    "type": "Bool",
                    "description": "True, if the user can send text messages, contacts, giveaways, giveaway winners, invoices, locations, and venues",
                    "required": true
                },
                {
                    "name": "can_send_audios",
                    "type": "Bool",
                    "description": "True, if the user can send music files",
                    "required": true
                },
                {
                    "name": "can_send_documents",
                    "type": "Bool",
                    "description": "True, if the user can send documents",
                    "required": true
                },
                {
                    "name": "can_send_photos",
                    "type": "Bool",
                    "description": "True, if the user can send photos",
                    "required": true
                },
                {
                    "name": "can_send_videos",
                    "type": "Bool",
                    "description": "True, if the user can send videos",
                    "required": true
                },
                {
                    "name": "can_send_video_notes",
                    "type": "Bool",
                    "description": "True, if the user can send video notes",
                    "required": true
                },
                {
                    "name": "can_send_voice_notes",
                    "type": "Bool",
                    "description": "True, if the user can send voice notes",
                    "required": true
                },
                {
                    "name": "can_send_polls",
                    "type": "Bool",
                    "description": "True, if the user can send polls",
                    "required": true
                },
                {
                    "name": "can_send_other_messages",
                    "type": "Bool",
                    "description": "True, if the user can send animations, games, stickers, and dice and use inline bots",
                    "required": true
                },
                {
                    "name": "can_add_link_previews",
                    "type": "Bool",
                    "description": "True, if the user may add a link preview to their messages",
                    "required": true
                },
                {
                    "name": "can_change_info",
                    "type": "Bool",
                    "description": "True, if the user can change the chat title, photo, and other settings",
                    "required": true
                },
                {
                    "name": "can_invite_users",
                    "type": "Bool",
                    "description": "True, if the user can invite new users to the chat",
                    "required": true
                },
                {
                    "name": "can_pin_messages",
                    "type": "Bool",
                    "description": "True, if the user can pin messages",
                    "required": true
                },
                {
                    "name": "can_create_topics",
                    "type": "Bool",
                    "description": "True, if the user can create topics",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatAdministratorRights",
            "description": "Describes rights of the administrator",
            "type": "ChatAdministratorRights",
            "annotations": [
                {
                    "name": "can_manage_chat",
                    "type": "Bool",
                    "description": "True, if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report supergroup spam messages and ignore slow mode. Implied by any other privilege; applicable to supergroups and channels only",
                    "required": true
                },
                {
                    "name": "can_change_info",
                    "type": "Bool",
                    "description": "True, if the administrator can change the chat title, photo, and other settings",
                    "required": true
                },
                {
                    "name": "can_post_messages",
                    "type": "Bool",
                    "description": "True, if the administrator can create channel posts or view channel statistics; applicable to channels only",
                    "required": true
                },
                {
                    "name": "can_edit_messages",
                    "type": "Bool",
                    "description": "True, if the administrator can edit messages of other users and pin messages; applicable to channels only",
                    "required": true
                },
                {
                    "name": "can_delete_messages",
                    "type": "Bool",
                    "description": "True, if the administrator can delete messages of other users",
                    "required": true
                },
                {
                    "name": "can_invite_users",
                    "type": "Bool",
                    "description": "True, if the administrator can invite new users to the chat",
                    "required": true
                },
                {
                    "name": "can_restrict_members",
                    "type": "Bool",
                    "description": "True, if the administrator can restrict, ban, or unban chat members or view supergroup statistics; always true for channels",
                    "required": true
                },
                {
                    "name": "can_pin_messages",
                    "type": "Bool",
                    "description": "True, if the administrator can pin messages; applicable to basic groups and supergroups only",
                    "required": true
                },
                {
                    "name": "can_manage_topics",
                    "type": "Bool",
                    "description": "True, if the administrator can create, rename, close, reopen, hide, and unhide forum topics; applicable to forum supergroups only",
                    "required": true
                },
                {
                    "name": "can_promote_members",
                    "type": "Bool",
                    "description": "True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that were directly or indirectly promoted by them",
                    "required": true
                },
                {
                    "name": "can_manage_video_chats",
                    "type": "Bool",
                    "description": "True, if the administrator can manage video chats",
                    "required": true
                },
                {
                    "name": "can_post_stories",
                    "type": "Bool",
                    "description": "True, if the administrator can create new chat stories, or edit and delete posted stories; applicable to supergroups and channels only",
                    "required": true
                },
                {
                    "name": "can_edit_stories",
                    "type": "Bool",
                    "description": "True, if the administrator can edit stories posted by other users, post stories to the chat page, pin chat stories, and access story archive; applicable to supergroups and channels only",
                    "required": true
                },
                {
                    "name": "can_delete_stories",
                    "type": "Bool",
                    "description": "True, if the administrator can delete stories posted by other users; applicable to supergroups and channels only",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "True, if the administrator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starSubscriptionPricing",
            "description": "Describes subscription plan paid in Telegram Stars",
            "type": "StarSubscriptionPricing",
            "annotations": [
                {
                    "name": "period",
                    "type": "int32",
                    "description": "The number of seconds between consecutive Telegram Star debiting",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The amount of Telegram Stars that must be paid for each period",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starSubscription",
            "description": "Contains information about subscription to a channel chat paid in Telegram Stars",
            "type": "StarSubscription",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the subscription",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the channel chat that is subscribed",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the subscription will expire or expired",
                    "required": true
                },
                {
                    "name": "can_reuse",
                    "type": "Bool",
                    "description": "True, if the subscription is active and the user can use the method reuseStarSubscription to join the subscribed chat again",
                    "required": true
                },
                {
                    "name": "is_canceled",
                    "type": "Bool",
                    "description": "True, if the subscription was canceled",
                    "required": true
                },
                {
                    "name": "is_expiring",
                    "type": "Bool",
                    "description": "True, if the subscription expires soon and there are no enough Telegram Stars on the user's balance to extend it",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "The invite link that can be used to renew the subscription if it has been expired; may be empty, if the link isn't available anymore",
                    "required": false
                },
                {
                    "name": "pricing",
                    "type": "starSubscriptionPricing",
                    "description": "The subscription plan",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starSubscriptions",
            "description": "Represents a list of Telegram Star subscriptions",
            "type": "StarSubscriptions",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The amount of owned Telegram Stars",
                    "required": true
                },
                {
                    "name": "subscriptions",
                    "type": "vector<starSubscription>",
                    "description": "List of subbscriptions for Telegram Stars",
                    "required": true
                },
                {
                    "name": "required_star_count",
                    "type": "int53",
                    "description": "The number of Telegram Stars required to buy to extend subscriptions expiring soon",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "productInfo",
            "description": "Contains information about a product that can be paid with invoice",
            "type": "ProductInfo",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Product title",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "formattedText",
                    "description": "Product description",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Product photo; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumPaymentOption",
            "description": "Describes an option for buying Telegram Premium to a user",
            "type": "PremiumPaymentOption",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code for Telegram Premium subscription payment",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The amount to pay, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "discount_percentage",
                    "type": "int32",
                    "description": "The discount associated with this option, as a percentage",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active",
                    "required": true
                },
                {
                    "name": "store_product_id",
                    "type": "string",
                    "description": "Identifier of the store product associated with the option",
                    "required": true
                },
                {
                    "name": "payment_link",
                    "type": "InternalLinkType",
                    "description": "An internal link to be opened for buying Telegram Premium to the user if store payment isn't possible; may be null if direct payment isn't available",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStatePaymentOption",
            "description": "Describes an option for buying or upgrading Telegram Premium for self",
            "type": "PremiumStatePaymentOption",
            "annotations": [
                {
                    "name": "payment_option",
                    "type": "premiumPaymentOption",
                    "description": "Information about the payment option",
                    "required": true
                },
                {
                    "name": "is_current",
                    "type": "Bool",
                    "description": "True, if this is the currently used Telegram Premium subscription option",
                    "required": true
                },
                {
                    "name": "is_upgrade",
                    "type": "Bool",
                    "description": "True, if the payment option can be used to upgrade the existing Telegram Premium subscription",
                    "required": true
                },
                {
                    "name": "last_transaction_id",
                    "type": "string",
                    "description": "Identifier of the last in-store transaction for the currently used option",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiftCodePaymentOption",
            "description": "Describes an option for creating Telegram Premium gift codes. Use telegramPaymentPurposePremiumGiftCodes for out-of-store payments",
            "type": "PremiumGiftCodePaymentOption",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code for Telegram Premium gift code payment",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The amount to pay, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "user_count",
                    "type": "int32",
                    "description": "Number of users which will be able to activate the gift codes",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active",
                    "required": true
                },
                {
                    "name": "store_product_id",
                    "type": "string",
                    "description": "Identifier of the store product associated with the option; may be empty if none",
                    "required": false
                },
                {
                    "name": "store_product_quantity",
                    "type": "int32",
                    "description": "Number of times the store product must be paid",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiftCodePaymentOptions",
            "description": "Contains a list of options for creating Telegram Premium gift codes",
            "type": "PremiumGiftCodePaymentOptions",
            "annotations": [
                {
                    "name": "options",
                    "type": "vector<premiumGiftCodePaymentOption>",
                    "description": "The list of options",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiftCodeInfo",
            "description": "Contains information about a Telegram Premium gift code",
            "type": "PremiumGiftCodeInfo",
            "annotations": [
                {
                    "name": "creator_id",
                    "type": "MessageSender",
                    "description": "Identifier of a chat or a user that created the gift code; may be null if unknown. If null and the code is from messagePremiumGiftCode message, then creator_id from the message can be used",
                    "required": false
                },
                {
                    "name": "creation_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the code was created",
                    "required": true
                },
                {
                    "name": "is_from_giveaway",
                    "type": "Bool",
                    "description": "True, if the gift code was created for a giveaway",
                    "required": true
                },
                {
                    "name": "giveaway_message_id",
                    "type": "int53",
                    "description": "Identifier of the corresponding giveaway message in the creator_id chat; can be 0 or an identifier of a deleted message",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of a user for which the code was created; 0 if none",
                    "required": true
                },
                {
                    "name": "use_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the code was activated; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starPaymentOption",
            "description": "Describes an option for buying Telegram Stars. Use telegramPaymentPurposeStars for out-of-store payments",
            "type": "StarPaymentOption",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code for the payment",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The amount to pay, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars that will be purchased",
                    "required": true
                },
                {
                    "name": "store_product_id",
                    "type": "string",
                    "description": "Identifier of the store product associated with the option; may be empty if none",
                    "required": false
                },
                {
                    "name": "is_additional",
                    "type": "Bool",
                    "description": "True, if the option must be shown only in the full list of payment options",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starPaymentOptions",
            "description": "Contains a list of options for buying Telegram Stars",
            "type": "StarPaymentOptions",
            "annotations": [
                {
                    "name": "options",
                    "type": "vector<starPaymentOption>",
                    "description": "The list of options",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionDirectionIncoming",
            "description": "The transaction is incoming and increases the number of owned Telegram Stars",
            "type": "StarTransactionDirection",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionDirectionOutgoing",
            "description": "The transaction is outgoing and decreases the number of owned Telegram Stars",
            "type": "StarTransactionDirection",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botTransactionPurposePaidMedia",
            "description": "Paid media were bought",
            "type": "BotTransactionPurpose",
            "annotations": [
                {
                    "name": "media",
                    "type": "vector<PaidMedia>",
                    "description": "The bought media if the trancastion wasn't refunded",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botTransactionPurposeInvoicePayment",
            "description": "User bought a product from the bot",
            "type": "BotTransactionPurpose",
            "annotations": [
                {
                    "name": "product_info",
                    "type": "productInfo",
                    "description": "Information about the bought product; may be null if not applicable",
                    "required": false
                },
                {
                    "name": "invoice_payload",
                    "type": "bytes",
                    "description": "Invoice payload; for bots only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "channelTransactionPurposePaidMedia",
            "description": "Paid media were bought",
            "type": "ChannelTransactionPurpose",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the corresponding message with paid media; can be an identifier of a deleted message",
                    "required": true
                },
                {
                    "name": "media",
                    "type": "vector<PaidMedia>",
                    "description": "The bought media if the trancastion wasn't refunded",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "channelTransactionPurposeJoin",
            "description": "User joined the channel and subscribed to regular payments in Telegram Stars",
            "type": "ChannelTransactionPurpose",
            "annotations": [
                {
                    "name": "period",
                    "type": "int32",
                    "description": "The number of seconds between consecutive Telegram Star debiting",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "channelTransactionPurposeReaction",
            "description": "User paid for a reaction",
            "type": "ChannelTransactionPurpose",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the reacted message; can be an identifier of a deleted message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerTelegram",
            "description": "The transaction is a transaction with Telegram through a bot",
            "type": "StarTransactionPartner",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerAppStore",
            "description": "The transaction is a transaction with App Store",
            "type": "StarTransactionPartner",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerGooglePlay",
            "description": "The transaction is a transaction with Google Play",
            "type": "StarTransactionPartner",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerFragment",
            "description": "The transaction is a transaction with Fragment",
            "type": "StarTransactionPartner",
            "annotations": [
                {
                    "name": "withdrawal_state",
                    "type": "RevenueWithdrawalState",
                    "description": "State of the withdrawal; may be null for refunds from Fragment",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerTelegramAds",
            "description": "The transaction is a transaction with Telegram Ad platform",
            "type": "StarTransactionPartner",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerBot",
            "description": "The transaction is a transaction with a bot",
            "type": "StarTransactionPartner",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the bot",
                    "required": true
                },
                {
                    "name": "purpose",
                    "type": "BotTransactionPurpose",
                    "description": "Purpose of the transaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerBusiness",
            "description": "The transaction is a transaction with a business account",
            "type": "StarTransactionPartner",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the business account user",
                    "required": true
                },
                {
                    "name": "media",
                    "type": "vector<PaidMedia>",
                    "description": "The bought media if the trancastion wasn't refunded",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerChannel",
            "description": "The transaction is a transaction with a channel chat",
            "type": "StarTransactionPartner",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                },
                {
                    "name": "purpose",
                    "type": "ChannelTransactionPurpose",
                    "description": "Purpose of the transaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerUser",
            "description": "The transaction is a gift of Telegram Stars from another user",
            "type": "StarTransactionPartner",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user; 0 if the gift was anonymous",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "A sticker to be shown in the transaction information; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactionPartnerUnsupported",
            "description": "The transaction is a transaction with unknown partner",
            "type": "StarTransactionPartner",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransaction",
            "description": "Represents a transaction changing the amount of owned Telegram Stars",
            "type": "StarTransaction",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the transaction",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The amount of added owned Telegram Stars; negative for outgoing transactions",
                    "required": true
                },
                {
                    "name": "is_refund",
                    "type": "Bool",
                    "description": "True, if the transaction is a refund of a previous transaction",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the transaction was completed",
                    "required": true
                },
                {
                    "name": "partner",
                    "type": "StarTransactionPartner",
                    "description": "Source of the incoming transaction, or its recipient for outgoing transactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starTransactions",
            "description": "Represents a list of Telegram Star transactions",
            "type": "StarTransactions",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The amount of owned Telegram Stars",
                    "required": true
                },
                {
                    "name": "transactions",
                    "type": "vector<starTransaction>",
                    "description": "List of transactions with Telegram Stars",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayParticipantStatusEligible",
            "description": "The user is eligible for the giveaway",
            "type": "PremiumGiveawayParticipantStatus",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayParticipantStatusParticipating",
            "description": "The user participates in the giveaway",
            "type": "PremiumGiveawayParticipantStatus",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayParticipantStatusAlreadyWasMember",
            "description": "The user can't participate in the giveaway, because they have already been member of the chat",
            "type": "PremiumGiveawayParticipantStatus",
            "annotations": [
                {
                    "name": "joined_chat_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user joined the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayParticipantStatusAdministrator",
            "description": "The user can't participate in the giveaway, because they are an administrator in one of the chats that created the giveaway",
            "type": "PremiumGiveawayParticipantStatus",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat administered by the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayParticipantStatusDisallowedCountry",
            "description": "The user can't participate in the giveaway, because they phone number is from a disallowed country",
            "type": "PremiumGiveawayParticipantStatus",
            "annotations": [
                {
                    "name": "user_country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code of the user's country",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayInfoOngoing",
            "description": "Describes an ongoing giveaway",
            "type": "PremiumGiveawayInfo",
            "annotations": [
                {
                    "name": "creation_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the giveaway was created",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "PremiumGiveawayParticipantStatus",
                    "description": "Status of the current user in the giveaway",
                    "required": true
                },
                {
                    "name": "is_ended",
                    "type": "Bool",
                    "description": "True, if the giveaway has ended and results are being prepared",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayInfoCompleted",
            "description": "Describes a completed giveaway",
            "type": "PremiumGiveawayInfo",
            "annotations": [
                {
                    "name": "creation_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the giveaway was created",
                    "required": true
                },
                {
                    "name": "actual_winners_selection_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the winners were selected. May be bigger than winners selection date specified in parameters of the giveaway",
                    "required": true
                },
                {
                    "name": "was_refunded",
                    "type": "Bool",
                    "description": "True, if the giveaway was canceled and was fully refunded",
                    "required": true
                },
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Number of winners in the giveaway",
                    "required": true
                },
                {
                    "name": "activation_count",
                    "type": "int32",
                    "description": "Number of winners, which activated their gift codes",
                    "required": true
                },
                {
                    "name": "gift_code",
                    "type": "string",
                    "description": "Telegram Premium gift code that was received by the current user; empty if the user isn't a winner in the giveaway",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "accentColor",
            "description": "Contains information about supported accent color for user/chat name, background of empty chat photo, replies to messages and link previews",
            "type": "AccentColor",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Accent color identifier",
                    "required": true
                },
                {
                    "name": "built_in_accent_color_id",
                    "type": "int32",
                    "description": "Identifier of a built-in color to use in places, where only one color is needed; 0-6",
                    "required": true
                },
                {
                    "name": "light_theme_colors",
                    "type": "vector<int32>",
                    "description": "The list of 1-3 colors in RGB format, describing the accent color, as expected to be shown in light themes",
                    "required": true
                },
                {
                    "name": "dark_theme_colors",
                    "type": "vector<int32>",
                    "description": "The list of 1-3 colors in RGB format, describing the accent color, as expected to be shown in dark themes",
                    "required": true
                },
                {
                    "name": "min_channel_chat_boost_level",
                    "type": "int32",
                    "description": "The minimum chat boost level required to use the color in a channel chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "profileAccentColors",
            "description": "Contains information about supported accent colors for user profile photo background in RGB format",
            "type": "ProfileAccentColors",
            "annotations": [
                {
                    "name": "palette_colors",
                    "type": "vector<int32>",
                    "description": "The list of 1-2 colors in RGB format, describing the colors, as expected to be shown in the color palette settings",
                    "required": true
                },
                {
                    "name": "background_colors",
                    "type": "vector<int32>",
                    "description": "The list of 1-2 colors in RGB format, describing the colors, as expected to be used for the profile photo background",
                    "required": true
                },
                {
                    "name": "story_colors",
                    "type": "vector<int32>",
                    "description": "The list of 2 colors in RGB format, describing the colors of the gradient to be used for the unread active story indicator around profile photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "profileAccentColor",
            "description": "Contains information about supported accent color for user profile photo background",
            "type": "ProfileAccentColor",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Profile accent color identifier",
                    "required": true
                },
                {
                    "name": "light_theme_colors",
                    "type": "profileAccentColors",
                    "description": "Accent colors expected to be used in light themes",
                    "required": true
                },
                {
                    "name": "dark_theme_colors",
                    "type": "profileAccentColors",
                    "description": "Accent colors expected to be used in dark themes",
                    "required": true
                },
                {
                    "name": "min_supergroup_chat_boost_level",
                    "type": "int32",
                    "description": "The minimum chat boost level required to use the color in a supergroup chat",
                    "required": true
                },
                {
                    "name": "min_channel_chat_boost_level",
                    "type": "int32",
                    "description": "The minimum chat boost level required to use the color in a channel chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiStatus",
            "description": "Describes a custom emoji to be shown instead of the Telegram Premium badge",
            "type": "EmojiStatus",
            "annotations": [
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of the custom emoji in stickerFormatTgs format",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the status will expire; 0 if never",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiStatuses",
            "description": "Contains a list of custom emoji identifiers for emoji statuses",
            "type": "EmojiStatuses",
            "annotations": [
                {
                    "name": "custom_emoji_ids",
                    "type": "vector<int64>",
                    "description": "The list of custom emoji identifiers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "usernames",
            "description": "Describes usernames assigned to a user, a supergroup, or a channel",
            "type": "Usernames",
            "annotations": [
                {
                    "name": "active_usernames",
                    "type": "vector<string>",
                    "description": "List of active usernames; the first one must be shown as the primary username. The order of active usernames can be changed with reorderActiveUsernames, reorderBotActiveUsernames or reorderSupergroupActiveUsernames",
                    "required": true
                },
                {
                    "name": "disabled_usernames",
                    "type": "vector<string>",
                    "description": "List of currently disabled usernames; the username can be activated with toggleUsernameIsActive, toggleBotUsernameIsActive, or toggleSupergroupUsernameIsActive",
                    "required": true
                },
                {
                    "name": "editable_username",
                    "type": "string",
                    "description": "The active username, which can be changed with setUsername or setSupergroupUsername. Information about other active usernames can be received using getCollectibleItemInfo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "user",
            "description": "Represents a user",
            "type": "User",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "first_name",
                    "type": "string",
                    "description": "First name of the user",
                    "required": true
                },
                {
                    "name": "last_name",
                    "type": "string",
                    "description": "Last name of the user",
                    "required": true
                },
                {
                    "name": "usernames",
                    "type": "usernames",
                    "description": "Usernames of the user; may be null",
                    "required": false
                },
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number of the user",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "UserStatus",
                    "description": "Current online status of the user",
                    "required": true
                },
                {
                    "name": "profile_photo",
                    "type": "profilePhoto",
                    "description": "Profile photo of the user; may be null",
                    "required": false
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color for name, and backgrounds of profile photo, reply header, and link preview. For Telegram Premium users only",
                    "required": true
                },
                {
                    "name": "background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the reply header and link preview background; 0 if none. For Telegram Premium users only",
                    "required": true
                },
                {
                    "name": "profile_accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color for the user's profile; -1 if none. For Telegram Premium users only",
                    "required": true
                },
                {
                    "name": "profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the background of the user's profile; 0 if none. For Telegram Premium users only",
                    "required": true
                },
                {
                    "name": "emoji_status",
                    "type": "emojiStatus",
                    "description": "Emoji status to be shown instead of the default Telegram Premium badge; may be null. For Telegram Premium users only",
                    "required": false
                },
                {
                    "name": "is_contact",
                    "type": "Bool",
                    "description": "The user is a contact of the current user",
                    "required": true
                },
                {
                    "name": "is_mutual_contact",
                    "type": "Bool",
                    "description": "The user is a contact of the current user and the current user is a contact of the user",
                    "required": true
                },
                {
                    "name": "is_close_friend",
                    "type": "Bool",
                    "description": "The user is a close friend of the current user; implies that the user is a contact",
                    "required": true
                },
                {
                    "name": "is_verified",
                    "type": "Bool",
                    "description": "True, if the user is verified",
                    "required": true
                },
                {
                    "name": "is_premium",
                    "type": "Bool",
                    "description": "True, if the user is a Telegram Premium user",
                    "required": true
                },
                {
                    "name": "is_support",
                    "type": "Bool",
                    "description": "True, if the user is Telegram support account",
                    "required": true
                },
                {
                    "name": "restriction_reason",
                    "type": "string",
                    "description": "If non-empty, it contains a human-readable description of the reason why access to this user must be restricted",
                    "required": false
                },
                {
                    "name": "is_scam",
                    "type": "Bool",
                    "description": "True, if many users reported this user as a scam",
                    "required": true
                },
                {
                    "name": "is_fake",
                    "type": "Bool",
                    "description": "True, if many users reported this user as a fake account",
                    "required": true
                },
                {
                    "name": "has_active_stories",
                    "type": "Bool",
                    "description": "True, if the user has non-expired stories available to the current user",
                    "required": true
                },
                {
                    "name": "has_unread_active_stories",
                    "type": "Bool",
                    "description": "True, if the user has unread non-expired stories available to the current user",
                    "required": true
                },
                {
                    "name": "restricts_new_chats",
                    "type": "Bool",
                    "description": "True, if the user may restrict new chats with non-contacts. Use canSendMessageToUser to check whether the current user can message the user or try to create a chat with them",
                    "required": true
                },
                {
                    "name": "have_access",
                    "type": "Bool",
                    "description": "If false, the user is inaccessible, and the only information known about the user is inside this class. Identifier of the user can't be passed to any method",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "UserType",
                    "description": "Type of the user",
                    "required": true
                },
                {
                    "name": "language_code",
                    "type": "string",
                    "description": "IETF language tag of the user's language; only available to bots",
                    "required": true
                },
                {
                    "name": "added_to_attachment_menu",
                    "type": "Bool",
                    "description": "True, if the user added the current bot to attachment menu; only available to bots",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botInfo",
            "description": "Contains information about a bot",
            "type": "BotInfo",
            "annotations": [
                {
                    "name": "short_description",
                    "type": "string",
                    "description": "The text that is shown on the bot's profile page and is sent together with the link when users share the bot",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "The text shown in the chat with the bot if the chat is empty",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo shown in the chat with the bot if the chat is empty; may be null",
                    "required": false
                },
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Animation shown in the chat with the bot if the chat is empty; may be null",
                    "required": false
                },
                {
                    "name": "menu_button",
                    "type": "botMenuButton",
                    "description": "Information about a button to show instead of the bot commands menu button; may be null if ordinary bot commands menu must be shown",
                    "required": false
                },
                {
                    "name": "commands",
                    "type": "vector<botCommand>",
                    "description": "List of the bot commands",
                    "required": true
                },
                {
                    "name": "privacy_policy_url",
                    "type": "string",
                    "description": "The HTTP link to the privacy policy of the bot. If empty, then /privacy command must be used if supported by the bot. If the command isn't supported, then https://telegram.org/privacy-tpa must be opened",
                    "required": true
                },
                {
                    "name": "default_group_administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Default administrator rights for adding the bot to basic group and supergroup chats; may be null",
                    "required": false
                },
                {
                    "name": "default_channel_administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Default administrator rights for adding the bot to channels; may be null",
                    "required": false
                },
                {
                    "name": "has_media_previews",
                    "type": "Bool",
                    "description": "True, if the bot has media previews",
                    "required": true
                },
                {
                    "name": "edit_commands_link",
                    "type": "InternalLinkType",
                    "description": "The internal link, which can be used to edit bot commands; may be null",
                    "required": false
                },
                {
                    "name": "edit_description_link",
                    "type": "InternalLinkType",
                    "description": "The internal link, which can be used to edit bot description; may be null",
                    "required": false
                },
                {
                    "name": "edit_description_media_link",
                    "type": "InternalLinkType",
                    "description": "The internal link, which can be used to edit the photo or animation shown in the chat with the bot if the chat is empty; may be null",
                    "required": false
                },
                {
                    "name": "edit_settings_link",
                    "type": "InternalLinkType",
                    "description": "The internal link, which can be used to edit bot settings; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userFullInfo",
            "description": "Contains full information about a user",
            "type": "UserFullInfo",
            "annotations": [
                {
                    "name": "personal_photo",
                    "type": "chatPhoto",
                    "description": "User profile photo set by the current user for the contact; may be null. If null and user.profile_photo is null, then the photo is empty; otherwise, it is unknown.",
                    "required": false
                },
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "User profile photo; may be null. If null and user.profile_photo is null, then the photo is empty; otherwise, it is unknown.",
                    "required": false
                },
                {
                    "name": "public_photo",
                    "type": "chatPhoto",
                    "description": "User profile photo visible if the main photo is hidden by privacy settings; may be null. If null and user.profile_photo is null, then the photo is empty; otherwise, it is unknown.",
                    "required": false
                },
                {
                    "name": "block_list",
                    "type": "BlockList",
                    "description": "Block list to which the user is added; may be null if none",
                    "required": false
                },
                {
                    "name": "can_be_called",
                    "type": "Bool",
                    "description": "True, if the user can be called",
                    "required": true
                },
                {
                    "name": "supports_video_calls",
                    "type": "Bool",
                    "description": "True, if a video call can be created with the user",
                    "required": true
                },
                {
                    "name": "has_private_calls",
                    "type": "Bool",
                    "description": "True, if the user can't be called due to their privacy settings",
                    "required": true
                },
                {
                    "name": "has_private_forwards",
                    "type": "Bool",
                    "description": "True, if the user can't be linked in forwarded messages due to their privacy settings",
                    "required": true
                },
                {
                    "name": "has_restricted_voice_and_video_note_messages",
                    "type": "Bool",
                    "description": "True, if voice and video notes can't be sent or forwarded to the user",
                    "required": true
                },
                {
                    "name": "has_posted_to_profile_stories",
                    "type": "Bool",
                    "description": "True, if the user has posted to profile stories",
                    "required": true
                },
                {
                    "name": "has_sponsored_messages_enabled",
                    "type": "Bool",
                    "description": "True, if the user always enabled sponsored messages; known only for the current user",
                    "required": true
                },
                {
                    "name": "need_phone_number_privacy_exception",
                    "type": "Bool",
                    "description": "True, if the current user needs to explicitly allow to share their phone number with the user when the method addContact is used",
                    "required": true
                },
                {
                    "name": "set_chat_background",
                    "type": "Bool",
                    "description": "True, if the user set chat background for both chat users and it wasn't reverted yet",
                    "required": true
                },
                {
                    "name": "bio",
                    "type": "formattedText",
                    "description": "A short user bio; may be null for bots",
                    "required": false
                },
                {
                    "name": "birthdate",
                    "type": "birthdate",
                    "description": "Birthdate of the user; may be null if unknown",
                    "required": false
                },
                {
                    "name": "personal_chat_id",
                    "type": "int53",
                    "description": "Identifier of the personal chat of the user; 0 if none",
                    "required": true
                },
                {
                    "name": "premium_gift_options",
                    "type": "vector<premiumPaymentOption>",
                    "description": "The list of available options for gifting Telegram Premium to the user",
                    "required": true
                },
                {
                    "name": "group_in_common_count",
                    "type": "int32",
                    "description": "Number of group chats where both the other user and the current user are a member; 0 for the current user",
                    "required": true
                },
                {
                    "name": "business_info",
                    "type": "businessInfo",
                    "description": "Information about business settings for Telegram Business accounts; may be null if none",
                    "required": false
                },
                {
                    "name": "bot_info",
                    "type": "botInfo",
                    "description": "For bots, information about the bot; may be null if the user isn't a bot",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "users",
            "description": "Represents a list of users",
            "type": "Users",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of users found",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "A list of user identifiers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundUsers",
            "description": "Represents a list of found users",
            "type": "FoundUsers",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the found users",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatAdministrator",
            "description": "Contains information about a chat administrator",
            "type": "ChatAdministrator",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier of the administrator",
                    "required": true
                },
                {
                    "name": "custom_title",
                    "type": "string",
                    "description": "Custom title of the administrator",
                    "required": true
                },
                {
                    "name": "is_owner",
                    "type": "Bool",
                    "description": "True, if the user is the owner of the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatAdministrators",
            "description": "Represents a list of chat administrators",
            "type": "ChatAdministrators",
            "annotations": [
                {
                    "name": "administrators",
                    "type": "vector<chatAdministrator>",
                    "description": "A list of chat administrators",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMemberStatusCreator",
            "description": "The user is the owner of the chat and has all the administrator privileges",
            "type": "ChatMemberStatus",
            "annotations": [
                {
                    "name": "custom_title",
                    "type": "string",
                    "description": "A custom title of the owner; 0-16 characters without emoji; applicable to supergroups only",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "True, if the creator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only",
                    "required": true
                },
                {
                    "name": "is_member",
                    "type": "Bool",
                    "description": "True, if the user is a member of the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMemberStatusAdministrator",
            "description": "The user is a member of the chat and has some additional privileges. In basic groups, administrators can edit and delete messages sent by others, add new members, ban unprivileged members, and manage video chats.",
            "type": "ChatMemberStatus",
            "annotations": [
                {
                    "name": "custom_title",
                    "type": "string",
                    "description": "A custom title of the administrator; 0-16 characters without emoji; applicable to supergroups only",
                    "required": true
                },
                {
                    "name": "can_be_edited",
                    "type": "Bool",
                    "description": "True, if the current user can edit the administrator privileges for the called user",
                    "required": true
                },
                {
                    "name": "rights",
                    "type": "chatAdministratorRights",
                    "description": "Rights of the administrator",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMemberStatusMember",
            "description": "The user is a member of the chat, without any additional privileges or restrictions",
            "type": "ChatMemberStatus",
            "annotations": [
                {
                    "name": "member_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user will be removed from the chat because of the expired subscription; 0 if never. Ignored in setChatMemberStatus",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMemberStatusRestricted",
            "description": "The user is under certain restrictions in the chat. Not supported in basic groups and channels",
            "type": "ChatMemberStatus",
            "annotations": [
                {
                    "name": "is_member",
                    "type": "Bool",
                    "description": "True, if the user is a member of the chat",
                    "required": true
                },
                {
                    "name": "restricted_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when restrictions will be lifted from the user; 0 if never. If the user is restricted for more than 366 days or for less than 30 seconds from the current time, the user is considered to be restricted forever",
                    "required": true
                },
                {
                    "name": "permissions",
                    "type": "chatPermissions",
                    "description": "User permissions in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMemberStatusLeft",
            "description": "The user or the chat is not a chat member",
            "type": "ChatMemberStatus",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMemberStatusBanned",
            "description": "The user or the chat was banned (and hence is not a member of the chat). Implies the user can't return to the chat, view messages, or be used as a participant identifier to join a video chat of the chat",
            "type": "ChatMemberStatus",
            "annotations": [
                {
                    "name": "banned_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever. Always 0 in basic groups",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMember",
            "description": "Describes a user or a chat as a member of another chat",
            "type": "ChatMember",
            "annotations": [
                {
                    "name": "member_id",
                    "type": "MessageSender",
                    "description": "Identifier of the chat member. Currently, other chats can be only Left or Banned. Only supergroups and channels can have other chats as Left or Banned members and these chats must be supergroups or channels",
                    "required": true
                },
                {
                    "name": "inviter_user_id",
                    "type": "int53",
                    "description": "Identifier of a user that invited/promoted/banned this member in the chat; 0 if unknown",
                    "required": true
                },
                {
                    "name": "joined_chat_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user joined/was promoted/was banned in the chat",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "ChatMemberStatus",
                    "description": "Status of the member in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembers",
            "description": "Contains a list of chat members",
            "type": "ChatMembers",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of chat members found",
                    "required": true
                },
                {
                    "name": "members",
                    "type": "vector<chatMember>",
                    "description": "A list of chat members",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterContacts",
            "description": "Returns contacts of the user",
            "type": "ChatMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterAdministrators",
            "description": "Returns the owner and administrators",
            "type": "ChatMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterMembers",
            "description": "Returns all chat members, including restricted chat members",
            "type": "ChatMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterMention",
            "description": "Returns users which can be mentioned in the chat",
            "type": "ChatMembersFilter",
            "annotations": [
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If non-zero, the identifier of the current message thread",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterRestricted",
            "description": "Returns users under certain restrictions in the chat; can be used only by administrators in a supergroup",
            "type": "ChatMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterBanned",
            "description": "Returns users banned from the chat; can be used only by administrators in a supergroup or in a channel",
            "type": "ChatMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMembersFilterBots",
            "description": "Returns bot members of the chat",
            "type": "ChatMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterRecent",
            "description": "Returns recently active users in reverse chronological order",
            "type": "SupergroupMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterContacts",
            "description": "Returns contacts of the user, which are members of the supergroup or channel",
            "type": "SupergroupMembersFilter",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterAdministrators",
            "description": "Returns the owner and administrators",
            "type": "SupergroupMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterSearch",
            "description": "Used to search for supergroup or channel members via a (string) query",
            "type": "SupergroupMembersFilter",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterRestricted",
            "description": "Returns restricted supergroup members; can be used only by administrators",
            "type": "SupergroupMembersFilter",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterBanned",
            "description": "Returns users banned from the supergroup or channel; can be used only by administrators",
            "type": "SupergroupMembersFilter",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterMention",
            "description": "Returns users which can be mentioned in the supergroup",
            "type": "SupergroupMembersFilter",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Query to search for",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If non-zero, the identifier of the current message thread",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupMembersFilterBots",
            "description": "Returns bot members of the supergroup or channel",
            "type": "SupergroupMembersFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLink",
            "description": "Contains a chat invite link",
            "type": "ChatInviteLink",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Chat invite link",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the link",
                    "required": true
                },
                {
                    "name": "creator_user_id",
                    "type": "int53",
                    "description": "User identifier of an administrator created the link",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the link was created",
                    "required": true
                },
                {
                    "name": "edit_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the link was last edited; 0 if never or unknown",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the link will expire; 0 if never",
                    "required": true
                },
                {
                    "name": "subscription_pricing",
                    "type": "starSubscriptionPricing",
                    "description": "Information about subscription plan that is applied to the users joining the chat by the link; may be null if the link doesn't require subscription",
                    "required": false
                },
                {
                    "name": "member_limit",
                    "type": "int32",
                    "description": "The maximum number of members, which can join the chat using the link simultaneously; 0 if not limited. Always 0 if the link requires approval",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "int32",
                    "description": "Number of chat members, which joined the chat using the link",
                    "required": true
                },
                {
                    "name": "expired_member_count",
                    "type": "int32",
                    "description": "Number of chat members, which joined the chat using the link, but have already left because of expired subscription; for subscription links only",
                    "required": true
                },
                {
                    "name": "pending_join_request_count",
                    "type": "int32",
                    "description": "Number of pending join requests created using this link",
                    "required": true
                },
                {
                    "name": "creates_join_request",
                    "type": "Bool",
                    "description": "True, if the link only creates join request. If true, total number of joining members will be unlimited",
                    "required": true
                },
                {
                    "name": "is_primary",
                    "type": "Bool",
                    "description": "True, if the link is primary. Primary invite link can't have name, expiration date, or usage limit. There is exactly one primary invite link for each administrator with can_invite_users right at a given time",
                    "required": true
                },
                {
                    "name": "is_revoked",
                    "type": "Bool",
                    "description": "True, if the link was revoked",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinks",
            "description": "Contains a list of chat invite links",
            "type": "ChatInviteLinks",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of chat invite links found",
                    "required": true
                },
                {
                    "name": "invite_links",
                    "type": "vector<chatInviteLink>",
                    "description": "List of invite links",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinkCount",
            "description": "Describes a chat administrator with a number of active and revoked chat invite links",
            "type": "ChatInviteLinkCount",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Administrator's user identifier",
                    "required": true
                },
                {
                    "name": "invite_link_count",
                    "type": "int32",
                    "description": "Number of active invite links",
                    "required": true
                },
                {
                    "name": "revoked_invite_link_count",
                    "type": "int32",
                    "description": "Number of revoked invite links",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinkCounts",
            "description": "Contains a list of chat invite link counts",
            "type": "ChatInviteLinkCounts",
            "annotations": [
                {
                    "name": "invite_link_counts",
                    "type": "vector<chatInviteLinkCount>",
                    "description": "List of invite link counts",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinkMember",
            "description": "Describes a chat member joined a chat via an invite link",
            "type": "ChatInviteLinkMember",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "joined_chat_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user joined the chat",
                    "required": true
                },
                {
                    "name": "via_chat_folder_invite_link",
                    "type": "Bool",
                    "description": "True, if the user has joined the chat using an invite link for a chat folder",
                    "required": true
                },
                {
                    "name": "approver_user_id",
                    "type": "int53",
                    "description": "User identifier of the chat administrator, approved user join request",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinkMembers",
            "description": "Contains a list of chat members joined a chat via an invite link",
            "type": "ChatInviteLinkMembers",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of chat members found",
                    "required": true
                },
                {
                    "name": "members",
                    "type": "vector<chatInviteLinkMember>",
                    "description": "List of chat members, joined a chat via an invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inviteLinkChatTypeBasicGroup",
            "description": "The link is an invite link for a basic group",
            "type": "InviteLinkChatType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inviteLinkChatTypeSupergroup",
            "description": "The link is an invite link for a supergroup",
            "type": "InviteLinkChatType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inviteLinkChatTypeChannel",
            "description": "The link is an invite link for a channel",
            "type": "InviteLinkChatType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinkSubscriptionInfo",
            "description": "Contains information about subscription plan that must be paid by the user to use a chat invite link",
            "type": "ChatInviteLinkSubscriptionInfo",
            "annotations": [
                {
                    "name": "pricing",
                    "type": "starSubscriptionPricing",
                    "description": "Information about subscription plan that must be paid by the user to use the link",
                    "required": true
                },
                {
                    "name": "can_reuse",
                    "type": "Bool",
                    "description": "True, if the user has already paid for the subscription and can use joinChatByInviteLink to join the subscribed chat again",
                    "required": true
                },
                {
                    "name": "form_id",
                    "type": "int64",
                    "description": "Identifier of the payment form to use for subscription payment; 0 if the subscription can't be paid",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatInviteLinkInfo",
            "description": "Contains information about a chat invite link",
            "type": "ChatInviteLinkInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the invite link; 0 if the user has no access to the chat before joining",
                    "required": true
                },
                {
                    "name": "accessible_for",
                    "type": "int32",
                    "description": "If non-zero, the amount of time for which read access to the chat will remain available, in seconds",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "InviteLinkChatType",
                    "description": "Type of the chat",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the chat",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "chatPhotoInfo",
                    "description": "Chat photo; may be null",
                    "required": false
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color for chat title and background of chat photo",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Chat description",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "int32",
                    "description": "Number of members in the chat",
                    "required": true
                },
                {
                    "name": "member_user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers of some chat members that may be known to the current user",
                    "required": true
                },
                {
                    "name": "subscription_info",
                    "type": "chatInviteLinkSubscriptionInfo",
                    "description": "Information about subscription plan that must be paid by the user to use the link; may be null if the link doesn't require subscription",
                    "required": false
                },
                {
                    "name": "creates_join_request",
                    "type": "Bool",
                    "description": "True, if the link only creates join request",
                    "required": true
                },
                {
                    "name": "is_public",
                    "type": "Bool",
                    "description": "True, if the chat is a public supergroup or channel, i.e. it has a username or it is a location-based supergroup",
                    "required": true
                },
                {
                    "name": "is_verified",
                    "type": "Bool",
                    "description": "True, if the chat is verified",
                    "required": true
                },
                {
                    "name": "is_scam",
                    "type": "Bool",
                    "description": "True, if many users reported this chat as a scam",
                    "required": true
                },
                {
                    "name": "is_fake",
                    "type": "Bool",
                    "description": "True, if many users reported this chat as a fake account",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatJoinRequest",
            "description": "Describes a user that sent a join request and waits for administrator approval",
            "type": "ChatJoinRequest",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user sent the join request",
                    "required": true
                },
                {
                    "name": "bio",
                    "type": "string",
                    "description": "A short bio of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatJoinRequests",
            "description": "Contains a list of requests to join a chat",
            "type": "ChatJoinRequests",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of requests found",
                    "required": true
                },
                {
                    "name": "requests",
                    "type": "vector<chatJoinRequest>",
                    "description": "List of the requests",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatJoinRequestsInfo",
            "description": "Contains information about pending join requests for a chat",
            "type": "ChatJoinRequestsInfo",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of pending join requests",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of at most 3 users sent the newest pending join requests",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "basicGroup",
            "description": "Represents a basic group of 0-200 users (must be upgraded to a supergroup to accommodate more than 200 users)",
            "type": "BasicGroup",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Group identifier",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "int32",
                    "description": "Number of members in the group",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "ChatMemberStatus",
                    "description": "Status of the current user in the group",
                    "required": true
                },
                {
                    "name": "is_active",
                    "type": "Bool",
                    "description": "True, if the group is active",
                    "required": true
                },
                {
                    "name": "upgraded_to_supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup to which this group was upgraded; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "basicGroupFullInfo",
            "description": "Contains full information about a basic group",
            "type": "BasicGroupFullInfo",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Chat photo; may be null if empty or unknown. If non-null, then it is the same photo as in chat.photo",
                    "required": false
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Group description. Updated only after the basic group is opened",
                    "required": true
                },
                {
                    "name": "creator_user_id",
                    "type": "int53",
                    "description": "User identifier of the creator of the group; 0 if unknown",
                    "required": true
                },
                {
                    "name": "members",
                    "type": "vector<chatMember>",
                    "description": "Group members",
                    "required": true
                },
                {
                    "name": "can_hide_members",
                    "type": "Bool",
                    "description": "True, if non-administrators and non-bots can be hidden in responses to getSupergroupMembers and searchChatMembers for non-administrators after upgrading the basic group to a supergroup",
                    "required": true
                },
                {
                    "name": "can_toggle_aggressive_anti_spam",
                    "type": "Bool",
                    "description": "True, if aggressive anti-spam checks can be enabled or disabled in the supergroup after upgrading the basic group to a supergroup",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "Primary invite link for this group; may be null. For chat administrators with can_invite_users right only. Updated only after the basic group is opened",
                    "required": false
                },
                {
                    "name": "bot_commands",
                    "type": "vector<botCommands>",
                    "description": "List of commands of bots in the group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroup",
            "description": "Represents a supergroup or channel with zero or more members (subscribers in the case of channels). From the point of view of the system, a channel is a special kind of a supergroup:",
            "type": "Supergroup",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Supergroup or channel identifier",
                    "required": true
                },
                {
                    "name": "usernames",
                    "type": "usernames",
                    "description": "Usernames of the supergroup or channel; may be null",
                    "required": false
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the current user joined, or the point in time when the supergroup or channel was created, in case the user is not a member",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "ChatMemberStatus",
                    "description": "Status of the current user in the supergroup or channel; custom title will always be empty",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "int32",
                    "description": "Number of members in the supergroup or channel; 0 if unknown. Currently, it is guaranteed to be known only if the supergroup or channel was received through",
                    "required": true
                },
                {
                    "name": "boost_level",
                    "type": "int32",
                    "description": "Approximate boost level for the chat",
                    "required": true
                },
                {
                    "name": "has_linked_chat",
                    "type": "Bool",
                    "description": "True, if the channel has a discussion group, or the supergroup is the designated discussion group for a channel",
                    "required": true
                },
                {
                    "name": "has_location",
                    "type": "Bool",
                    "description": "True, if the supergroup is connected to a location, i.e. the supergroup is a location-based supergroup",
                    "required": true
                },
                {
                    "name": "sign_messages",
                    "type": "Bool",
                    "description": "True, if messages sent to the channel contains name of the sender. This field is only applicable to channels",
                    "required": true
                },
                {
                    "name": "show_message_sender",
                    "type": "Bool",
                    "description": "True, if messages sent to the channel have information about the sender user. This field is only applicable to channels",
                    "required": true
                },
                {
                    "name": "join_to_send_messages",
                    "type": "Bool",
                    "description": "True, if users need to join the supergroup before they can send messages. Always true for channels and non-discussion supergroups",
                    "required": true
                },
                {
                    "name": "join_by_request",
                    "type": "Bool",
                    "description": "True, if all users directly joining the supergroup need to be approved by supergroup administrators. Always false for channels and supergroups without username, location, or a linked chat",
                    "required": true
                },
                {
                    "name": "is_slow_mode_enabled",
                    "type": "Bool",
                    "description": "True, if the slow mode is enabled in the supergroup",
                    "required": true
                },
                {
                    "name": "is_channel",
                    "type": "Bool",
                    "description": "True, if the supergroup is a channel",
                    "required": true
                },
                {
                    "name": "is_broadcast_group",
                    "type": "Bool",
                    "description": "True, if the supergroup is a broadcast group, i.e. only administrators can send messages and there is no limit on the number of members",
                    "required": true
                },
                {
                    "name": "is_forum",
                    "type": "Bool",
                    "description": "True, if the supergroup is a forum with topics",
                    "required": true
                },
                {
                    "name": "is_verified",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel is verified",
                    "required": true
                },
                {
                    "name": "has_sensitive_content",
                    "type": "Bool",
                    "description": "True, if content of media messages in the supergroup or channel chat must be hidden with 18+ spoiler",
                    "required": true
                },
                {
                    "name": "restriction_reason",
                    "type": "string",
                    "description": "If non-empty, contains a human-readable description of the reason why access to this supergroup or channel must be restricted",
                    "required": false
                },
                {
                    "name": "is_scam",
                    "type": "Bool",
                    "description": "True, if many users reported this supergroup or channel as a scam",
                    "required": true
                },
                {
                    "name": "is_fake",
                    "type": "Bool",
                    "description": "True, if many users reported this supergroup or channel as a fake account",
                    "required": true
                },
                {
                    "name": "has_active_stories",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel has non-expired stories available to the current user",
                    "required": true
                },
                {
                    "name": "has_unread_active_stories",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel has unread non-expired stories available to the current user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "supergroupFullInfo",
            "description": "Contains full information about a supergroup or channel",
            "type": "SupergroupFullInfo",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Chat photo; may be null if empty or unknown. If non-null, then it is the same photo as in chat.photo",
                    "required": false
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Supergroup or channel description",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "int32",
                    "description": "Number of members in the supergroup or channel; 0 if unknown",
                    "required": true
                },
                {
                    "name": "administrator_count",
                    "type": "int32",
                    "description": "Number of privileged users in the supergroup or channel; 0 if unknown",
                    "required": true
                },
                {
                    "name": "restricted_count",
                    "type": "int32",
                    "description": "Number of restricted users in the supergroup; 0 if unknown",
                    "required": true
                },
                {
                    "name": "banned_count",
                    "type": "int32",
                    "description": "Number of users banned from chat; 0 if unknown",
                    "required": true
                },
                {
                    "name": "linked_chat_id",
                    "type": "int53",
                    "description": "Chat identifier of a discussion group for the channel, or a channel, for which the supergroup is the designated discussion group; 0 if none or unknown",
                    "required": true
                },
                {
                    "name": "slow_mode_delay",
                    "type": "int32",
                    "description": "Delay between consecutive sent messages for non-administrator supergroup members, in seconds",
                    "required": true
                },
                {
                    "name": "slow_mode_delay_expires_in",
                    "type": "double",
                    "description": "Time left before next message can be sent in the supergroup, in seconds. An updateSupergroupFullInfo update is not triggered when value of this field changes, but both new and old values are non-zero",
                    "required": true
                },
                {
                    "name": "can_enable_paid_reaction",
                    "type": "Bool",
                    "description": "True, if paid reaction can be enabled in the channel chat; for channels only",
                    "required": true
                },
                {
                    "name": "can_get_members",
                    "type": "Bool",
                    "description": "True, if members of the chat can be retrieved via getSupergroupMembers or searchChatMembers",
                    "required": true
                },
                {
                    "name": "has_hidden_members",
                    "type": "Bool",
                    "description": "True, if non-administrators can receive only administrators and bots using getSupergroupMembers or searchChatMembers",
                    "required": true
                },
                {
                    "name": "can_hide_members",
                    "type": "Bool",
                    "description": "True, if non-administrators and non-bots can be hidden in responses to getSupergroupMembers and searchChatMembers for non-administrators",
                    "required": true
                },
                {
                    "name": "can_set_sticker_set",
                    "type": "Bool",
                    "description": "True, if the supergroup sticker set can be changed",
                    "required": true
                },
                {
                    "name": "can_set_location",
                    "type": "Bool",
                    "description": "True, if the supergroup location can be changed",
                    "required": true
                },
                {
                    "name": "can_get_statistics",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel statistics are available",
                    "required": true
                },
                {
                    "name": "can_get_revenue_statistics",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel revenue statistics are available",
                    "required": true
                },
                {
                    "name": "can_get_star_revenue_statistics",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel Telegram Star revenue statistics are available",
                    "required": true
                },
                {
                    "name": "can_toggle_aggressive_anti_spam",
                    "type": "Bool",
                    "description": "True, if aggressive anti-spam checks can be enabled or disabled in the supergroup",
                    "required": true
                },
                {
                    "name": "is_all_history_available",
                    "type": "Bool",
                    "description": "True, if new chat members will have access to old messages. In public, discussion, of forum groups and all channels, old messages are always available,",
                    "required": true
                },
                {
                    "name": "can_have_sponsored_messages",
                    "type": "Bool",
                    "description": "True, if the chat can have sponsored messages. The value of this field is only available to the owner of the chat",
                    "required": true
                },
                {
                    "name": "has_aggressive_anti_spam_enabled",
                    "type": "Bool",
                    "description": "True, if aggressive anti-spam checks are enabled in the supergroup. The value of this field is only available to chat administrators",
                    "required": true
                },
                {
                    "name": "has_paid_media_allowed",
                    "type": "Bool",
                    "description": "True, if paid media can be sent and forwarded to the channel chat; for channels only",
                    "required": true
                },
                {
                    "name": "has_pinned_stories",
                    "type": "Bool",
                    "description": "True, if the supergroup or channel has pinned stories",
                    "required": true
                },
                {
                    "name": "my_boost_count",
                    "type": "int32",
                    "description": "Number of times the current user boosted the supergroup or channel",
                    "required": true
                },
                {
                    "name": "unrestrict_boost_count",
                    "type": "int32",
                    "description": "Number of times the supergroup must be boosted by a user to ignore slow mode and chat permission restrictions; 0 if unspecified",
                    "required": true
                },
                {
                    "name": "sticker_set_id",
                    "type": "int64",
                    "description": "Identifier of the supergroup sticker set that must be shown before user sticker sets; 0 if none",
                    "required": true
                },
                {
                    "name": "custom_emoji_sticker_set_id",
                    "type": "int64",
                    "description": "Identifier of the custom emoji sticker set that can be used in the supergroup without Telegram Premium subscription; 0 if none",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "chatLocation",
                    "description": "Location to which the supergroup is connected; may be null if none",
                    "required": false
                },
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "Primary invite link for the chat; may be null. For chat administrators with can_invite_users right only",
                    "required": false
                },
                {
                    "name": "bot_commands",
                    "type": "vector<botCommands>",
                    "description": "List of commands of bots in the group",
                    "required": true
                },
                {
                    "name": "upgraded_from_basic_group_id",
                    "type": "int53",
                    "description": "Identifier of the basic group from which supergroup was upgraded; 0 if none",
                    "required": true
                },
                {
                    "name": "upgraded_from_max_message_id",
                    "type": "int53",
                    "description": "Identifier of the last message in the basic group from which supergroup was upgraded; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "secretChatStatePending",
            "description": "The secret chat is not yet created; waiting for the other user to get online",
            "type": "SecretChatState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "secretChatStateReady",
            "description": "The secret chat is ready to use",
            "type": "SecretChatState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "secretChatStateClosed",
            "description": "The secret chat is closed",
            "type": "SecretChatState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "secretChat",
            "description": "Represents a secret chat",
            "type": "SecretChat",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Secret chat identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the chat partner",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "SecretChatState",
                    "description": "State of the secret chat",
                    "required": true
                },
                {
                    "name": "is_outbound",
                    "type": "Bool",
                    "description": "True, if the chat was created by the current user; false otherwise",
                    "required": true
                },
                {
                    "name": "key_hash",
                    "type": "bytes",
                    "description": "Hash of the currently used key for comparison with the hash of the chat partner's key. This is a string of 36 little-endian bytes, which must be split into groups of 2 bits, each denoting a pixel of one of 4 colors FFFFFF, D5E6F3, 2D5775, and 2F99C9.",
                    "required": true
                },
                {
                    "name": "layer",
                    "type": "int32",
                    "description": "Secret chat layer; determines features supported by the chat partner's application. Nested text entities and underline and strikethrough entities are supported if the layer >= 101,",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSenderUser",
            "description": "The message was sent by a known user",
            "type": "MessageSender",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user that sent the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSenderChat",
            "description": "The message was sent on behalf of a chat",
            "type": "MessageSender",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that sent the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSenders",
            "description": "Represents a list of message senders",
            "type": "MessageSenders",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of messages senders found",
                    "required": true
                },
                {
                    "name": "senders",
                    "type": "vector<MessageSender>",
                    "description": "List of message senders",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMessageSender",
            "description": "Represents a message sender, which can be used to send messages in a chat",
            "type": "ChatMessageSender",
            "annotations": [
                {
                    "name": "sender",
                    "type": "MessageSender",
                    "description": "The message sender",
                    "required": true
                },
                {
                    "name": "needs_premium",
                    "type": "Bool",
                    "description": "True, if Telegram Premium is needed to use the message sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatMessageSenders",
            "description": "Represents a list of message senders, which can be used to send messages in a chat",
            "type": "ChatMessageSenders",
            "annotations": [
                {
                    "name": "senders",
                    "type": "vector<chatMessageSender>",
                    "description": "List of available message senders",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReadDateRead",
            "description": "Contains read date of the message",
            "type": "MessageReadDate",
            "annotations": [
                {
                    "name": "read_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was read by the other user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReadDateUnread",
            "description": "The message is unread yet",
            "type": "MessageReadDate",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReadDateTooOld",
            "description": "The message is too old to get read date",
            "type": "MessageReadDate",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReadDateUserPrivacyRestricted",
            "description": "The read date is unknown due to privacy settings of the other user",
            "type": "MessageReadDate",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReadDateMyPrivacyRestricted",
            "description": "The read date is unknown due to privacy settings of the current user, but will be known if the user subscribes to Telegram Premium",
            "type": "MessageReadDate",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageViewer",
            "description": "Represents a viewer of a message",
            "type": "MessageViewer",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier of the viewer",
                    "required": true
                },
                {
                    "name": "view_date",
                    "type": "int32",
                    "description": "Approximate point in time (Unix timestamp) when the message was viewed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageViewers",
            "description": "Represents a list of message viewers",
            "type": "MessageViewers",
            "annotations": [
                {
                    "name": "viewers",
                    "type": "vector<messageViewer>",
                    "description": "List of message viewers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageOriginUser",
            "description": "The message was originally sent by a known user",
            "type": "MessageOrigin",
            "annotations": [
                {
                    "name": "sender_user_id",
                    "type": "int53",
                    "description": "Identifier of the user that originally sent the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageOriginHiddenUser",
            "description": "The message was originally sent by a user, which is hidden by their privacy settings",
            "type": "MessageOrigin",
            "annotations": [
                {
                    "name": "sender_name",
                    "type": "string",
                    "description": "Name of the sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageOriginChat",
            "description": "The message was originally sent on behalf of a chat",
            "type": "MessageOrigin",
            "annotations": [
                {
                    "name": "sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that originally sent the message",
                    "required": true
                },
                {
                    "name": "author_signature",
                    "type": "string",
                    "description": "For messages originally sent by an anonymous chat administrator, original message author signature",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageOriginChannel",
            "description": "The message was originally a post in a channel",
            "type": "MessageOrigin",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the channel chat to which the message was originally sent",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier of the original message",
                    "required": true
                },
                {
                    "name": "author_signature",
                    "type": "string",
                    "description": "Original post author signature",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "forwardSource",
            "description": "Contains information about the last message from which a new message was forwarded last time",
            "type": "ForwardSource",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message that was forwarded belonged; may be 0 if unknown",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message; may be 0 if unknown",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of the message; may be null if unknown or the new message was forwarded not to Saved Messages",
                    "required": false
                },
                {
                    "name": "sender_name",
                    "type": "string",
                    "description": "Name of the sender of the message if the sender is hidden by their privacy settings",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message is sent; 0 if unknown",
                    "required": true
                },
                {
                    "name": "is_outgoing",
                    "type": "Bool",
                    "description": "True, if the message that was forwarded is outgoing; always false if sender is unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionTypeEmoji",
            "description": "A reaction with an emoji",
            "type": "ReactionType",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Text representation of the reaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionTypeCustomEmoji",
            "description": "A reaction with a custom emoji",
            "type": "ReactionType",
            "annotations": [
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Unique identifier of the custom emoji",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionTypePaid",
            "description": "The paid reaction in a channel chat",
            "type": "ReactionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paidReactor",
            "description": "Contains information about a user that added paid reactions",
            "type": "PaidReactor",
            "annotations": [
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the user or chat that added the reactions; may be null for anonymous reactors that aren't the current user",
                    "required": false
                },
                {
                    "name": "star_count",
                    "type": "int32",
                    "description": "Number of Telegram Stars added",
                    "required": true
                },
                {
                    "name": "is_top",
                    "type": "Bool",
                    "description": "True, if the reactor is one of the most active reactors; can be false if the reactor is the current user",
                    "required": true
                },
                {
                    "name": "is_me",
                    "type": "Bool",
                    "description": "True, if the paid reaction was added by the current user",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "True, if the reactor is anonymous",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageForwardInfo",
            "description": "Contains information about a forwarded message",
            "type": "MessageForwardInfo",
            "annotations": [
                {
                    "name": "origin",
                    "type": "MessageOrigin",
                    "description": "Origin of the forwarded message",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was originally sent",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "forwardSource",
                    "description": "For messages forwarded to the chat with the current user (Saved Messages), to the Replies bot chat, or to the channel's discussion group, information about the source message from which the message was forwarded last time; may be null for other forwards or if unknown",
                    "required": false
                },
                {
                    "name": "public_service_announcement_type",
                    "type": "string",
                    "description": "The type of public service announcement for the forwarded message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageImportInfo",
            "description": "Contains information about a message created with importMessages",
            "type": "MessageImportInfo",
            "annotations": [
                {
                    "name": "sender_name",
                    "type": "string",
                    "description": "Name of the original sender",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was originally sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReplyInfo",
            "description": "Contains information about replies to a message",
            "type": "MessageReplyInfo",
            "annotations": [
                {
                    "name": "reply_count",
                    "type": "int32",
                    "description": "Number of times the message was directly or indirectly replied",
                    "required": true
                },
                {
                    "name": "recent_replier_ids",
                    "type": "vector<MessageSender>",
                    "description": "Identifiers of at most 3 recent repliers to the message; available in channels with a discussion supergroup. The users and chats are expected to be inaccessible: only their photo and name will be available",
                    "required": true
                },
                {
                    "name": "last_read_inbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read incoming reply to the message",
                    "required": true
                },
                {
                    "name": "last_read_outbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read outgoing reply to the message",
                    "required": true
                },
                {
                    "name": "last_message_id",
                    "type": "int53",
                    "description": "Identifier of the last reply to the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReaction",
            "description": "Contains information about a reaction to a message",
            "type": "MessageReaction",
            "annotations": [
                {
                    "name": "type",
                    "type": "ReactionType",
                    "description": "Type of the reaction",
                    "required": true
                },
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Number of times the reaction was added",
                    "required": true
                },
                {
                    "name": "is_chosen",
                    "type": "Bool",
                    "description": "True, if the reaction is chosen by the current user",
                    "required": true
                },
                {
                    "name": "used_sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the message sender used by the current user to add the reaction; may be null if unknown or the reaction isn't chosen",
                    "required": false
                },
                {
                    "name": "recent_sender_ids",
                    "type": "vector<MessageSender>",
                    "description": "Identifiers of at most 3 recent message senders, added the reaction; available in private, basic group and supergroup chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReactions",
            "description": "Contains a list of reactions added to a message",
            "type": "MessageReactions",
            "annotations": [
                {
                    "name": "reactions",
                    "type": "vector<messageReaction>",
                    "description": "List of added reactions",
                    "required": true
                },
                {
                    "name": "are_tags",
                    "type": "Bool",
                    "description": "True, if the reactions are tags and Telegram Premium users can filter messages by them",
                    "required": true
                },
                {
                    "name": "paid_reactors",
                    "type": "vector<paidReactor>",
                    "description": "Information about top users that added the paid reaction",
                    "required": true
                },
                {
                    "name": "can_get_added_reactions",
                    "type": "Bool",
                    "description": "True, if the list of added reactions is available using getMessageAddedReactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageInteractionInfo",
            "description": "Contains information about interactions with a message",
            "type": "MessageInteractionInfo",
            "annotations": [
                {
                    "name": "view_count",
                    "type": "int32",
                    "description": "Number of times the message was viewed",
                    "required": true
                },
                {
                    "name": "forward_count",
                    "type": "int32",
                    "description": "Number of times the message was forwarded",
                    "required": true
                },
                {
                    "name": "reply_info",
                    "type": "messageReplyInfo",
                    "description": "Information about direct or indirect replies to the message; may be null. Currently, available only in channels with a discussion supergroup and discussion supergroups for messages, which are not replies itself",
                    "required": false
                },
                {
                    "name": "reactions",
                    "type": "messageReactions",
                    "description": "The list of reactions or tags added to the message; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "unreadReaction",
            "description": "Contains information about an unread reaction to a message",
            "type": "UnreadReaction",
            "annotations": [
                {
                    "name": "type",
                    "type": "ReactionType",
                    "description": "Type of the reaction",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender, added the reaction",
                    "required": true
                },
                {
                    "name": "is_big",
                    "type": "Bool",
                    "description": "True, if the reaction was added with a big animation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageEffectTypeEmojiReaction",
            "description": "An effect from an emoji reaction",
            "type": "MessageEffectType",
            "annotations": [
                {
                    "name": "select_animation",
                    "type": "sticker",
                    "description": "Select animation for the effect in TGS format",
                    "required": true
                },
                {
                    "name": "effect_animation",
                    "type": "sticker",
                    "description": "Effect animation for the effect in TGS format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageEffectTypePremiumSticker",
            "description": "An effect from a premium sticker",
            "type": "MessageEffectType",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "The premium sticker. The effect can be found at sticker.full_type.premium_animation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageEffect",
            "description": "Contains information about an effect added to a message",
            "type": "MessageEffect",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique identifier of the effect",
                    "required": true
                },
                {
                    "name": "static_icon",
                    "type": "sticker",
                    "description": "Static icon for the effect in WEBP format; may be null if none",
                    "required": false
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji corresponding to the effect that can be used if static icon isn't available",
                    "required": true
                },
                {
                    "name": "is_premium",
                    "type": "Bool",
                    "description": "True, if Telegram Premium subscription is required to use the effect",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "MessageEffectType",
                    "description": "Type of the effect",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSendingStatePending",
            "description": "The message is being sent now, but has not yet been delivered to the server",
            "type": "MessageSendingState",
            "annotations": [
                {
                    "name": "sending_id",
                    "type": "int32",
                    "description": "Non-persistent message sending identifier, specified by the application",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSendingStateFailed",
            "description": "The message failed to be sent",
            "type": "MessageSendingState",
            "annotations": [
                {
                    "name": "error",
                    "type": "error",
                    "description": "The cause of the message sending failure",
                    "required": true
                },
                {
                    "name": "can_retry",
                    "type": "Bool",
                    "description": "True, if the message can be re-sent using resendMessages or readdQuickReplyShortcutMessages",
                    "required": true
                },
                {
                    "name": "need_another_sender",
                    "type": "Bool",
                    "description": "True, if the message can be re-sent only on behalf of a different sender",
                    "required": true
                },
                {
                    "name": "need_another_reply_quote",
                    "type": "Bool",
                    "description": "True, if the message can be re-sent only if another quote is chosen in the message that is replied by the given message",
                    "required": true
                },
                {
                    "name": "need_drop_reply",
                    "type": "Bool",
                    "description": "True, if the message can be re-sent only if the message to be replied is removed. This will be done automatically by resendMessages",
                    "required": true
                },
                {
                    "name": "retry_after",
                    "type": "double",
                    "description": "Time left before the message can be re-sent, in seconds. No update is sent when this field changes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textQuote",
            "description": "Describes manually or automatically chosen quote from another message",
            "type": "TextQuote",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text of the quote. Only Bold, Italic, Underline, Strikethrough, Spoiler, and CustomEmoji entities can be present in the text",
                    "required": true
                },
                {
                    "name": "position",
                    "type": "int32",
                    "description": "Approximate quote position in the original message in UTF-16 code units as specified by the message sender",
                    "required": true
                },
                {
                    "name": "is_manual",
                    "type": "Bool",
                    "description": "True, if the quote was manually chosen by the message sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputTextQuote",
            "description": "Describes manually chosen quote from another message",
            "type": "InputTextQuote",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text of the quote; 0-getOption('message_reply_quote_length_max') characters. Only Bold, Italic, Underline, Strikethrough, Spoiler, and CustomEmoji entities are allowed to be kept and must be kept in the quote",
                    "required": true
                },
                {
                    "name": "position",
                    "type": "int32",
                    "description": "Quote position in the original message in UTF-16 code units",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReplyToMessage",
            "description": "Describes a message replied by a given message",
            "type": "MessageReplyTo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The identifier of the chat to which the message belongs; may be 0 if the replied message is in unknown chat",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The identifier of the message; may be 0 if the replied message is in unknown chat",
                    "required": true
                },
                {
                    "name": "quote",
                    "type": "textQuote",
                    "description": "Chosen quote from the replied message; may be null if none",
                    "required": false
                },
                {
                    "name": "origin",
                    "type": "MessageOrigin",
                    "description": "Information about origin of the message if the message was from another chat or topic; may be null for messages from the same chat",
                    "required": false
                },
                {
                    "name": "origin_send_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was sent if the message was from another chat or topic; 0 for messages from the same chat",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "MessageContent",
                    "description": "Media content of the message if the message was from another chat or topic; may be null for messages from the same chat and messages without media.",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageReplyToStory",
            "description": "Describes a story replied by a given message",
            "type": "MessageReplyTo",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageReplyToMessage",
            "description": "Describes a message to be replied in the same chat and forum topic",
            "type": "InputMessageReplyTo",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The identifier of the message to be replied in the same chat and forum topic. A message can be replied in the same chat and forum topic only if messageProperties.can_be_replied",
                    "required": true
                },
                {
                    "name": "quote",
                    "type": "inputTextQuote",
                    "description": "Quote from the message to be replied; pass null if none. Must always be null for replies in secret chats",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageReplyToExternalMessage",
            "description": "Describes a message to be replied that is from a different chat or a forum topic; not supported in secret chats",
            "type": "InputMessageReplyTo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "The identifier of the chat to which the message to be replied belongs",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The identifier of the message to be replied in the specified chat. A message can be replied in another chat or forum topic only if messageProperties.can_be_replied_in_another_chat",
                    "required": true
                },
                {
                    "name": "quote",
                    "type": "inputTextQuote",
                    "description": "Quote from the message to be replied; pass null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageReplyToStory",
            "description": "Describes a story to be replied",
            "type": "InputMessageReplyTo",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the sender of the story. Currently, stories can be replied only in the sender's chat and channel stories can't be replied",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "The identifier of the story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "factCheck",
            "description": "Describes a fact-check added to the message by an independent checker",
            "type": "FactCheck",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text of the fact-check",
                    "required": true
                },
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code of the country for which the fact-check is shown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "message",
            "description": "Describes a message",
            "type": "Message",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Message identifier; unique for the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of the message",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "sending_state",
                    "type": "MessageSendingState",
                    "description": "The sending state of the message; may be null if the message isn't being sent and didn't fail to be sent",
                    "required": false
                },
                {
                    "name": "scheduling_state",
                    "type": "MessageSchedulingState",
                    "description": "The scheduling state of the message; may be null if the message isn't scheduled",
                    "required": false
                },
                {
                    "name": "is_outgoing",
                    "type": "Bool",
                    "description": "True, if the message is outgoing",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is pinned",
                    "required": true
                },
                {
                    "name": "is_from_offline",
                    "type": "Bool",
                    "description": "True, if the message was sent because of a scheduled action by the message sender, for example, as away, or greeting service message",
                    "required": true
                },
                {
                    "name": "can_be_saved",
                    "type": "Bool",
                    "description": "True, if content of the message can be saved locally or copied",
                    "required": true
                },
                {
                    "name": "has_timestamped_media",
                    "type": "Bool",
                    "description": "True, if media timestamp entities refers to a media in this message as opposed to a media in the replied message",
                    "required": true
                },
                {
                    "name": "is_channel_post",
                    "type": "Bool",
                    "description": "True, if the message is a channel post. All messages to channels are channel posts, all other messages are not channel posts",
                    "required": true
                },
                {
                    "name": "is_topic_message",
                    "type": "Bool",
                    "description": "True, if the message is a forum topic message",
                    "required": true
                },
                {
                    "name": "contains_unread_mention",
                    "type": "Bool",
                    "description": "True, if the message contains an unread mention for the current user",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was sent",
                    "required": true
                },
                {
                    "name": "edit_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was last edited",
                    "required": true
                },
                {
                    "name": "forward_info",
                    "type": "messageForwardInfo",
                    "description": "Information about the initial message sender; may be null if none or unknown",
                    "required": false
                },
                {
                    "name": "import_info",
                    "type": "messageImportInfo",
                    "description": "Information about the initial message for messages created with importMessages; may be null if the message isn't imported",
                    "required": false
                },
                {
                    "name": "interaction_info",
                    "type": "messageInteractionInfo",
                    "description": "Information about interactions with the message; may be null if none",
                    "required": false
                },
                {
                    "name": "unread_reactions",
                    "type": "vector<unreadReaction>",
                    "description": "Information about unread reactions added to the message",
                    "required": true
                },
                {
                    "name": "fact_check",
                    "type": "factCheck",
                    "description": "Information about fact-check added to the message; may be null if none",
                    "required": false
                },
                {
                    "name": "reply_to",
                    "type": "MessageReplyTo",
                    "description": "Information about the message or the story this message is replying to; may be null if none",
                    "required": false
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If non-zero, the identifier of the message thread the message belongs to; unique within the chat to which the message belongs",
                    "required": true
                },
                {
                    "name": "saved_messages_topic_id",
                    "type": "int53",
                    "description": "Identifier of the Saved Messages topic for the message; 0 for messages not from Saved Messages",
                    "required": true
                },
                {
                    "name": "self_destruct_type",
                    "type": "MessageSelfDestructType",
                    "description": "The message's self-destruct type; may be null if none",
                    "required": false
                },
                {
                    "name": "self_destruct_in",
                    "type": "double",
                    "description": "Time left before the message self-destruct timer expires, in seconds; 0 if self-destruction isn't scheduled yet",
                    "required": true
                },
                {
                    "name": "auto_delete_in",
                    "type": "double",
                    "description": "Time left before the message will be automatically deleted by message_auto_delete_time setting of the chat, in seconds; 0 if never",
                    "required": true
                },
                {
                    "name": "via_bot_user_id",
                    "type": "int53",
                    "description": "If non-zero, the user identifier of the inline bot through which this message was sent",
                    "required": true
                },
                {
                    "name": "sender_business_bot_user_id",
                    "type": "int53",
                    "description": "If non-zero, the user identifier of the business bot that sent this message",
                    "required": true
                },
                {
                    "name": "sender_boost_count",
                    "type": "int32",
                    "description": "Number of times the sender of the message boosted the supergroup at the time the message was sent; 0 if none or unknown. For messages sent by the current user, supergroupFullInfo.my_boost_count must be used instead",
                    "required": true
                },
                {
                    "name": "author_signature",
                    "type": "string",
                    "description": "For channel posts and anonymous group messages, optional author signature",
                    "required": true
                },
                {
                    "name": "media_album_id",
                    "type": "int64",
                    "description": "Unique identifier of an album this message belongs to; 0 if none. Only audios, documents, photos and videos can be grouped together in albums",
                    "required": true
                },
                {
                    "name": "effect_id",
                    "type": "int64",
                    "description": "Unique identifier of the effect added to the message; 0 if none",
                    "required": true
                },
                {
                    "name": "has_sensitive_content",
                    "type": "Bool",
                    "description": "True, if media content of the message must be hidden with 18+ spoiler",
                    "required": true
                },
                {
                    "name": "restriction_reason",
                    "type": "string",
                    "description": "If non-empty, contains a human-readable description of the reason why access to this message must be restricted",
                    "required": false
                },
                {
                    "name": "content",
                    "type": "MessageContent",
                    "description": "Content of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "Reply markup for the message; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messages",
            "description": "Contains a list of messages",
            "type": "Messages",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of messages found",
                    "required": true
                },
                {
                    "name": "messages",
                    "type": "vector<message>",
                    "description": "List of messages; messages may be null",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundMessages",
            "description": "Contains a list of messages found by a search",
            "type": "FoundMessages",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of messages found; -1 if unknown",
                    "required": true
                },
                {
                    "name": "messages",
                    "type": "vector<message>",
                    "description": "List of messages",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundChatMessages",
            "description": "Contains a list of messages found by a search in a given chat",
            "type": "FoundChatMessages",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of messages found; -1 if unknown",
                    "required": true
                },
                {
                    "name": "messages",
                    "type": "vector<message>",
                    "description": "List of messages",
                    "required": true
                },
                {
                    "name": "next_from_message_id",
                    "type": "int53",
                    "description": "The offset for the next request. If 0, there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePosition",
            "description": "Contains information about a message in a specific position",
            "type": "MessagePosition",
            "annotations": [
                {
                    "name": "position",
                    "type": "int32",
                    "description": "0-based message position in the full list of suitable messages",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message was sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePositions",
            "description": "Contains a list of message positions",
            "type": "MessagePositions",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of messages found",
                    "required": true
                },
                {
                    "name": "positions",
                    "type": "vector<messagePosition>",
                    "description": "List of message positions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageCalendarDay",
            "description": "Contains information about found messages sent on a specific day",
            "type": "MessageCalendarDay",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of found messages sent on the day",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "message",
                    "description": "First message sent on the day",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageCalendar",
            "description": "Contains information about found messages, split by days according to the option 'utc_time_offset'",
            "type": "MessageCalendar",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of found messages",
                    "required": true
                },
                {
                    "name": "days",
                    "type": "vector<messageCalendarDay>",
                    "description": "Information about messages sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessMessage",
            "description": "Describes a message from a business account as received by a bot",
            "type": "BusinessMessage",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The message",
                    "required": true
                },
                {
                    "name": "reply_to_message",
                    "type": "message",
                    "description": "Message that is replied by the message in the same chat; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessMessages",
            "description": "Contains a list of messages from a business account as received by a bot",
            "type": "BusinessMessages",
            "annotations": [
                {
                    "name": "messages",
                    "type": "vector<businessMessage>",
                    "description": "List of business messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceChatHistory",
            "description": "The message is from a chat history",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceMessageThreadHistory",
            "description": "The message is from a message thread history",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceForumTopicHistory",
            "description": "The message is from a forum topic history",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceHistoryPreview",
            "description": "The message is from chat, message thread or forum topic history preview",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceChatList",
            "description": "The message is from a chat list or a forum topic list",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceSearch",
            "description": "The message is from search results, including file downloads, local file list, outgoing document messages, calendar",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceChatEventLog",
            "description": "The message is from a chat event log",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceNotification",
            "description": "The message is from a notification",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceScreenshot",
            "description": "The message was screenshotted; the source must be used only if the message content was visible during the screenshot",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSourceOther",
            "description": "The message is from some other source",
            "type": "MessageSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSponsor",
            "description": "Information about the sponsor of a message",
            "type": "MessageSponsor",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the sponsor to be opened when the message is clicked",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo of the sponsor; may be null if must not be shown",
                    "required": false
                },
                {
                    "name": "info",
                    "type": "string",
                    "description": "Additional optional information about the sponsor to be shown along with the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sponsoredMessage",
            "description": "Describes a sponsored message",
            "type": "SponsoredMessage",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier; unique for the chat to which the sponsored message belongs among both ordinary and sponsored messages",
                    "required": true
                },
                {
                    "name": "is_recommended",
                    "type": "Bool",
                    "description": "True, if the message needs to be labeled as 'recommended' instead of 'sponsored'",
                    "required": true
                },
                {
                    "name": "can_be_reported",
                    "type": "Bool",
                    "description": "True, if the message can be reported to Telegram moderators through reportChatSponsoredMessage",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "MessageContent",
                    "description": "Content of the message. Currently, can be only of the types messageText, messageAnimation, messagePhoto, or messageVideo",
                    "required": true
                },
                {
                    "name": "sponsor",
                    "type": "messageSponsor",
                    "description": "Information about the sponsor of the message",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the sponsored message",
                    "required": true
                },
                {
                    "name": "button_text",
                    "type": "string",
                    "description": "Text for the message action button",
                    "required": true
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color for title, button text and message background",
                    "required": true
                },
                {
                    "name": "background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the message background; 0 if none",
                    "required": true
                },
                {
                    "name": "additional_info",
                    "type": "string",
                    "description": "If non-empty, additional information about the sponsored message to be shown along with the message",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sponsoredMessages",
            "description": "Contains a list of sponsored messages",
            "type": "SponsoredMessages",
            "annotations": [
                {
                    "name": "messages",
                    "type": "vector<sponsoredMessage>",
                    "description": "List of sponsored messages",
                    "required": true
                },
                {
                    "name": "messages_between",
                    "type": "int32",
                    "description": "The minimum number of messages between shown sponsored messages, or 0 if only one sponsored message must be shown after all ordinary messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportChatSponsoredMessageOption",
            "description": "Describes an option to report a sponsored message",
            "type": "ReportChatSponsoredMessageOption",
            "annotations": [
                {
                    "name": "id",
                    "type": "bytes",
                    "description": "Unique identifier of the option",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the option",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportChatSponsoredMessageResultOk",
            "description": "The message was reported successfully",
            "type": "ReportChatSponsoredMessageResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportChatSponsoredMessageResultFailed",
            "description": "The sponsored message is too old or not found",
            "type": "ReportChatSponsoredMessageResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportChatSponsoredMessageResultOptionRequired",
            "description": "The user must choose an option to report the message and repeat request with the chosen option",
            "type": "ReportChatSponsoredMessageResult",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title for the option choice",
                    "required": true
                },
                {
                    "name": "options",
                    "type": "vector<reportChatSponsoredMessageOption>",
                    "description": "List of available options",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportChatSponsoredMessageResultAdsHidden",
            "description": "Sponsored messages were hidden for the user in all chats",
            "type": "ReportChatSponsoredMessageResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportChatSponsoredMessageResultPremiumRequired",
            "description": "The user asked to hide sponsored messages, but Telegram Premium is required for this",
            "type": "ReportChatSponsoredMessageResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileDownload",
            "description": "Describes a file added to file download list",
            "type": "FileDownload",
            "annotations": [
                {
                    "name": "file_id",
                    "type": "int32",
                    "description": "File identifier",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "message",
                    "description": "The message with the file",
                    "required": true
                },
                {
                    "name": "add_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the file was added to the download list",
                    "required": true
                },
                {
                    "name": "complete_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the file downloading was completed; 0 if the file downloading isn't completed",
                    "required": true
                },
                {
                    "name": "is_paused",
                    "type": "Bool",
                    "description": "True, if downloading of the file is paused",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "downloadedFileCounts",
            "description": "Contains number of being downloaded and recently downloaded files found",
            "type": "DownloadedFileCounts",
            "annotations": [
                {
                    "name": "active_count",
                    "type": "int32",
                    "description": "Number of active file downloads found, including paused",
                    "required": true
                },
                {
                    "name": "paused_count",
                    "type": "int32",
                    "description": "Number of paused file downloads found",
                    "required": true
                },
                {
                    "name": "completed_count",
                    "type": "int32",
                    "description": "Number of completed file downloads found",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundFileDownloads",
            "description": "Contains a list of downloaded files, found by a search",
            "type": "FoundFileDownloads",
            "annotations": [
                {
                    "name": "total_counts",
                    "type": "downloadedFileCounts",
                    "description": "Total number of suitable files, ignoring offset",
                    "required": true
                },
                {
                    "name": "files",
                    "type": "vector<fileDownload>",
                    "description": "The list of files",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationSettingsScopePrivateChats",
            "description": "Notification settings applied to all private and secret chats when the corresponding chat setting has a default value",
            "type": "NotificationSettingsScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationSettingsScopeGroupChats",
            "description": "Notification settings applied to all basic group and supergroup chats when the corresponding chat setting has a default value",
            "type": "NotificationSettingsScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationSettingsScopeChannelChats",
            "description": "Notification settings applied to all channel chats when the corresponding chat setting has a default value",
            "type": "NotificationSettingsScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatNotificationSettings",
            "description": "Contains information about notification settings for a chat or a forum topic",
            "type": "ChatNotificationSettings",
            "annotations": [
                {
                    "name": "use_default_mute_for",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat or the forum chat is used instead of mute_for",
                    "required": true
                },
                {
                    "name": "mute_for",
                    "type": "int32",
                    "description": "Time left before notifications will be unmuted, in seconds",
                    "required": true
                },
                {
                    "name": "use_default_sound",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat or the forum chat is used instead of sound_id",
                    "required": true
                },
                {
                    "name": "sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound to be played for messages; 0 if sound is disabled",
                    "required": true
                },
                {
                    "name": "use_default_show_preview",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat or the forum chat is used instead of show_preview",
                    "required": true
                },
                {
                    "name": "show_preview",
                    "type": "Bool",
                    "description": "True, if message content must be displayed in notifications",
                    "required": true
                },
                {
                    "name": "use_default_mute_stories",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat is used instead of mute_stories",
                    "required": true
                },
                {
                    "name": "mute_stories",
                    "type": "Bool",
                    "description": "True, if story notifications are disabled for the chat",
                    "required": true
                },
                {
                    "name": "use_default_story_sound",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat is used instead of story_sound_id",
                    "required": true
                },
                {
                    "name": "story_sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound to be played for stories; 0 if sound is disabled",
                    "required": true
                },
                {
                    "name": "use_default_show_story_sender",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat is used instead of show_story_sender",
                    "required": true
                },
                {
                    "name": "show_story_sender",
                    "type": "Bool",
                    "description": "True, if the sender of stories must be displayed in notifications",
                    "required": true
                },
                {
                    "name": "use_default_disable_pinned_message_notifications",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat or the forum chat is used instead of disable_pinned_message_notifications",
                    "required": true
                },
                {
                    "name": "disable_pinned_message_notifications",
                    "type": "Bool",
                    "description": "If true, notifications for incoming pinned messages will be created as for an ordinary unread message",
                    "required": true
                },
                {
                    "name": "use_default_disable_mention_notifications",
                    "type": "Bool",
                    "description": "If true, the value for the relevant type of chat or the forum chat is used instead of disable_mention_notifications",
                    "required": true
                },
                {
                    "name": "disable_mention_notifications",
                    "type": "Bool",
                    "description": "If true, notifications for messages with mentions will be created as for an ordinary unread message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "scopeNotificationSettings",
            "description": "Contains information about notification settings for several chats",
            "type": "ScopeNotificationSettings",
            "annotations": [
                {
                    "name": "mute_for",
                    "type": "int32",
                    "description": "Time left before notifications will be unmuted, in seconds",
                    "required": true
                },
                {
                    "name": "sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound to be played; 0 if sound is disabled",
                    "required": true
                },
                {
                    "name": "show_preview",
                    "type": "Bool",
                    "description": "True, if message content must be displayed in notifications",
                    "required": true
                },
                {
                    "name": "use_default_mute_stories",
                    "type": "Bool",
                    "description": "If true, story notifications are received only for the first 5 chats from topChatCategoryUsers regardless of the value of mute_stories",
                    "required": true
                },
                {
                    "name": "mute_stories",
                    "type": "Bool",
                    "description": "True, if story notifications are disabled",
                    "required": true
                },
                {
                    "name": "story_sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound to be played for stories; 0 if sound is disabled",
                    "required": true
                },
                {
                    "name": "show_story_sender",
                    "type": "Bool",
                    "description": "True, if the sender of stories must be displayed in notifications",
                    "required": true
                },
                {
                    "name": "disable_pinned_message_notifications",
                    "type": "Bool",
                    "description": "True, if notifications for incoming pinned messages will be created as for an ordinary unread message",
                    "required": true
                },
                {
                    "name": "disable_mention_notifications",
                    "type": "Bool",
                    "description": "True, if notifications for messages with mentions will be created as for an ordinary unread message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionNotificationSourceNone",
            "description": "Notifications for reactions are disabled",
            "type": "ReactionNotificationSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionNotificationSourceContacts",
            "description": "Notifications for reactions are shown only for reactions from contacts",
            "type": "ReactionNotificationSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionNotificationSourceAll",
            "description": "Notifications for reactions are shown for all reactions",
            "type": "ReactionNotificationSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionNotificationSettings",
            "description": "Contains information about notification settings for reactions",
            "type": "ReactionNotificationSettings",
            "annotations": [
                {
                    "name": "message_reaction_source",
                    "type": "ReactionNotificationSource",
                    "description": "Source of message reactions for which notifications are shown",
                    "required": true
                },
                {
                    "name": "story_reaction_source",
                    "type": "ReactionNotificationSource",
                    "description": "Source of story reactions for which notifications are shown",
                    "required": true
                },
                {
                    "name": "sound_id",
                    "type": "int64",
                    "description": "Identifier of the notification sound to be played; 0 if sound is disabled",
                    "required": true
                },
                {
                    "name": "show_preview",
                    "type": "Bool",
                    "description": "True, if reaction sender and emoji must be displayed in notifications",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "draftMessage",
            "description": "Contains information about a message draft",
            "type": "DraftMessage",
            "annotations": [
                {
                    "name": "reply_to",
                    "type": "InputMessageReplyTo",
                    "description": "Information about the message to be replied; must be of the type inputMessageReplyToMessage; may be null if none",
                    "required": false
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the draft was created",
                    "required": true
                },
                {
                    "name": "input_message_text",
                    "type": "InputMessageContent",
                    "description": "Content of the message draft; must be of the type inputMessageText, inputMessageVideoNote, or inputMessageVoiceNote",
                    "required": true
                },
                {
                    "name": "effect_id",
                    "type": "int64",
                    "description": "Identifier of the effect to apply to the message when it is sent; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatTypePrivate",
            "description": "An ordinary chat with a user",
            "type": "ChatType",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatTypeBasicGroup",
            "description": "A basic group (a chat with 0-200 other users)",
            "type": "ChatType",
            "annotations": [
                {
                    "name": "basic_group_id",
                    "type": "int53",
                    "description": "Basic group identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatTypeSupergroup",
            "description": "A supergroup or channel (with unlimited members)",
            "type": "ChatType",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup or channel identifier",
                    "required": true
                },
                {
                    "name": "is_channel",
                    "type": "Bool",
                    "description": "True, if the supergroup is a channel",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatTypeSecret",
            "description": "A secret chat with a user",
            "type": "ChatType",
            "annotations": [
                {
                    "name": "secret_chat_id",
                    "type": "int32",
                    "description": "Secret chat identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier of the other user in the secret chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatFolderIcon",
            "description": "Represents an icon for a chat folder",
            "type": "ChatFolderIcon",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The chosen icon name for short folder representation; one of 'All', 'Unread', 'Unmuted', 'Bots', 'Channels', 'Groups', 'Private', 'Custom', 'Setup', 'Cat', 'Crown',",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatFolder",
            "description": "Represents a folder for user chats",
            "type": "ChatFolder",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "The title of the folder; 1-12 characters without line feeds",
                    "required": true
                },
                {
                    "name": "icon",
                    "type": "chatFolderIcon",
                    "description": "The chosen icon for the chat folder; may be null. If null, use getChatFolderDefaultIconName to get default icon name for the folder",
                    "required": false
                },
                {
                    "name": "color_id",
                    "type": "int32",
                    "description": "The identifier of the chosen color for the chat folder icon; from -1 to 6. If -1, then color is disabled. Can't be changed if folder tags are disabled or the current user doesn't have Telegram Premium subscription",
                    "required": true
                },
                {
                    "name": "is_shareable",
                    "type": "Bool",
                    "description": "True, if at least one link has been created for the folder",
                    "required": true
                },
                {
                    "name": "pinned_chat_ids",
                    "type": "vector<int53>",
                    "description": "The chat identifiers of pinned chats in the folder. There can be up to getOption('chat_folder_chosen_chat_count_max') pinned and always included non-secret chats and the same number of secret chats, but the limit can be increased with Telegram Premium",
                    "required": true
                },
                {
                    "name": "included_chat_ids",
                    "type": "vector<int53>",
                    "description": "The chat identifiers of always included chats in the folder. There can be up to getOption('chat_folder_chosen_chat_count_max') pinned and always included non-secret chats and the same number of secret chats, but the limit can be increased with Telegram Premium",
                    "required": true
                },
                {
                    "name": "excluded_chat_ids",
                    "type": "vector<int53>",
                    "description": "The chat identifiers of always excluded chats in the folder. There can be up to getOption('chat_folder_chosen_chat_count_max') always excluded non-secret chats and the same number of secret chats, but the limit can be increased with Telegram Premium",
                    "required": true
                },
                {
                    "name": "exclude_muted",
                    "type": "Bool",
                    "description": "True, if muted chats need to be excluded",
                    "required": true
                },
                {
                    "name": "exclude_read",
                    "type": "Bool",
                    "description": "True, if read chats need to be excluded",
                    "required": true
                },
                {
                    "name": "exclude_archived",
                    "type": "Bool",
                    "description": "True, if archived chats need to be excluded",
                    "required": true
                },
                {
                    "name": "include_contacts",
                    "type": "Bool",
                    "description": "True, if contacts need to be included",
                    "required": true
                },
                {
                    "name": "include_non_contacts",
                    "type": "Bool",
                    "description": "True, if non-contact users need to be included",
                    "required": true
                },
                {
                    "name": "include_bots",
                    "type": "Bool",
                    "description": "True, if bots need to be included",
                    "required": true
                },
                {
                    "name": "include_groups",
                    "type": "Bool",
                    "description": "True, if basic groups and supergroups need to be included",
                    "required": true
                },
                {
                    "name": "include_channels",
                    "type": "Bool",
                    "description": "True, if channels need to be included",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatFolderInfo",
            "description": "Contains basic information about a chat folder",
            "type": "ChatFolderInfo",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique chat folder identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "The title of the folder; 1-12 characters without line feeds",
                    "required": true
                },
                {
                    "name": "icon",
                    "type": "chatFolderIcon",
                    "description": "The chosen or default icon for the chat folder",
                    "required": true
                },
                {
                    "name": "color_id",
                    "type": "int32",
                    "description": "The identifier of the chosen color for the chat folder icon; from -1 to 6. If -1, then color is disabled",
                    "required": true
                },
                {
                    "name": "is_shareable",
                    "type": "Bool",
                    "description": "True, if at least one link has been created for the folder",
                    "required": true
                },
                {
                    "name": "has_my_invite_links",
                    "type": "Bool",
                    "description": "True, if the chat folder has invite links created by the current user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatFolderInviteLink",
            "description": "Contains a chat folder invite link",
            "type": "ChatFolderInviteLink",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "The chat folder invite link",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the link",
                    "required": true
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of chats, included in the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatFolderInviteLinks",
            "description": "Represents a list of chat folder invite links",
            "type": "ChatFolderInviteLinks",
            "annotations": [
                {
                    "name": "invite_links",
                    "type": "vector<chatFolderInviteLink>",
                    "description": "List of the invite links",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatFolderInviteLinkInfo",
            "description": "Contains information about an invite link to a chat folder",
            "type": "ChatFolderInviteLinkInfo",
            "annotations": [
                {
                    "name": "chat_folder_info",
                    "type": "chatFolderInfo",
                    "description": "Basic information about the chat folder; chat folder identifier will be 0 if the user didn't have the chat folder yet",
                    "required": true
                },
                {
                    "name": "missing_chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the chats from the link, which aren't added to the folder yet",
                    "required": true
                },
                {
                    "name": "added_chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the chats from the link, which are added to the folder already",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "recommendedChatFolder",
            "description": "Describes a recommended chat folder",
            "type": "RecommendedChatFolder",
            "annotations": [
                {
                    "name": "folder",
                    "type": "chatFolder",
                    "description": "The chat folder",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Chat folder description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "recommendedChatFolders",
            "description": "Contains a list of recommended chat folders",
            "type": "RecommendedChatFolders",
            "annotations": [
                {
                    "name": "chat_folders",
                    "type": "vector<recommendedChatFolder>",
                    "description": "List of recommended chat folders",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "archiveChatListSettings",
            "description": "Contains settings for automatic moving of chats to and from the Archive chat lists",
            "type": "ArchiveChatListSettings",
            "annotations": [
                {
                    "name": "archive_and_mute_new_chats_from_unknown_users",
                    "type": "Bool",
                    "description": "True, if new chats from non-contacts will be automatically archived and muted. Can be set to true only if the option 'can_archive_and_mute_new_chats_from_unknown_users' is true",
                    "required": true
                },
                {
                    "name": "keep_unmuted_chats_archived",
                    "type": "Bool",
                    "description": "True, if unmuted chats will be kept in the Archive chat list when they get a new message",
                    "required": true
                },
                {
                    "name": "keep_chats_from_folders_archived",
                    "type": "Bool",
                    "description": "True, if unmuted chats, that are always included or pinned in a folder, will be kept in the Archive chat list when they get a new message. Ignored if keep_unmuted_chats_archived == true",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatListMain",
            "description": "A main list of chats",
            "type": "ChatList",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatListArchive",
            "description": "A list of chats usually located at the top of the main chat list. Unmuted chats are automatically moved from the Archive to the Main chat list when a new message arrives",
            "type": "ChatList",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatListFolder",
            "description": "A list of chats added to a chat folder",
            "type": "ChatList",
            "annotations": [
                {
                    "name": "chat_folder_id",
                    "type": "int32",
                    "description": "Chat folder identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatLists",
            "description": "Contains a list of chat lists",
            "type": "ChatLists",
            "annotations": [
                {
                    "name": "chat_lists",
                    "type": "vector<ChatList>",
                    "description": "List of chat lists",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatSourceMtprotoProxy",
            "description": "The chat is sponsored by the user's MTProxy server",
            "type": "ChatSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatSourcePublicServiceAnnouncement",
            "description": "The chat contains a public service announcement",
            "type": "ChatSource",
            "annotations": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "The type of the announcement",
                    "required": true
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": "The text of the announcement",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatPosition",
            "description": "Describes a position of a chat in a chat list",
            "type": "ChatPosition",
            "annotations": [
                {
                    "name": "list",
                    "type": "ChatList",
                    "description": "The chat list",
                    "required": true
                },
                {
                    "name": "order",
                    "type": "int64",
                    "description": "A parameter used to determine order of the chat in the chat list. Chats must be sorted by the pair (order, chat.id) in descending order",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the chat is pinned in the chat list",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "ChatSource",
                    "description": "Source of the chat in the chat list; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatAvailableReactionsAll",
            "description": "All reactions are available in the chat, excluding the paid reaction and custom reactions in channel chats",
            "type": "ChatAvailableReactions",
            "annotations": [
                {
                    "name": "max_reaction_count",
                    "type": "int32",
                    "description": "The maximum allowed number of reactions per message; 1-11",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatAvailableReactionsSome",
            "description": "Only specific reactions are available in the chat",
            "type": "ChatAvailableReactions",
            "annotations": [
                {
                    "name": "reactions",
                    "type": "vector<ReactionType>",
                    "description": "The list of reactions",
                    "required": true
                },
                {
                    "name": "max_reaction_count",
                    "type": "int32",
                    "description": "The maximum allowed number of reactions per message; 1-11",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedMessagesTag",
            "description": "Represents a tag used in Saved Messages or a Saved Messages topic",
            "type": "SavedMessagesTag",
            "annotations": [
                {
                    "name": "tag",
                    "type": "ReactionType",
                    "description": "The tag",
                    "required": true
                },
                {
                    "name": "label",
                    "type": "string",
                    "description": "Label of the tag; 0-12 characters. Always empty if the tag is returned for a Saved Messages topic",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int32",
                    "description": "Number of times the tag was used; may be 0 if the tag has non-empty label",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedMessagesTags",
            "description": "Contains a list of tags used in Saved Messages",
            "type": "SavedMessagesTags",
            "annotations": [
                {
                    "name": "tags",
                    "type": "vector<savedMessagesTag>",
                    "description": "List of tags",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessBotManageBar",
            "description": "Contains information about a business bot that manages the chat",
            "type": "BusinessBotManageBar",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the bot",
                    "required": true
                },
                {
                    "name": "manage_url",
                    "type": "string",
                    "description": "URL to be opened to manage the bot",
                    "required": true
                },
                {
                    "name": "is_bot_paused",
                    "type": "Bool",
                    "description": "True, if the bot is paused. Use toggleBusinessConnectedBotChatIsPaused to change the value of the field",
                    "required": true
                },
                {
                    "name": "can_bot_reply",
                    "type": "Bool",
                    "description": "True, if the bot can reply",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "videoChat",
            "description": "Describes a video chat",
            "type": "VideoChat",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Group call identifier of an active video chat; 0 if none. Full information about the video chat can be received through the method getGroupCall",
                    "required": true
                },
                {
                    "name": "has_participants",
                    "type": "Bool",
                    "description": "True, if the video chat has participants",
                    "required": true
                },
                {
                    "name": "default_participant_id",
                    "type": "MessageSender",
                    "description": "Default group call participant identifier to join the video chat; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chat",
            "description": "A chat. (Can be a private chat, basic group, supergroup, or secret chat)",
            "type": "Chat",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Chat unique identifier",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ChatType",
                    "description": "Type of the chat",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Chat title",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "chatPhotoInfo",
                    "description": "Chat photo; may be null",
                    "required": false
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color for message sender name, and backgrounds of chat photo, reply header, and link preview",
                    "required": true
                },
                {
                    "name": "background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the reply header and link preview background for messages sent by the chat; 0 if none",
                    "required": true
                },
                {
                    "name": "profile_accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the profile accent color for the chat's profile; -1 if none",
                    "required": true
                },
                {
                    "name": "profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "Identifier of a custom emoji to be shown on the background of the chat's profile; 0 if none",
                    "required": true
                },
                {
                    "name": "permissions",
                    "type": "chatPermissions",
                    "description": "Actions that non-administrator chat members are allowed to take in the chat",
                    "required": true
                },
                {
                    "name": "last_message",
                    "type": "message",
                    "description": "Last message in the chat; may be null if none or unknown",
                    "required": false
                },
                {
                    "name": "positions",
                    "type": "vector<chatPosition>",
                    "description": "Positions of the chat in chat lists",
                    "required": true
                },
                {
                    "name": "chat_lists",
                    "type": "vector<ChatList>",
                    "description": "Chat lists to which the chat belongs. A chat can have a non-zero position in a chat list even it doesn't belong to the chat list and have no position in a chat list even it belongs to the chat list",
                    "required": true
                },
                {
                    "name": "message_sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of a user or chat that is selected to send messages in the chat; may be null if the user can't change message sender",
                    "required": false
                },
                {
                    "name": "block_list",
                    "type": "BlockList",
                    "description": "Block list to which the chat is added; may be null if none",
                    "required": false
                },
                {
                    "name": "has_protected_content",
                    "type": "Bool",
                    "description": "True, if chat content can't be saved locally, forwarded, or copied",
                    "required": true
                },
                {
                    "name": "is_translatable",
                    "type": "Bool",
                    "description": "True, if translation of all messages in the chat must be suggested to the user",
                    "required": true
                },
                {
                    "name": "is_marked_as_unread",
                    "type": "Bool",
                    "description": "True, if the chat is marked as unread",
                    "required": true
                },
                {
                    "name": "view_as_topics",
                    "type": "Bool",
                    "description": "True, if the chat is a forum supergroup that must be shown in the 'View as topics' mode, or Saved Messages chat that must be shown in the 'View as chats'",
                    "required": true
                },
                {
                    "name": "has_scheduled_messages",
                    "type": "Bool",
                    "description": "True, if the chat has scheduled messages",
                    "required": true
                },
                {
                    "name": "can_be_deleted_only_for_self",
                    "type": "Bool",
                    "description": "True, if the chat messages can be deleted only for the current user while other users will continue to see the messages",
                    "required": true
                },
                {
                    "name": "can_be_deleted_for_all_users",
                    "type": "Bool",
                    "description": "True, if the chat messages can be deleted for all users",
                    "required": true
                },
                {
                    "name": "can_be_reported",
                    "type": "Bool",
                    "description": "True, if the chat can be reported to Telegram moderators through reportChat or reportChatPhoto",
                    "required": true
                },
                {
                    "name": "default_disable_notification",
                    "type": "Bool",
                    "description": "Default value of the disable_notification parameter, used when a message is sent to the chat",
                    "required": true
                },
                {
                    "name": "unread_count",
                    "type": "int32",
                    "description": "Number of unread messages in the chat",
                    "required": true
                },
                {
                    "name": "last_read_inbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read incoming message",
                    "required": true
                },
                {
                    "name": "last_read_outbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read outgoing message",
                    "required": true
                },
                {
                    "name": "unread_mention_count",
                    "type": "int32",
                    "description": "Number of unread messages with a mention/reply in the chat",
                    "required": true
                },
                {
                    "name": "unread_reaction_count",
                    "type": "int32",
                    "description": "Number of messages with unread reactions in the chat",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "chatNotificationSettings",
                    "description": "Notification settings for the chat",
                    "required": true
                },
                {
                    "name": "available_reactions",
                    "type": "ChatAvailableReactions",
                    "description": "Types of reaction, available in the chat",
                    "required": true
                },
                {
                    "name": "message_auto_delete_time",
                    "type": "int32",
                    "description": "Current message auto-delete or self-destruct timer setting for the chat, in seconds; 0 if disabled. Self-destruct timer in secret chats starts after the message or its content is viewed. Auto-delete timer in other chats starts from the send date",
                    "required": true
                },
                {
                    "name": "emoji_status",
                    "type": "emojiStatus",
                    "description": "Emoji status to be shown along with chat title; may be null",
                    "required": false
                },
                {
                    "name": "background",
                    "type": "chatBackground",
                    "description": "Background set for the chat; may be null if none",
                    "required": false
                },
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "If non-empty, name of a theme, set for the chat",
                    "required": false
                },
                {
                    "name": "action_bar",
                    "type": "ChatActionBar",
                    "description": "Information about actions which must be possible to do through the chat action bar; may be null if none",
                    "required": false
                },
                {
                    "name": "business_bot_manage_bar",
                    "type": "businessBotManageBar",
                    "description": "Information about bar for managing a business bot in the chat; may be null if none",
                    "required": false
                },
                {
                    "name": "video_chat",
                    "type": "videoChat",
                    "description": "Information about video chat of the chat",
                    "required": true
                },
                {
                    "name": "pending_join_requests",
                    "type": "chatJoinRequestsInfo",
                    "description": "Information about pending join requests; may be null if none",
                    "required": false
                },
                {
                    "name": "reply_markup_message_id",
                    "type": "int53",
                    "description": "Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat",
                    "required": true
                },
                {
                    "name": "draft_message",
                    "type": "draftMessage",
                    "description": "A draft of a message in the chat; may be null if none",
                    "required": false
                },
                {
                    "name": "client_data",
                    "type": "string",
                    "description": "Application-specific data associated with the chat. (For example, the chat scroll position or local chat notification settings can be stored here.) Persistent if the message database is used",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chats",
            "description": "Represents a list of chats",
            "type": "Chats",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of chats found",
                    "required": true
                },
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "List of chat identifiers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "failedToAddMember",
            "description": "Contains information about a user that has failed to be added to a chat",
            "type": "FailedToAddMember",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "premium_would_allow_invite",
                    "type": "Bool",
                    "description": "True, if subscription to Telegram Premium would have allowed to add the user to the chat",
                    "required": true
                },
                {
                    "name": "premium_required_to_send_messages",
                    "type": "Bool",
                    "description": "True, if subscription to Telegram Premium is required to send the user chat invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "failedToAddMembers",
            "description": "Represents a list of users that has failed to be added to a chat",
            "type": "FailedToAddMembers",
            "annotations": [
                {
                    "name": "failed_to_add_members",
                    "type": "vector<failedToAddMember>",
                    "description": "Information about users that weren't added to the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "createdBasicGroupChat",
            "description": "Contains information about a newly created basic group chat",
            "type": "CreatedBasicGroupChat",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "failed_to_add_members",
                    "type": "failedToAddMembers",
                    "description": "Information about failed to add members",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatNearby",
            "description": "Describes a chat located nearby",
            "type": "ChatNearby",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "distance",
                    "type": "int32",
                    "description": "Distance to the chat location, in meters",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatsNearby",
            "description": "Represents a list of chats located nearby",
            "type": "ChatsNearby",
            "annotations": [
                {
                    "name": "users_nearby",
                    "type": "vector<chatNearby>",
                    "description": "List of users nearby",
                    "required": true
                },
                {
                    "name": "supergroups_nearby",
                    "type": "vector<chatNearby>",
                    "description": "List of location-based supergroups nearby",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "publicChatTypeHasUsername",
            "description": "The chat is public, because it has an active username",
            "type": "PublicChatType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "publicChatTypeIsLocationBased",
            "description": "The chat is public, because it is a location-based supergroup",
            "type": "PublicChatType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarReportSpam",
            "description": "The chat can be reported as spam using the method reportChat with the reason reportReasonSpam. If the chat is a private chat with a user with an emoji status, then a notice about emoji status usage must be shown",
            "type": "ChatActionBar",
            "annotations": [
                {
                    "name": "can_unarchive",
                    "type": "Bool",
                    "description": "If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarReportUnrelatedLocation",
            "description": "The chat is a location-based supergroup, which can be reported as having unrelated location using the method reportChat with the reason reportReasonUnrelatedLocation",
            "type": "ChatActionBar",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarInviteMembers",
            "description": "The chat is a recently created group chat to which new members can be invited",
            "type": "ChatActionBar",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarReportAddBlock",
            "description": "The chat is a private or secret chat, which can be reported using the method reportChat, or the other user can be blocked using the method setMessageSenderBlockList,",
            "type": "ChatActionBar",
            "annotations": [
                {
                    "name": "can_unarchive",
                    "type": "Bool",
                    "description": "If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings",
                    "required": true
                },
                {
                    "name": "distance",
                    "type": "int32",
                    "description": "If non-negative, the current user was found by the other user through searchChatsNearby and this is the distance between the users",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarAddContact",
            "description": "The chat is a private or secret chat and the other user can be added to the contact list using the method addContact",
            "type": "ChatActionBar",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarSharePhoneNumber",
            "description": "The chat is a private or secret chat with a mutual contact and the user's phone number can be shared with the other user using the method sharePhoneNumber",
            "type": "ChatActionBar",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionBarJoinRequest",
            "description": "The chat is a private chat with an administrator of a chat to which the user sent join request",
            "type": "ChatActionBar",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the chat to which the join request was sent",
                    "required": true
                },
                {
                    "name": "is_channel",
                    "type": "Bool",
                    "description": "True, if the join request was sent to a channel chat",
                    "required": true
                },
                {
                    "name": "request_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the join request was sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeText",
            "description": "A simple button, with text that must be sent when the button is pressed",
            "type": "KeyboardButtonType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeRequestPhoneNumber",
            "description": "A button that sends the user's phone number when pressed; available only in private chats",
            "type": "KeyboardButtonType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeRequestLocation",
            "description": "A button that sends the user's location when pressed; available only in private chats",
            "type": "KeyboardButtonType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeRequestPoll",
            "description": "A button that allows the user to create and send a poll when pressed; available only in private chats",
            "type": "KeyboardButtonType",
            "annotations": [
                {
                    "name": "force_regular",
                    "type": "Bool",
                    "description": "If true, only regular polls must be allowed to create",
                    "required": true
                },
                {
                    "name": "force_quiz",
                    "type": "Bool",
                    "description": "If true, only polls in quiz mode must be allowed to create",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeRequestUsers",
            "description": "A button that requests users to be shared by the current user; available only in private chats. Use the method shareUsersWithBot to complete the request",
            "type": "KeyboardButtonType",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique button identifier",
                    "required": true
                },
                {
                    "name": "restrict_user_is_bot",
                    "type": "Bool",
                    "description": "True, if the shared users must or must not be bots",
                    "required": true
                },
                {
                    "name": "user_is_bot",
                    "type": "Bool",
                    "description": "True, if the shared users must be bots; otherwise, the shared users must not be bots. Ignored if restrict_user_is_bot is false",
                    "required": true
                },
                {
                    "name": "restrict_user_is_premium",
                    "type": "Bool",
                    "description": "True, if the shared users must or must not be Telegram Premium users",
                    "required": true
                },
                {
                    "name": "user_is_premium",
                    "type": "Bool",
                    "description": "True, if the shared users must be Telegram Premium users; otherwise, the shared users must not be Telegram Premium users. Ignored if restrict_user_is_premium is false",
                    "required": true
                },
                {
                    "name": "max_quantity",
                    "type": "int32",
                    "description": "The maximum number of users to share",
                    "required": true
                },
                {
                    "name": "request_name",
                    "type": "Bool",
                    "description": "Pass true to request name of the users; bots only",
                    "required": true
                },
                {
                    "name": "request_username",
                    "type": "Bool",
                    "description": "Pass true to request username of the users; bots only",
                    "required": true
                },
                {
                    "name": "request_photo",
                    "type": "Bool",
                    "description": "Pass true to request photo of the users; bots only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeRequestChat",
            "description": "A button that requests a chat to be shared by the current user; available only in private chats. Use the method shareChatWithBot to complete the request",
            "type": "KeyboardButtonType",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique button identifier",
                    "required": true
                },
                {
                    "name": "chat_is_channel",
                    "type": "Bool",
                    "description": "True, if the chat must be a channel; otherwise, a basic group or a supergroup chat is shared",
                    "required": true
                },
                {
                    "name": "restrict_chat_is_forum",
                    "type": "Bool",
                    "description": "True, if the chat must or must not be a forum supergroup",
                    "required": true
                },
                {
                    "name": "chat_is_forum",
                    "type": "Bool",
                    "description": "True, if the chat must be a forum supergroup; otherwise, the chat must not be a forum supergroup. Ignored if restrict_chat_is_forum is false",
                    "required": true
                },
                {
                    "name": "restrict_chat_has_username",
                    "type": "Bool",
                    "description": "True, if the chat must or must not have a username",
                    "required": true
                },
                {
                    "name": "chat_has_username",
                    "type": "Bool",
                    "description": "True, if the chat must have a username; otherwise, the chat must not have a username. Ignored if restrict_chat_has_username is false",
                    "required": true
                },
                {
                    "name": "chat_is_created",
                    "type": "Bool",
                    "description": "True, if the chat must be created by the current user",
                    "required": true
                },
                {
                    "name": "user_administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Expected user administrator rights in the chat; may be null if they aren't restricted",
                    "required": false
                },
                {
                    "name": "bot_administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Expected bot administrator rights in the chat; may be null if they aren't restricted",
                    "required": false
                },
                {
                    "name": "bot_is_member",
                    "type": "Bool",
                    "description": "True, if the bot must be a member of the chat; for basic group and supergroup chats only",
                    "required": true
                },
                {
                    "name": "request_title",
                    "type": "Bool",
                    "description": "Pass true to request title of the chat; bots only",
                    "required": true
                },
                {
                    "name": "request_username",
                    "type": "Bool",
                    "description": "Pass true to request username of the chat; bots only",
                    "required": true
                },
                {
                    "name": "request_photo",
                    "type": "Bool",
                    "description": "Pass true to request photo of the chat; bots only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButtonTypeWebApp",
            "description": "A button that opens a Web App by calling getWebAppUrl",
            "type": "KeyboardButtonType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL to pass to getWebAppUrl",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "keyboardButton",
            "description": "Represents a single button in a bot keyboard",
            "type": "KeyboardButton",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the button",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "KeyboardButtonType",
                    "description": "Type of the button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeUrl",
            "description": "A button that opens a specified URL",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "HTTP or tg:// URL to open. If the link is of the type internalLinkTypeWebApp, then the button must be marked as a Web App button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeLoginUrl",
            "description": "A button that opens a specified URL and automatically authorize the current user by calling getLoginUrlInfo",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL to pass to getLoginUrlInfo",
                    "required": true
                },
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Unique button identifier",
                    "required": true
                },
                {
                    "name": "forward_text",
                    "type": "string",
                    "description": "If non-empty, new text of the button in forwarded messages",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeWebApp",
            "description": "A button that opens a Web App by calling openWebApp",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL to pass to openWebApp",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeCallback",
            "description": "A button that sends a callback query to a bot",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "Data to be sent to the bot via a callback query",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeCallbackWithPassword",
            "description": "A button that asks for the 2-step verification password of the current user and then sends a callback query to a bot",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "Data to be sent to the bot via a callback query",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeCallbackGame",
            "description": "A button with a game that sends a callback query to a bot. This button must be in the first column and row of the keyboard and can be attached only to a message with content of the type messageGame",
            "type": "InlineKeyboardButtonType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeSwitchInline",
            "description": "A button that forces an inline query to the bot to be inserted in the input field",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "Inline query to be sent to the bot",
                    "required": true
                },
                {
                    "name": "target_chat",
                    "type": "TargetChat",
                    "description": "Target chat from which to send the inline query",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeBuy",
            "description": "A button to buy something. This button must be in the first column and row of the keyboard and can be attached only to a message with content of the type messageInvoice",
            "type": "InlineKeyboardButtonType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButtonTypeUser",
            "description": "A button with a user reference to be handled in the same way as textEntityTypeMentionName entities",
            "type": "InlineKeyboardButtonType",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineKeyboardButton",
            "description": "Represents a single button in an inline keyboard",
            "type": "InlineKeyboardButton",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the button",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "InlineKeyboardButtonType",
                    "description": "Type of the button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "replyMarkupRemoveKeyboard",
            "description": "Instructs application to remove the keyboard once this message has been received. This kind of keyboard can't be received in an incoming message; instead, updateChatReplyMarkup with message_id == 0 will be sent",
            "type": "ReplyMarkup",
            "annotations": [
                {
                    "name": "is_personal",
                    "type": "Bool",
                    "description": "True, if the keyboard is removed only for the mentioned users or the target user of a reply",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "replyMarkupForceReply",
            "description": "Instructs application to force a reply to this message",
            "type": "ReplyMarkup",
            "annotations": [
                {
                    "name": "is_personal",
                    "type": "Bool",
                    "description": "True, if a forced reply must automatically be shown to the current user. For outgoing messages, specify true to show the forced reply only for the mentioned users and for the target user of a reply",
                    "required": true
                },
                {
                    "name": "input_field_placeholder",
                    "type": "string",
                    "description": "If non-empty, the placeholder to be shown in the input field when the reply is active; 0-64 characters",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "replyMarkupShowKeyboard",
            "description": "Contains a custom keyboard layout to quickly reply to bots",
            "type": "ReplyMarkup",
            "annotations": [
                {
                    "name": "rows",
                    "type": "vector<vector<keyboardButton>>",
                    "description": "A list of rows of bot keyboard buttons",
                    "required": true
                },
                {
                    "name": "is_persistent",
                    "type": "Bool",
                    "description": "True, if the keyboard is supposed to always be shown when the ordinary keyboard is hidden",
                    "required": true
                },
                {
                    "name": "resize_keyboard",
                    "type": "Bool",
                    "description": "True, if the application needs to resize the keyboard vertically",
                    "required": true
                },
                {
                    "name": "one_time",
                    "type": "Bool",
                    "description": "True, if the application needs to hide the keyboard after use",
                    "required": true
                },
                {
                    "name": "is_personal",
                    "type": "Bool",
                    "description": "True, if the keyboard must automatically be shown to the current user. For outgoing messages, specify true to show the keyboard only for the mentioned users and for the target user of a reply",
                    "required": true
                },
                {
                    "name": "input_field_placeholder",
                    "type": "string",
                    "description": "If non-empty, the placeholder to be shown in the input field when the keyboard is active; 0-64 characters",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "replyMarkupInlineKeyboard",
            "description": "Contains an inline keyboard layout",
            "type": "ReplyMarkup",
            "annotations": [
                {
                    "name": "rows",
                    "type": "vector<vector<inlineKeyboardButton>>",
                    "description": "A list of rows of inline keyboard buttons",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "loginUrlInfoOpen",
            "description": "An HTTP URL needs to be open",
            "type": "LoginUrlInfo",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL to open",
                    "required": true
                },
                {
                    "name": "skip_confirmation",
                    "type": "Bool",
                    "description": "True, if there is no need to show an ordinary open URL confirmation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "loginUrlInfoRequestConfirmation",
            "description": "An authorization confirmation dialog needs to be shown to the user",
            "type": "LoginUrlInfo",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL to be opened",
                    "required": true
                },
                {
                    "name": "domain",
                    "type": "string",
                    "description": "A domain of the URL",
                    "required": true
                },
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of a bot linked with the website",
                    "required": true
                },
                {
                    "name": "request_write_access",
                    "type": "Bool",
                    "description": "True, if the user must be asked for the permission to the bot to send them messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundWebApp",
            "description": "Contains information about a Web App found by its short name",
            "type": "FoundWebApp",
            "annotations": [
                {
                    "name": "web_app",
                    "type": "webApp",
                    "description": "The Web App",
                    "required": true
                },
                {
                    "name": "request_write_access",
                    "type": "Bool",
                    "description": "True, if the user must be asked for the permission to the bot to send them messages",
                    "required": true
                },
                {
                    "name": "skip_confirmation",
                    "type": "Bool",
                    "description": "True, if there is no need to show an ordinary open URL confirmation before opening the Web App. The field must be ignored and confirmation must be shown anyway if the Web App link was hidden",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "webAppInfo",
            "description": "Contains information about a Web App",
            "type": "WebAppInfo",
            "annotations": [
                {
                    "name": "launch_id",
                    "type": "int64",
                    "description": "Unique identifier for the Web App launch",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "A Web App URL to open in a web view",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "mainWebApp",
            "description": "Contains information about the main Web App of a bot",
            "type": "MainWebApp",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the Web App to open",
                    "required": true
                },
                {
                    "name": "is_compact",
                    "type": "Bool",
                    "description": "True, if the Web App must always be opened in the compact mode instead of the full-size mode",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageThreadInfo",
            "description": "Contains information about a message thread",
            "type": "MessageThreadInfo",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the message thread belongs",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier, unique within the chat",
                    "required": true
                },
                {
                    "name": "reply_info",
                    "type": "messageReplyInfo",
                    "description": "Information about the message thread; may be null for forum topic threads",
                    "required": false
                },
                {
                    "name": "unread_message_count",
                    "type": "int32",
                    "description": "Approximate number of unread messages in the message thread",
                    "required": true
                },
                {
                    "name": "messages",
                    "type": "vector<message>",
                    "description": "The messages from which the thread starts. The messages are returned in reverse chronological order (i.e., in order of decreasing message_id)",
                    "required": true
                },
                {
                    "name": "draft_message",
                    "type": "draftMessage",
                    "description": "A draft of a message in the message thread; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedMessagesTopicTypeMyNotes",
            "description": "Topic containing messages sent by the current user of forwarded from an unknown chat",
            "type": "SavedMessagesTopicType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedMessagesTopicTypeAuthorHidden",
            "description": "Topic containing messages forwarded from a user with hidden privacy",
            "type": "SavedMessagesTopicType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedMessagesTopicTypeSavedFromChat",
            "description": "Topic containing messages forwarded from a specific chat",
            "type": "SavedMessagesTopicType",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedMessagesTopic",
            "description": "Contains information about a Saved Messages topic",
            "type": "SavedMessagesTopic",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Unique topic identifier",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "SavedMessagesTopicType",
                    "description": "Type of the topic",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the topic is pinned",
                    "required": true
                },
                {
                    "name": "order",
                    "type": "int64",
                    "description": "A parameter used to determine order of the topic in the topic list. Topics must be sorted by the order in descending order",
                    "required": true
                },
                {
                    "name": "last_message",
                    "type": "message",
                    "description": "Last message in the topic; may be null if none or unknown",
                    "required": false
                },
                {
                    "name": "draft_message",
                    "type": "draftMessage",
                    "description": "A draft of a message in the topic; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "forumTopicIcon",
            "description": "Describes a forum topic icon",
            "type": "ForumTopicIcon",
            "annotations": [
                {
                    "name": "color",
                    "type": "int32",
                    "description": "Color of the topic icon in RGB format",
                    "required": true
                },
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Unique identifier of the custom emoji shown on the topic icon; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "forumTopicInfo",
            "description": "Contains basic information about a forum topic",
            "type": "ForumTopicInfo",
            "annotations": [
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "Message thread identifier of the topic",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the topic",
                    "required": true
                },
                {
                    "name": "icon",
                    "type": "forumTopicIcon",
                    "description": "Icon of the topic",
                    "required": true
                },
                {
                    "name": "creation_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the topic was created",
                    "required": true
                },
                {
                    "name": "creator_id",
                    "type": "MessageSender",
                    "description": "Identifier of the creator of the topic",
                    "required": true
                },
                {
                    "name": "is_general",
                    "type": "Bool",
                    "description": "True, if the topic is the General topic list",
                    "required": true
                },
                {
                    "name": "is_outgoing",
                    "type": "Bool",
                    "description": "True, if the topic was created by the current user",
                    "required": true
                },
                {
                    "name": "is_closed",
                    "type": "Bool",
                    "description": "True, if the topic is closed",
                    "required": true
                },
                {
                    "name": "is_hidden",
                    "type": "Bool",
                    "description": "True, if the topic is hidden above the topic list and closed; for General topic only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "forumTopic",
            "description": "Describes a forum topic",
            "type": "ForumTopic",
            "annotations": [
                {
                    "name": "info",
                    "type": "forumTopicInfo",
                    "description": "Basic information about the topic",
                    "required": true
                },
                {
                    "name": "last_message",
                    "type": "message",
                    "description": "Last message in the topic; may be null if unknown",
                    "required": false
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the topic is pinned in the topic list",
                    "required": true
                },
                {
                    "name": "unread_count",
                    "type": "int32",
                    "description": "Number of unread messages in the topic",
                    "required": true
                },
                {
                    "name": "last_read_inbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read incoming message",
                    "required": true
                },
                {
                    "name": "last_read_outbox_message_id",
                    "type": "int53",
                    "description": "Identifier of the last read outgoing message",
                    "required": true
                },
                {
                    "name": "unread_mention_count",
                    "type": "int32",
                    "description": "Number of unread messages with a mention/reply in the topic",
                    "required": true
                },
                {
                    "name": "unread_reaction_count",
                    "type": "int32",
                    "description": "Number of messages with unread reactions in the topic",
                    "required": true
                },
                {
                    "name": "notification_settings",
                    "type": "chatNotificationSettings",
                    "description": "Notification settings for the topic",
                    "required": true
                },
                {
                    "name": "draft_message",
                    "type": "draftMessage",
                    "description": "A draft of a message in the topic; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "forumTopics",
            "description": "Describes a list of forum topics",
            "type": "ForumTopics",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of forum topics found",
                    "required": true
                },
                {
                    "name": "topics",
                    "type": "vector<forumTopic>",
                    "description": "List of forum topics",
                    "required": true
                },
                {
                    "name": "next_offset_date",
                    "type": "int32",
                    "description": "Offset date for the next getForumTopics request",
                    "required": true
                },
                {
                    "name": "next_offset_message_id",
                    "type": "int53",
                    "description": "Offset message identifier for the next getForumTopics request",
                    "required": true
                },
                {
                    "name": "next_offset_message_thread_id",
                    "type": "int53",
                    "description": "Offset message thread identifier for the next getForumTopics request",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewOptions",
            "description": "Options to be used for generation of a link preview",
            "type": "LinkPreviewOptions",
            "annotations": [
                {
                    "name": "is_disabled",
                    "type": "Bool",
                    "description": "True, if link preview must be disabled",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to use for link preview. If empty, then the first URL found in the message text will be used",
                    "required": true
                },
                {
                    "name": "force_small_media",
                    "type": "Bool",
                    "description": "True, if shown media preview must be small; ignored in secret chats or if the URL isn't explicitly specified",
                    "required": true
                },
                {
                    "name": "force_large_media",
                    "type": "Bool",
                    "description": "True, if shown media preview must be large; ignored in secret chats or if the URL isn't explicitly specified",
                    "required": true
                },
                {
                    "name": "show_above_text",
                    "type": "Bool",
                    "description": "True, if link preview must be shown above message text; otherwise, the link preview will be shown below the message text; ignored in secret chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sharedUser",
            "description": "Contains information about a user shared with a bot",
            "type": "SharedUser",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "first_name",
                    "type": "string",
                    "description": "First name of the user; for bots only",
                    "required": true
                },
                {
                    "name": "last_name",
                    "type": "string",
                    "description": "Last name of the user; for bots only",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username of the user; for bots only",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Profile photo of the user; for bots only; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sharedChat",
            "description": "Contains information about a chat shared with a bot",
            "type": "SharedChat",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the chat; for bots only",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username of the chat; for bots only",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo of the chat; for bots only; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "themeSettings",
            "description": "Describes theme settings",
            "type": "ThemeSettings",
            "annotations": [
                {
                    "name": "accent_color",
                    "type": "int32",
                    "description": "Theme accent color in ARGB format",
                    "required": true
                },
                {
                    "name": "background",
                    "type": "background",
                    "description": "The background to be used in chats; may be null",
                    "required": false
                },
                {
                    "name": "outgoing_message_fill",
                    "type": "BackgroundFill",
                    "description": "The fill to be used as a background for outgoing messages",
                    "required": true
                },
                {
                    "name": "animate_outgoing_message_fill",
                    "type": "Bool",
                    "description": "If true, the freeform gradient fill needs to be animated on every sent message",
                    "required": true
                },
                {
                    "name": "outgoing_message_accent_color",
                    "type": "int32",
                    "description": "Accent color of outgoing messages in ARGB format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextPlain",
            "description": "A plain text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextBold",
            "description": "A bold rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextItalic",
            "description": "An italicized rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextUnderline",
            "description": "An underlined rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextStrikethrough",
            "description": "A strikethrough rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextFixed",
            "description": "A fixed-width rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextUrl",
            "description": "A rich text URL link",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL",
                    "required": true
                },
                {
                    "name": "is_cached",
                    "type": "Bool",
                    "description": "True, if the URL has cached instant view server-side",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextEmailAddress",
            "description": "A rich text email link",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                },
                {
                    "name": "email_address",
                    "type": "string",
                    "description": "Email address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextSubscript",
            "description": "A subscript rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextSuperscript",
            "description": "A superscript rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextMarked",
            "description": "A marked rich text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextPhoneNumber",
            "description": "A rich text phone number",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Text",
                    "required": true
                },
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextIcon",
            "description": "A small image inside the text",
            "type": "RichText",
            "annotations": [
                {
                    "name": "document",
                    "type": "document",
                    "description": "The image represented as a document. The image can be in GIF, JPEG or PNG format",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Width of a bounding box in which the image must be shown; 0 if unknown",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Height of a bounding box in which the image must be shown; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextReference",
            "description": "A reference to a richTexts object on the same page",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "The text",
                    "required": true
                },
                {
                    "name": "anchor_name",
                    "type": "string",
                    "description": "The name of a richTextAnchor object, which is the first element of the target richTexts object",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL, opening the reference",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextAnchor",
            "description": "An anchor",
            "type": "RichText",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Anchor name",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTextAnchorLink",
            "description": "A link to an anchor on the same page",
            "type": "RichText",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "The link text",
                    "required": true
                },
                {
                    "name": "anchor_name",
                    "type": "string",
                    "description": "The anchor name. If the name is empty, the link must bring back to top",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL, opening the anchor",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "richTexts",
            "description": "A concatenation of rich texts",
            "type": "RichText",
            "annotations": [
                {
                    "name": "texts",
                    "type": "vector<RichText>",
                    "description": "Texts",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockCaption",
            "description": "Contains a caption of another block",
            "type": "PageBlockCaption",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Content of the caption",
                    "required": true
                },
                {
                    "name": "credit",
                    "type": "RichText",
                    "description": "Block credit (like HTML tag <cite>)",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockListItem",
            "description": "Describes an item of a list page block",
            "type": "PageBlockListItem",
            "annotations": [
                {
                    "name": "label",
                    "type": "string",
                    "description": "Item label",
                    "required": true
                },
                {
                    "name": "page_blocks",
                    "type": "vector<PageBlock>",
                    "description": "Item blocks",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockHorizontalAlignmentLeft",
            "description": "The content must be left-aligned",
            "type": "PageBlockHorizontalAlignment",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockHorizontalAlignmentCenter",
            "description": "The content must be center-aligned",
            "type": "PageBlockHorizontalAlignment",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockHorizontalAlignmentRight",
            "description": "The content must be right-aligned",
            "type": "PageBlockHorizontalAlignment",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockVerticalAlignmentTop",
            "description": "The content must be top-aligned",
            "type": "PageBlockVerticalAlignment",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockVerticalAlignmentMiddle",
            "description": "The content must be middle-aligned",
            "type": "PageBlockVerticalAlignment",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockVerticalAlignmentBottom",
            "description": "The content must be bottom-aligned",
            "type": "PageBlockVerticalAlignment",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockTableCell",
            "description": "Represents a cell of a table",
            "type": "PageBlockTableCell",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Cell text; may be null. If the text is null, then the cell must be invisible",
                    "required": false
                },
                {
                    "name": "is_header",
                    "type": "Bool",
                    "description": "True, if it is a header cell",
                    "required": true
                },
                {
                    "name": "colspan",
                    "type": "int32",
                    "description": "The number of columns the cell spans",
                    "required": true
                },
                {
                    "name": "rowspan",
                    "type": "int32",
                    "description": "The number of rows the cell spans",
                    "required": true
                },
                {
                    "name": "align",
                    "type": "PageBlockHorizontalAlignment",
                    "description": "Horizontal cell content alignment",
                    "required": true
                },
                {
                    "name": "valign",
                    "type": "PageBlockVerticalAlignment",
                    "description": "Vertical cell content alignment",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockRelatedArticle",
            "description": "Contains information about a related article",
            "type": "PageBlockRelatedArticle",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "Related article URL",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Article title; may be empty",
                    "required": false
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Article description; may be empty",
                    "required": false
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Article photo; may be null",
                    "required": false
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Article author; may be empty",
                    "required": false
                },
                {
                    "name": "publish_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the article was published; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockTitle",
            "description": "The title of a page",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "title",
                    "type": "RichText",
                    "description": "Title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockSubtitle",
            "description": "The subtitle of a page",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "subtitle",
                    "type": "RichText",
                    "description": "Subtitle",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockAuthorDate",
            "description": "The author and publishing date of a page",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "author",
                    "type": "RichText",
                    "description": "Author",
                    "required": true
                },
                {
                    "name": "publish_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the article was published; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockHeader",
            "description": "A header",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "header",
                    "type": "RichText",
                    "description": "Header",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockSubheader",
            "description": "A subheader",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "subheader",
                    "type": "RichText",
                    "description": "Subheader",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockKicker",
            "description": "A kicker",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "kicker",
                    "type": "RichText",
                    "description": "Kicker",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockParagraph",
            "description": "A text paragraph",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Paragraph text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockPreformatted",
            "description": "A preformatted text paragraph",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Paragraph text",
                    "required": true
                },
                {
                    "name": "language",
                    "type": "string",
                    "description": "Programming language for which the text needs to be formatted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockFooter",
            "description": "The footer of a page",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "footer",
                    "type": "RichText",
                    "description": "Footer",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockDivider",
            "description": "An empty block separating a page",
            "type": "PageBlock",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockAnchor",
            "description": "An invisible anchor on a page, which can be used in a URL to open the page from the specified anchor",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the anchor",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockList",
            "description": "A list of data blocks",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "items",
                    "type": "vector<pageBlockListItem>",
                    "description": "The items of the list",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockBlockQuote",
            "description": "A block quote",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Quote text",
                    "required": true
                },
                {
                    "name": "credit",
                    "type": "RichText",
                    "description": "Quote credit",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockPullQuote",
            "description": "A pull quote",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "text",
                    "type": "RichText",
                    "description": "Quote text",
                    "required": true
                },
                {
                    "name": "credit",
                    "type": "RichText",
                    "description": "Quote credit",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockAnimation",
            "description": "An animation",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Animation file; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Animation caption",
                    "required": true
                },
                {
                    "name": "need_autoplay",
                    "type": "Bool",
                    "description": "True, if the animation must be played automatically",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockAudio",
            "description": "An audio file",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "audio",
                    "type": "audio",
                    "description": "Audio file; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Audio file caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockPhoto",
            "description": "A photo",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo file; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Photo caption",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL that needs to be opened when the photo is clicked",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockVideo",
            "description": "A video",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "video",
                    "type": "video",
                    "description": "Video file; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Video caption",
                    "required": true
                },
                {
                    "name": "need_autoplay",
                    "type": "Bool",
                    "description": "True, if the video must be played automatically",
                    "required": true
                },
                {
                    "name": "is_looped",
                    "type": "Bool",
                    "description": "True, if the video must be looped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockVoiceNote",
            "description": "A voice note",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "voice_note",
                    "type": "voiceNote",
                    "description": "Voice note; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Voice note caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockCover",
            "description": "A page cover",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "cover",
                    "type": "PageBlock",
                    "description": "Cover",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockEmbedded",
            "description": "An embedded web page",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the embedded page, if available",
                    "required": true
                },
                {
                    "name": "html",
                    "type": "string",
                    "description": "HTML-markup of the embedded page",
                    "required": true
                },
                {
                    "name": "poster_photo",
                    "type": "photo",
                    "description": "Poster photo, if available; may be null",
                    "required": false
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Block width; 0 if unknown",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Block height; 0 if unknown",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Block caption",
                    "required": true
                },
                {
                    "name": "is_full_width",
                    "type": "Bool",
                    "description": "True, if the block must be full width",
                    "required": true
                },
                {
                    "name": "allow_scrolling",
                    "type": "Bool",
                    "description": "True, if scrolling needs to be allowed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockEmbeddedPost",
            "description": "An embedded post",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the embedded post",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Post author",
                    "required": true
                },
                {
                    "name": "author_photo",
                    "type": "photo",
                    "description": "Post author photo; may be null",
                    "required": false
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the post was created; 0 if unknown",
                    "required": true
                },
                {
                    "name": "page_blocks",
                    "type": "vector<PageBlock>",
                    "description": "Post content",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Post caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockCollage",
            "description": "A collage",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "page_blocks",
                    "type": "vector<PageBlock>",
                    "description": "Collage item contents",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Block caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockSlideshow",
            "description": "A slideshow",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "page_blocks",
                    "type": "vector<PageBlock>",
                    "description": "Slideshow item contents",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Block caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockChatLink",
            "description": "A link to a chat",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Chat title",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "chatPhotoInfo",
                    "description": "Chat photo; may be null",
                    "required": false
                },
                {
                    "name": "accent_color_id",
                    "type": "int32",
                    "description": "Identifier of the accent color for chat title and background of chat photo",
                    "required": true
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "Chat username by which all other information about the chat can be resolved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockTable",
            "description": "A table",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "caption",
                    "type": "RichText",
                    "description": "Table caption",
                    "required": true
                },
                {
                    "name": "cells",
                    "type": "vector<vector<pageBlockTableCell>>",
                    "description": "Table cells",
                    "required": true
                },
                {
                    "name": "is_bordered",
                    "type": "Bool",
                    "description": "True, if the table is bordered",
                    "required": true
                },
                {
                    "name": "is_striped",
                    "type": "Bool",
                    "description": "True, if the table is striped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockDetails",
            "description": "A collapsible block",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "header",
                    "type": "RichText",
                    "description": "Always visible heading for the block",
                    "required": true
                },
                {
                    "name": "page_blocks",
                    "type": "vector<PageBlock>",
                    "description": "Block contents",
                    "required": true
                },
                {
                    "name": "is_open",
                    "type": "Bool",
                    "description": "True, if the block is open by default",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockRelatedArticles",
            "description": "Related articles",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "header",
                    "type": "RichText",
                    "description": "Block header",
                    "required": true
                },
                {
                    "name": "articles",
                    "type": "vector<pageBlockRelatedArticle>",
                    "description": "List of related articles",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pageBlockMap",
            "description": "A map",
            "type": "PageBlock",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "Location of the map center",
                    "required": true
                },
                {
                    "name": "zoom",
                    "type": "int32",
                    "description": "Map zoom level",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Map width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Map height",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "pageBlockCaption",
                    "description": "Block caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "webPageInstantView",
            "description": "Describes an instant view page for a web page",
            "type": "WebPageInstantView",
            "annotations": [
                {
                    "name": "page_blocks",
                    "type": "vector<PageBlock>",
                    "description": "Content of the instant view page",
                    "required": true
                },
                {
                    "name": "view_count",
                    "type": "int32",
                    "description": "Number of the instant view views; 0 if unknown",
                    "required": true
                },
                {
                    "name": "version",
                    "type": "int32",
                    "description": "Version of the instant view; currently, can be 1 or 2",
                    "required": true
                },
                {
                    "name": "is_rtl",
                    "type": "Bool",
                    "description": "True, if the instant view must be shown from right to left",
                    "required": true
                },
                {
                    "name": "is_full",
                    "type": "Bool",
                    "description": "True, if the instant view contains the full page. A network request might be needed to get the full instant view",
                    "required": true
                },
                {
                    "name": "feedback_link",
                    "type": "InternalLinkType",
                    "description": "An internal link to be opened to leave feedback about the instant view",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewAlbumMediaPhoto",
            "description": "The media is a photo",
            "type": "LinkPreviewAlbumMedia",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewAlbumMediaVideo",
            "description": "The media is a video",
            "type": "LinkPreviewAlbumMedia",
            "annotations": [
                {
                    "name": "video",
                    "type": "video",
                    "description": "Video description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeAlbum",
            "description": "The link is a link to a media album consisting of photos and videos",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "media",
                    "type": "vector<LinkPreviewAlbumMedia>",
                    "description": "The list of album media",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "string",
                    "description": "Album caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeAnimation",
            "description": "The link is a link to an animation",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "The animation",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the animation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeApp",
            "description": "The link is a link to an app at App Store or Google Play",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo for the app",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the app",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeArticle",
            "description": "The link is a link to a web site",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Article's main photo; may be null",
                    "required": false
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the article",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeAudio",
            "description": "The link is a link to an audio",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the audio; may be empty if none",
                    "required": false
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the audio file",
                    "required": true
                },
                {
                    "name": "audio",
                    "type": "audio",
                    "description": "The audio description; may be null if unknown",
                    "required": false
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the audio, in seconds; 0 if unknown",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the audio",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeBackground",
            "description": "The link is a link to a background. Link preview title and description are available only for filled backgrounds",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "document",
                    "type": "document",
                    "description": "Document with the background; may be null for filled backgrounds",
                    "required": false
                },
                {
                    "name": "background_type",
                    "type": "BackgroundType",
                    "description": "Type of the background; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeChannelBoost",
            "description": "The link is a link to boost a channel chat",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Photo of the chat; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeChat",
            "description": "The link is a link to a chat",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "type",
                    "type": "InviteLinkChatType",
                    "description": "Type of the chat",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Photo of the chat; may be null",
                    "required": false
                },
                {
                    "name": "creates_join_request",
                    "type": "Bool",
                    "description": "True, if the link only creates join request",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeDocument",
            "description": "The link is a link to a general file",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "document",
                    "type": "document",
                    "description": "The document description",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeEmbeddedAnimationPlayer",
            "description": "The link is a link to an animation player",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the external animation player",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "photo",
                    "description": "Thumbnail of the animation; may be null if unknown",
                    "required": false
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the animation, in seconds",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the animation",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Expected width of the embedded player",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Expected height of the embedded player",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeEmbeddedAudioPlayer",
            "description": "The link is a link to an audio player",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the external audio player",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "photo",
                    "description": "Thumbnail of the audio; may be null if unknown",
                    "required": false
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the audio, in seconds",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the audio",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Expected width of the embedded player",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Expected height of the embedded player",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeEmbeddedVideoPlayer",
            "description": "The link is a link to a video player",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the external video player",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "photo",
                    "description": "Thumbnail of the video; may be null if unknown",
                    "required": false
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the video",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Expected width of the embedded player",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Expected height of the embedded player",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeInvoice",
            "description": "The link is a link to an invoice",
            "type": "LinkPreviewType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeMessage",
            "description": "The link is a link to a text or a poll Telegram message",
            "type": "LinkPreviewType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypePhoto",
            "description": "The link is a link to a photo",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "The photo",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypePremiumGiftCode",
            "description": "The link is a link to a Telegram Premium gift code",
            "type": "LinkPreviewType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeShareableChatFolder",
            "description": "The link is a link to a shareable chat folder",
            "type": "LinkPreviewType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeSticker",
            "description": "The link is a link to a sticker",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "The sticker. It can be an arbitrary WEBP image and can have dimensions bigger than 512",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeStickerSet",
            "description": "The link is a link to a sticker set",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "stickers",
                    "type": "vector<sticker>",
                    "description": "Up to 4 stickers from the sticker set",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeStory",
            "description": "The link is a link to a story. Link preview description is unavailable",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "The identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeSupergroupBoost",
            "description": "The link is a link to boost a supergroup chat",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Photo of the chat; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeTheme",
            "description": "The link is a link to a cloud theme. TDLib has no theme support yet",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "documents",
                    "type": "vector<document>",
                    "description": "The list of files with theme description",
                    "required": true
                },
                {
                    "name": "settings",
                    "type": "themeSettings",
                    "description": "Settings for the cloud theme",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeUnsupported",
            "description": "The link preview type is unsupported yet",
            "type": "LinkPreviewType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeUser",
            "description": "The link is a link to a user",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Photo of the user; may be null if none",
                    "required": false
                },
                {
                    "name": "is_bot",
                    "type": "Bool",
                    "description": "True, if the user is a bot",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeVideo",
            "description": "The link is a link to a video",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the video; may be empty if none",
                    "required": false
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the video file",
                    "required": true
                },
                {
                    "name": "video",
                    "type": "video",
                    "description": "The video description; may be null if unknown",
                    "required": false
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Expected width of the preview",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Expected height of the preview",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds; 0 if unknown",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the video",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeVideoChat",
            "description": "The link is a link to a video chat",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "Photo of the chat with the video chat; may be null if none",
                    "required": false
                },
                {
                    "name": "is_live_stream",
                    "type": "Bool",
                    "description": "True, if the video chat is expected to be a live stream in a channel or a broadcast group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeVideoNote",
            "description": "The link is a link to a video note message",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "video_note",
                    "type": "videoNote",
                    "description": "The video note",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeVoiceNote",
            "description": "The link is a link to a voice note message",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "voice_note",
                    "type": "voiceNote",
                    "description": "The voice note",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreviewTypeWebApp",
            "description": "The link is a link to a Web App",
            "type": "LinkPreviewType",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Web App photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "linkPreview",
            "description": "Describes a link preview",
            "type": "LinkPreview",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "Original URL of the link",
                    "required": true
                },
                {
                    "name": "display_url",
                    "type": "string",
                    "description": "URL to display",
                    "required": true
                },
                {
                    "name": "site_name",
                    "type": "string",
                    "description": "Short name of the site (e.g., Google Docs, App Store)",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the content",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "formattedText",
                    "description": "Description of the content",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "LinkPreviewType",
                    "description": "Type of the link preview",
                    "required": true
                },
                {
                    "name": "has_large_media",
                    "type": "Bool",
                    "description": "True, if size of media in the preview can be changed",
                    "required": true
                },
                {
                    "name": "show_large_media",
                    "type": "Bool",
                    "description": "True, if large media preview must be shown; otherwise, the media preview must be shown small and only the first frame must be shown for videos",
                    "required": true
                },
                {
                    "name": "show_media_above_description",
                    "type": "Bool",
                    "description": "True, if media must be shown above link preview description; otherwise, the media must be shown below the description",
                    "required": true
                },
                {
                    "name": "skip_confirmation",
                    "type": "Bool",
                    "description": "True, if there is no need to show an ordinary open URL confirmation, when opening the URL from the preview, because the URL is shown in the message text in clear",
                    "required": true
                },
                {
                    "name": "show_above_text",
                    "type": "Bool",
                    "description": "True, if the link preview must be shown above message text; otherwise, the link preview must be shown below the message text",
                    "required": true
                },
                {
                    "name": "instant_view_version",
                    "type": "int32",
                    "description": "Version of instant view (currently, can be 1 or 2) for the web page; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "countryInfo",
            "description": "Contains information about a country",
            "type": "CountryInfo",
            "annotations": [
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Native name of the country",
                    "required": true
                },
                {
                    "name": "english_name",
                    "type": "string",
                    "description": "English name of the country",
                    "required": true
                },
                {
                    "name": "is_hidden",
                    "type": "Bool",
                    "description": "True, if the country must be hidden from the list of all countries",
                    "required": true
                },
                {
                    "name": "calling_codes",
                    "type": "vector<string>",
                    "description": "List of country calling codes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "countries",
            "description": "Contains information about countries",
            "type": "Countries",
            "annotations": [
                {
                    "name": "countries",
                    "type": "vector<countryInfo>",
                    "description": "The list of countries",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "phoneNumberInfo",
            "description": "Contains information about a phone number",
            "type": "PhoneNumberInfo",
            "annotations": [
                {
                    "name": "country",
                    "type": "countryInfo",
                    "description": "Information about the country to which the phone number belongs; may be null",
                    "required": false
                },
                {
                    "name": "country_calling_code",
                    "type": "string",
                    "description": "The part of the phone number denoting country calling code or its part",
                    "required": true
                },
                {
                    "name": "formatted_phone_number",
                    "type": "string",
                    "description": "The phone number without country calling code formatted accordingly to local rules. Expected digits are returned as '-', but even more digits might be entered by the user",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "True, if the phone number was bought at https://fragment.com and isn't tied to a SIM card. Information about the phone number can be received using getCollectibleItemInfo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "collectibleItemTypeUsername",
            "description": "A username",
            "type": "CollectibleItemType",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "The username",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "collectibleItemTypePhoneNumber",
            "description": "A phone number",
            "type": "CollectibleItemType",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "The phone number",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "collectibleItemInfo",
            "description": "Contains information about a collectible item and its last purchase",
            "type": "CollectibleItemInfo",
            "annotations": [
                {
                    "name": "purchase_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the item was purchased",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the paid amount",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "cryptocurrency",
                    "type": "string",
                    "description": "Cryptocurrency used to pay for the item",
                    "required": true
                },
                {
                    "name": "cryptocurrency_amount",
                    "type": "int64",
                    "description": "The paid amount, in the smallest units of the cryptocurrency",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "Individual URL for the item on https://fragment.com",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "bankCardActionOpenUrl",
            "description": "Describes an action associated with a bank card number",
            "type": "BankCardActionOpenUrl",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Action text",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL to be opened",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "bankCardInfo",
            "description": "Information about a bank card",
            "type": "BankCardInfo",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the bank card description",
                    "required": true
                },
                {
                    "name": "actions",
                    "type": "vector<bankCardActionOpenUrl>",
                    "description": "Actions that can be done with the bank card number",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "address",
            "description": "Describes an address",
            "type": "Address",
            "annotations": [
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "string",
                    "description": "State, if applicable",
                    "required": true
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "City",
                    "required": true
                },
                {
                    "name": "street_line1",
                    "type": "string",
                    "description": "First line of the address",
                    "required": true
                },
                {
                    "name": "street_line2",
                    "type": "string",
                    "description": "Second line of the address",
                    "required": true
                },
                {
                    "name": "postal_code",
                    "type": "string",
                    "description": "Address postal code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "locationAddress",
            "description": "Describes an address of a location",
            "type": "LocationAddress",
            "annotations": [
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "string",
                    "description": "State, if applicable; empty if unknown",
                    "required": true
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "City; empty if unknown",
                    "required": true
                },
                {
                    "name": "street",
                    "type": "string",
                    "description": "The address; empty if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "themeParameters",
            "description": "Contains parameters of the application theme",
            "type": "ThemeParameters",
            "annotations": [
                {
                    "name": "background_color",
                    "type": "int32",
                    "description": "A color of the background in the RGB24 format",
                    "required": true
                },
                {
                    "name": "secondary_background_color",
                    "type": "int32",
                    "description": "A secondary color for the background in the RGB24 format",
                    "required": true
                },
                {
                    "name": "header_background_color",
                    "type": "int32",
                    "description": "A color of the header background in the RGB24 format",
                    "required": true
                },
                {
                    "name": "section_background_color",
                    "type": "int32",
                    "description": "A color of the section background in the RGB24 format",
                    "required": true
                },
                {
                    "name": "section_separator_color",
                    "type": "int32",
                    "description": "A color of the section separator in the RGB24 format",
                    "required": true
                },
                {
                    "name": "text_color",
                    "type": "int32",
                    "description": "A color of text in the RGB24 format",
                    "required": true
                },
                {
                    "name": "accent_text_color",
                    "type": "int32",
                    "description": "An accent color of the text in the RGB24 format",
                    "required": true
                },
                {
                    "name": "section_header_text_color",
                    "type": "int32",
                    "description": "A color of text on the section headers in the RGB24 format",
                    "required": true
                },
                {
                    "name": "subtitle_text_color",
                    "type": "int32",
                    "description": "A color of the subtitle text in the RGB24 format",
                    "required": true
                },
                {
                    "name": "destructive_text_color",
                    "type": "int32",
                    "description": "A color of the text for destructive actions in the RGB24 format",
                    "required": true
                },
                {
                    "name": "hint_color",
                    "type": "int32",
                    "description": "A color of hints in the RGB24 format",
                    "required": true
                },
                {
                    "name": "link_color",
                    "type": "int32",
                    "description": "A color of links in the RGB24 format",
                    "required": true
                },
                {
                    "name": "button_color",
                    "type": "int32",
                    "description": "A color of the buttons in the RGB24 format",
                    "required": true
                },
                {
                    "name": "button_text_color",
                    "type": "int32",
                    "description": "A color of text on the buttons in the RGB24 format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "labeledPricePart",
            "description": "Portion of the price of a product (e.g., 'delivery cost', 'tax amount')",
            "type": "LabeledPricePart",
            "annotations": [
                {
                    "name": "label",
                    "type": "string",
                    "description": "Label for this portion of the product price",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Currency amount in the smallest units of the currency",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "invoice",
            "description": "Product invoice",
            "type": "Invoice",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code",
                    "required": true
                },
                {
                    "name": "price_parts",
                    "type": "vector<labeledPricePart>",
                    "description": "A list of objects used to calculate the total price of the product",
                    "required": true
                },
                {
                    "name": "max_tip_amount",
                    "type": "int53",
                    "description": "The maximum allowed amount of tip in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "suggested_tip_amounts",
                    "type": "vector<int53>",
                    "description": "Suggested amounts of tip in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "recurring_payment_terms_of_service_url",
                    "type": "string",
                    "description": "An HTTP URL with terms of service for recurring payments. If non-empty, the invoice payment will result in recurring payments and the user must accept the terms of service before allowed to pay",
                    "required": false
                },
                {
                    "name": "terms_of_service_url",
                    "type": "string",
                    "description": "An HTTP URL with terms of service for non-recurring payments. If non-empty, then the user must accept the terms of service before allowed to pay",
                    "required": false
                },
                {
                    "name": "is_test",
                    "type": "Bool",
                    "description": "True, if the payment is a test payment",
                    "required": true
                },
                {
                    "name": "need_name",
                    "type": "Bool",
                    "description": "True, if the user's name is needed for payment",
                    "required": true
                },
                {
                    "name": "need_phone_number",
                    "type": "Bool",
                    "description": "True, if the user's phone number is needed for payment",
                    "required": true
                },
                {
                    "name": "need_email_address",
                    "type": "Bool",
                    "description": "True, if the user's email address is needed for payment",
                    "required": true
                },
                {
                    "name": "need_shipping_address",
                    "type": "Bool",
                    "description": "True, if the user's shipping address is needed for payment",
                    "required": true
                },
                {
                    "name": "send_phone_number_to_provider",
                    "type": "Bool",
                    "description": "True, if the user's phone number will be sent to the provider",
                    "required": true
                },
                {
                    "name": "send_email_address_to_provider",
                    "type": "Bool",
                    "description": "True, if the user's email address will be sent to the provider",
                    "required": true
                },
                {
                    "name": "is_flexible",
                    "type": "Bool",
                    "description": "True, if the total price depends on the shipping method",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "orderInfo",
            "description": "Order information",
            "type": "OrderInfo",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the user",
                    "required": true
                },
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number of the user",
                    "required": true
                },
                {
                    "name": "email_address",
                    "type": "string",
                    "description": "Email address of the user",
                    "required": true
                },
                {
                    "name": "shipping_address",
                    "type": "address",
                    "description": "Shipping address for this order; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "shippingOption",
            "description": "One shipping option",
            "type": "ShippingOption",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Shipping option identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Option title",
                    "required": true
                },
                {
                    "name": "price_parts",
                    "type": "vector<labeledPricePart>",
                    "description": "A list of objects used to calculate the total shipping costs",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "savedCredentials",
            "description": "Contains information about saved payment credentials",
            "type": "SavedCredentials",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the saved credentials",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the saved credentials",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputCredentialsSaved",
            "description": "Applies if a user chooses some previously saved payment credentials. To use their previously saved credentials, the user must have a valid temporary password",
            "type": "InputCredentials",
            "annotations": [
                {
                    "name": "saved_credentials_id",
                    "type": "string",
                    "description": "Identifier of the saved credentials",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputCredentialsNew",
            "description": "Applies if a user enters new credentials on a payment provider website",
            "type": "InputCredentials",
            "annotations": [
                {
                    "name": "data",
                    "type": "string",
                    "description": "JSON-encoded data with the credential identifier from the payment provider",
                    "required": true
                },
                {
                    "name": "allow_save",
                    "type": "Bool",
                    "description": "True, if the credential identifier can be saved on the server side",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputCredentialsApplePay",
            "description": "Applies if a user enters new credentials using Apple Pay",
            "type": "InputCredentials",
            "annotations": [
                {
                    "name": "data",
                    "type": "string",
                    "description": "JSON-encoded data with the credential identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputCredentialsGooglePay",
            "description": "Applies if a user enters new credentials using Google Pay",
            "type": "InputCredentials",
            "annotations": [
                {
                    "name": "data",
                    "type": "string",
                    "description": "JSON-encoded data with the credential identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentProviderSmartGlocal",
            "description": "Smart Glocal payment provider",
            "type": "PaymentProvider",
            "annotations": [
                {
                    "name": "public_token",
                    "type": "string",
                    "description": "Public payment token",
                    "required": true
                },
                {
                    "name": "tokenize_url",
                    "type": "string",
                    "description": "URL for sending card tokenization requests",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentProviderStripe",
            "description": "Stripe payment provider",
            "type": "PaymentProvider",
            "annotations": [
                {
                    "name": "publishable_key",
                    "type": "string",
                    "description": "Stripe API publishable key",
                    "required": true
                },
                {
                    "name": "need_country",
                    "type": "Bool",
                    "description": "True, if the user country must be provided",
                    "required": true
                },
                {
                    "name": "need_postal_code",
                    "type": "Bool",
                    "description": "True, if the user ZIP/postal code must be provided",
                    "required": true
                },
                {
                    "name": "need_cardholder_name",
                    "type": "Bool",
                    "description": "True, if the cardholder name must be provided",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentProviderOther",
            "description": "Some other payment provider, for which a web payment form must be shown",
            "type": "PaymentProvider",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "Payment form URL",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentOption",
            "description": "Describes an additional payment option",
            "type": "PaymentOption",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title for the payment option",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "Payment form URL to be opened in a web view",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentFormTypeRegular",
            "description": "The payment form is for a regular payment",
            "type": "PaymentFormType",
            "annotations": [
                {
                    "name": "invoice",
                    "type": "invoice",
                    "description": "Full information about the invoice",
                    "required": true
                },
                {
                    "name": "payment_provider_user_id",
                    "type": "int53",
                    "description": "User identifier of the payment provider bot",
                    "required": true
                },
                {
                    "name": "payment_provider",
                    "type": "PaymentProvider",
                    "description": "Information about the payment provider",
                    "required": true
                },
                {
                    "name": "additional_payment_options",
                    "type": "vector<paymentOption>",
                    "description": "The list of additional payment options",
                    "required": true
                },
                {
                    "name": "saved_order_info",
                    "type": "orderInfo",
                    "description": "Saved server-side order information; may be null",
                    "required": false
                },
                {
                    "name": "saved_credentials",
                    "type": "vector<savedCredentials>",
                    "description": "The list of saved payment credentials",
                    "required": true
                },
                {
                    "name": "can_save_credentials",
                    "type": "Bool",
                    "description": "True, if the user can choose to save credentials",
                    "required": true
                },
                {
                    "name": "need_password",
                    "type": "Bool",
                    "description": "True, if the user will be able to save credentials, if sets up a 2-step verification password",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentFormTypeStars",
            "description": "The payment form is for a payment in Telegram Stars",
            "type": "PaymentFormType",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars that will be paid",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentForm",
            "description": "Contains information about an invoice payment form",
            "type": "PaymentForm",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "The payment form identifier",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "PaymentFormType",
                    "description": "Type of the payment form",
                    "required": true
                },
                {
                    "name": "seller_bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the seller bot",
                    "required": true
                },
                {
                    "name": "product_info",
                    "type": "productInfo",
                    "description": "Information about the product",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "validatedOrderInfo",
            "description": "Contains a temporary identifier of validated order information, which is stored for one hour, and the available shipping options",
            "type": "ValidatedOrderInfo",
            "annotations": [
                {
                    "name": "order_info_id",
                    "type": "string",
                    "description": "Temporary identifier of the order information",
                    "required": true
                },
                {
                    "name": "shipping_options",
                    "type": "vector<shippingOption>",
                    "description": "Available shipping options",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentResult",
            "description": "Contains the result of a payment request",
            "type": "PaymentResult",
            "annotations": [
                {
                    "name": "success",
                    "type": "Bool",
                    "description": "True, if the payment request was successful; otherwise, the verification_url will be non-empty",
                    "required": true
                },
                {
                    "name": "verification_url",
                    "type": "string",
                    "description": "URL for additional payment credentials verification",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentReceiptTypeRegular",
            "description": "The payment was done using a third-party payment provider",
            "type": "PaymentReceiptType",
            "annotations": [
                {
                    "name": "payment_provider_user_id",
                    "type": "int53",
                    "description": "User identifier of the payment provider bot",
                    "required": true
                },
                {
                    "name": "invoice",
                    "type": "invoice",
                    "description": "Information about the invoice",
                    "required": true
                },
                {
                    "name": "order_info",
                    "type": "orderInfo",
                    "description": "Order information; may be null",
                    "required": false
                },
                {
                    "name": "shipping_option",
                    "type": "shippingOption",
                    "description": "Chosen shipping option; may be null",
                    "required": false
                },
                {
                    "name": "credentials_title",
                    "type": "string",
                    "description": "Title of the saved credentials chosen by the buyer",
                    "required": true
                },
                {
                    "name": "tip_amount",
                    "type": "int53",
                    "description": "The amount of tip chosen by the buyer in the smallest units of the currency",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentReceiptTypeStars",
            "description": "The payment was done using Telegram Stars",
            "type": "PaymentReceiptType",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars that were paid",
                    "required": true
                },
                {
                    "name": "transaction_id",
                    "type": "string",
                    "description": "Unique identifier of the transaction that can be used to dispute it",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paymentReceipt",
            "description": "Contains information about a successful payment",
            "type": "PaymentReceipt",
            "annotations": [
                {
                    "name": "product_info",
                    "type": "productInfo",
                    "description": "Information about the product",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the payment was made",
                    "required": true
                },
                {
                    "name": "seller_bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the seller bot",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "PaymentReceiptType",
                    "description": "Type of the payment receipt",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInvoiceMessage",
            "description": "An invoice from a message of the type messageInvoice or paid media purchase from messagePaidMedia",
            "type": "InputInvoice",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInvoiceName",
            "description": "An invoice from a link of the type internalLinkTypeInvoice",
            "type": "InputInvoice",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the invoice",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInvoiceTelegram",
            "description": "An invoice for a payment toward Telegram; must not be used in the in-store apps",
            "type": "InputInvoice",
            "annotations": [
                {
                    "name": "purpose",
                    "type": "TelegramPaymentPurpose",
                    "description": "Transaction purpose",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paidMediaPreview",
            "description": "The media is hidden until the invoice is paid",
            "type": "PaidMedia",
            "annotations": [
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Media width; 0 if unknown",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Media height; 0 if unknown",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Media duration, in seconds; 0 if unknown",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Media minithumbnail; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paidMediaPhoto",
            "description": "The media is a photo",
            "type": "PaidMedia",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "The photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paidMediaVideo",
            "description": "The media is a video",
            "type": "PaidMedia",
            "annotations": [
                {
                    "name": "video",
                    "type": "video",
                    "description": "The video",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "paidMediaUnsupported",
            "description": "The media is unsupported",
            "type": "PaidMedia",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumGiveawayParameters",
            "description": "Describes parameters of a Telegram Premium giveaway",
            "type": "PremiumGiveawayParameters",
            "annotations": [
                {
                    "name": "boosted_chat_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel chat, which will be automatically boosted by the winners of the giveaway for duration of the Premium subscription.",
                    "required": true
                },
                {
                    "name": "additional_chat_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of other supergroup or channel chats that must be subscribed by the users to be eligible for the giveaway. There can be up to getOption('giveaway_additional_chat_count_max') additional chats",
                    "required": true
                },
                {
                    "name": "winners_selection_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the giveaway is expected to be performed; must be 60-getOption('giveaway_duration_max') seconds in the future in scheduled giveaways",
                    "required": true
                },
                {
                    "name": "only_new_members",
                    "type": "Bool",
                    "description": "True, if only new members of the chats will be eligible for the giveaway",
                    "required": true
                },
                {
                    "name": "has_public_winners",
                    "type": "Bool",
                    "description": "True, if the list of winners of the giveaway will be available to everyone",
                    "required": true
                },
                {
                    "name": "country_codes",
                    "type": "vector<string>",
                    "description": "The list of two-letter ISO 3166-1 alpha-2 codes of countries, users from which will be eligible for the giveaway. If empty, then all users can participate in the giveaway.",
                    "required": true
                },
                {
                    "name": "prize_description",
                    "type": "string",
                    "description": "Additional description of the giveaway prize; 0-128 characters",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "datedFile",
            "description": "File with the date it was uploaded",
            "type": "DatedFile",
            "annotations": [
                {
                    "name": "file",
                    "type": "file",
                    "description": "The file",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the file was uploaded",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypePersonalDetails",
            "description": "A Telegram Passport element containing the user's personal details",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypePassport",
            "description": "A Telegram Passport element containing the user's passport",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeDriverLicense",
            "description": "A Telegram Passport element containing the user's driver license",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeIdentityCard",
            "description": "A Telegram Passport element containing the user's identity card",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeInternalPassport",
            "description": "A Telegram Passport element containing the user's internal passport",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeAddress",
            "description": "A Telegram Passport element containing the user's address",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeUtilityBill",
            "description": "A Telegram Passport element containing the user's utility bill",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeBankStatement",
            "description": "A Telegram Passport element containing the user's bank statement",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeRentalAgreement",
            "description": "A Telegram Passport element containing the user's rental agreement",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypePassportRegistration",
            "description": "A Telegram Passport element containing the registration page of the user's passport",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeTemporaryRegistration",
            "description": "A Telegram Passport element containing the user's temporary registration",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypePhoneNumber",
            "description": "A Telegram Passport element containing the user's phone number",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTypeEmailAddress",
            "description": "A Telegram Passport element containing the user's email address",
            "type": "PassportElementType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "date",
            "description": "Represents a date according to the Gregorian calendar",
            "type": "Date",
            "annotations": [
                {
                    "name": "day",
                    "type": "int32",
                    "description": "Day of the month; 1-31",
                    "required": true
                },
                {
                    "name": "month",
                    "type": "int32",
                    "description": "Month; 1-12",
                    "required": true
                },
                {
                    "name": "year",
                    "type": "int32",
                    "description": "Year; 1-9999",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "personalDetails",
            "description": "Contains the user's personal details",
            "type": "PersonalDetails",
            "annotations": [
                {
                    "name": "first_name",
                    "type": "string",
                    "description": "First name of the user written in English; 1-255 characters",
                    "required": true
                },
                {
                    "name": "middle_name",
                    "type": "string",
                    "description": "Middle name of the user written in English; 0-255 characters",
                    "required": true
                },
                {
                    "name": "last_name",
                    "type": "string",
                    "description": "Last name of the user written in English; 1-255 characters",
                    "required": true
                },
                {
                    "name": "native_first_name",
                    "type": "string",
                    "description": "Native first name of the user; 1-255 characters",
                    "required": true
                },
                {
                    "name": "native_middle_name",
                    "type": "string",
                    "description": "Native middle name of the user; 0-255 characters",
                    "required": true
                },
                {
                    "name": "native_last_name",
                    "type": "string",
                    "description": "Native last name of the user; 1-255 characters",
                    "required": true
                },
                {
                    "name": "birthdate",
                    "type": "date",
                    "description": "Birthdate of the user",
                    "required": true
                },
                {
                    "name": "gender",
                    "type": "string",
                    "description": "Gender of the user, 'male' or 'female'",
                    "required": true
                },
                {
                    "name": "country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code of the user's country",
                    "required": true
                },
                {
                    "name": "residence_country_code",
                    "type": "string",
                    "description": "A two-letter ISO 3166-1 alpha-2 country code of the user's residence country",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "identityDocument",
            "description": "An identity document",
            "type": "IdentityDocument",
            "annotations": [
                {
                    "name": "number",
                    "type": "string",
                    "description": "Document number; 1-24 characters",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "date",
                    "description": "Document expiration date; may be null if not applicable",
                    "required": false
                },
                {
                    "name": "front_side",
                    "type": "datedFile",
                    "description": "Front side of the document",
                    "required": true
                },
                {
                    "name": "reverse_side",
                    "type": "datedFile",
                    "description": "Reverse side of the document; only for driver license and identity card; may be null",
                    "required": false
                },
                {
                    "name": "selfie",
                    "type": "datedFile",
                    "description": "Selfie with the document; may be null",
                    "required": false
                },
                {
                    "name": "translation",
                    "type": "vector<datedFile>",
                    "description": "List of files containing a certified English translation of the document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputIdentityDocument",
            "description": "An identity document to be saved to Telegram Passport",
            "type": "InputIdentityDocument",
            "annotations": [
                {
                    "name": "number",
                    "type": "string",
                    "description": "Document number; 1-24 characters",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "date",
                    "description": "Document expiration date; pass null if not applicable",
                    "required": false
                },
                {
                    "name": "front_side",
                    "type": "InputFile",
                    "description": "Front side of the document",
                    "required": true
                },
                {
                    "name": "reverse_side",
                    "type": "InputFile",
                    "description": "Reverse side of the document; only for driver license and identity card; pass null otherwise",
                    "required": false
                },
                {
                    "name": "selfie",
                    "type": "InputFile",
                    "description": "Selfie with the document; pass null if unavailable",
                    "required": false
                },
                {
                    "name": "translation",
                    "type": "vector<InputFile>",
                    "description": "List of files containing a certified English translation of the document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "personalDocument",
            "description": "A personal document, containing some information about a user",
            "type": "PersonalDocument",
            "annotations": [
                {
                    "name": "files",
                    "type": "vector<datedFile>",
                    "description": "List of files containing the pages of the document",
                    "required": true
                },
                {
                    "name": "translation",
                    "type": "vector<datedFile>",
                    "description": "List of files containing a certified English translation of the document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPersonalDocument",
            "description": "A personal document to be saved to Telegram Passport",
            "type": "InputPersonalDocument",
            "annotations": [
                {
                    "name": "files",
                    "type": "vector<InputFile>",
                    "description": "List of files containing the pages of the document",
                    "required": true
                },
                {
                    "name": "translation",
                    "type": "vector<InputFile>",
                    "description": "List of files containing a certified English translation of the document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementPersonalDetails",
            "description": "A Telegram Passport element containing the user's personal details",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "personal_details",
                    "type": "personalDetails",
                    "description": "Personal details of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementPassport",
            "description": "A Telegram Passport element containing the user's passport",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "passport",
                    "type": "identityDocument",
                    "description": "Passport",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementDriverLicense",
            "description": "A Telegram Passport element containing the user's driver license",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "driver_license",
                    "type": "identityDocument",
                    "description": "Driver license",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementIdentityCard",
            "description": "A Telegram Passport element containing the user's identity card",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "identity_card",
                    "type": "identityDocument",
                    "description": "Identity card",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementInternalPassport",
            "description": "A Telegram Passport element containing the user's internal passport",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "internal_passport",
                    "type": "identityDocument",
                    "description": "Internal passport",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementAddress",
            "description": "A Telegram Passport element containing the user's address",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "address",
                    "type": "address",
                    "description": "Address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementUtilityBill",
            "description": "A Telegram Passport element containing the user's utility bill",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "utility_bill",
                    "type": "personalDocument",
                    "description": "Utility bill",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementBankStatement",
            "description": "A Telegram Passport element containing the user's bank statement",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "bank_statement",
                    "type": "personalDocument",
                    "description": "Bank statement",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementRentalAgreement",
            "description": "A Telegram Passport element containing the user's rental agreement",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "rental_agreement",
                    "type": "personalDocument",
                    "description": "Rental agreement",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementPassportRegistration",
            "description": "A Telegram Passport element containing the user's passport registration pages",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "passport_registration",
                    "type": "personalDocument",
                    "description": "Passport registration pages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementTemporaryRegistration",
            "description": "A Telegram Passport element containing the user's temporary registration",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "temporary_registration",
                    "type": "personalDocument",
                    "description": "Temporary registration",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementPhoneNumber",
            "description": "A Telegram Passport element containing the user's phone number",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementEmailAddress",
            "description": "A Telegram Passport element containing the user's email address",
            "type": "PassportElement",
            "annotations": [
                {
                    "name": "email_address",
                    "type": "string",
                    "description": "Email address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementPersonalDetails",
            "description": "A Telegram Passport element to be saved containing the user's personal details",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "personal_details",
                    "type": "personalDetails",
                    "description": "Personal details of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementPassport",
            "description": "A Telegram Passport element to be saved containing the user's passport",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "passport",
                    "type": "inputIdentityDocument",
                    "description": "The passport to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementDriverLicense",
            "description": "A Telegram Passport element to be saved containing the user's driver license",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "driver_license",
                    "type": "inputIdentityDocument",
                    "description": "The driver license to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementIdentityCard",
            "description": "A Telegram Passport element to be saved containing the user's identity card",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "identity_card",
                    "type": "inputIdentityDocument",
                    "description": "The identity card to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementInternalPassport",
            "description": "A Telegram Passport element to be saved containing the user's internal passport",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "internal_passport",
                    "type": "inputIdentityDocument",
                    "description": "The internal passport to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementAddress",
            "description": "A Telegram Passport element to be saved containing the user's address",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "address",
                    "type": "address",
                    "description": "The address to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementUtilityBill",
            "description": "A Telegram Passport element to be saved containing the user's utility bill",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "utility_bill",
                    "type": "inputPersonalDocument",
                    "description": "The utility bill to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementBankStatement",
            "description": "A Telegram Passport element to be saved containing the user's bank statement",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "bank_statement",
                    "type": "inputPersonalDocument",
                    "description": "The bank statement to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementRentalAgreement",
            "description": "A Telegram Passport element to be saved containing the user's rental agreement",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "rental_agreement",
                    "type": "inputPersonalDocument",
                    "description": "The rental agreement to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementPassportRegistration",
            "description": "A Telegram Passport element to be saved containing the user's passport registration",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "passport_registration",
                    "type": "inputPersonalDocument",
                    "description": "The passport registration page to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementTemporaryRegistration",
            "description": "A Telegram Passport element to be saved containing the user's temporary registration",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "temporary_registration",
                    "type": "inputPersonalDocument",
                    "description": "The temporary registration document to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementPhoneNumber",
            "description": "A Telegram Passport element to be saved containing the user's phone number",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "The phone number to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementEmailAddress",
            "description": "A Telegram Passport element to be saved containing the user's email address",
            "type": "InputPassportElement",
            "annotations": [
                {
                    "name": "email_address",
                    "type": "string",
                    "description": "The email address to be saved",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElements",
            "description": "Contains information about saved Telegram Passport elements",
            "type": "PassportElements",
            "annotations": [
                {
                    "name": "elements",
                    "type": "vector<PassportElement>",
                    "description": "Telegram Passport elements",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceUnspecified",
            "description": "The element contains an error in an unspecified place. The error will be considered resolved when new data is added",
            "type": "PassportElementErrorSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceDataField",
            "description": "One of the data fields contains an error. The error will be considered resolved when the value of the field changes",
            "type": "PassportElementErrorSource",
            "annotations": [
                {
                    "name": "field_name",
                    "type": "string",
                    "description": "Field name",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceFrontSide",
            "description": "The front side of the document contains an error. The error will be considered resolved when the file with the front side changes",
            "type": "PassportElementErrorSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceReverseSide",
            "description": "The reverse side of the document contains an error. The error will be considered resolved when the file with the reverse side changes",
            "type": "PassportElementErrorSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceSelfie",
            "description": "The selfie with the document contains an error. The error will be considered resolved when the file with the selfie changes",
            "type": "PassportElementErrorSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceTranslationFile",
            "description": "One of files with the translation of the document contains an error. The error will be considered resolved when the file changes",
            "type": "PassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_index",
                    "type": "int32",
                    "description": "Index of a file with the error",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceTranslationFiles",
            "description": "The translation of the document contains an error. The error will be considered resolved when the list of translation files changes",
            "type": "PassportElementErrorSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceFile",
            "description": "The file contains an error. The error will be considered resolved when the file changes",
            "type": "PassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_index",
                    "type": "int32",
                    "description": "Index of a file with the error",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementErrorSourceFiles",
            "description": "The list of attached files contains an error. The error will be considered resolved when the list of files changes",
            "type": "PassportElementErrorSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementError",
            "description": "Contains the description of an error in a Telegram Passport element",
            "type": "PassportElementError",
            "annotations": [
                {
                    "name": "type",
                    "type": "PassportElementType",
                    "description": "Type of the Telegram Passport element which has the error",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "string",
                    "description": "Error message",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "PassportElementErrorSource",
                    "description": "Error source",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportSuitableElement",
            "description": "Contains information about a Telegram Passport element that was requested by a service",
            "type": "PassportSuitableElement",
            "annotations": [
                {
                    "name": "type",
                    "type": "PassportElementType",
                    "description": "Type of the element",
                    "required": true
                },
                {
                    "name": "is_selfie_required",
                    "type": "Bool",
                    "description": "True, if a selfie is required with the identity document",
                    "required": true
                },
                {
                    "name": "is_translation_required",
                    "type": "Bool",
                    "description": "True, if a certified English translation is required with the document",
                    "required": true
                },
                {
                    "name": "is_native_name_required",
                    "type": "Bool",
                    "description": "True, if personal details must include the user's name in the language of their country of residence",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportRequiredElement",
            "description": "Contains a description of the required Telegram Passport element that was requested by a service",
            "type": "PassportRequiredElement",
            "annotations": [
                {
                    "name": "suitable_elements",
                    "type": "vector<passportSuitableElement>",
                    "description": "List of Telegram Passport elements any of which is enough to provide",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportAuthorizationForm",
            "description": "Contains information about a Telegram Passport authorization form that was requested",
            "type": "PassportAuthorizationForm",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique identifier of the authorization form",
                    "required": true
                },
                {
                    "name": "required_elements",
                    "type": "vector<passportRequiredElement>",
                    "description": "Telegram Passport elements that must be provided to complete the form",
                    "required": true
                },
                {
                    "name": "privacy_policy_url",
                    "type": "string",
                    "description": "URL for the privacy policy of the service; may be empty",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "passportElementsWithErrors",
            "description": "Contains information about a Telegram Passport elements and corresponding errors",
            "type": "PassportElementsWithErrors",
            "annotations": [
                {
                    "name": "elements",
                    "type": "vector<PassportElement>",
                    "description": "Telegram Passport elements",
                    "required": true
                },
                {
                    "name": "errors",
                    "type": "vector<passportElementError>",
                    "description": "Errors in the elements that are already available",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "encryptedCredentials",
            "description": "Contains encrypted Telegram Passport data credentials",
            "type": "EncryptedCredentials",
            "annotations": [
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "The encrypted credentials",
                    "required": true
                },
                {
                    "name": "hash",
                    "type": "bytes",
                    "description": "The decrypted data hash",
                    "required": true
                },
                {
                    "name": "secret",
                    "type": "bytes",
                    "description": "Secret for data decryption, encrypted with the service's public key",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "encryptedPassportElement",
            "description": "Contains information about an encrypted Telegram Passport element; for bots only",
            "type": "EncryptedPassportElement",
            "annotations": [
                {
                    "name": "type",
                    "type": "PassportElementType",
                    "description": "Type of Telegram Passport element",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "Encrypted JSON-encoded data about the user",
                    "required": true
                },
                {
                    "name": "front_side",
                    "type": "datedFile",
                    "description": "The front side of an identity document",
                    "required": true
                },
                {
                    "name": "reverse_side",
                    "type": "datedFile",
                    "description": "The reverse side of an identity document; may be null",
                    "required": false
                },
                {
                    "name": "selfie",
                    "type": "datedFile",
                    "description": "Selfie with the document; may be null",
                    "required": false
                },
                {
                    "name": "translation",
                    "type": "vector<datedFile>",
                    "description": "List of files containing a certified English translation of the document",
                    "required": true
                },
                {
                    "name": "files",
                    "type": "vector<datedFile>",
                    "description": "List of attached files",
                    "required": true
                },
                {
                    "name": "value",
                    "type": "string",
                    "description": "Unencrypted data, phone number or email address",
                    "required": true
                },
                {
                    "name": "hash",
                    "type": "string",
                    "description": "Hash of the entire element",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceUnspecified",
            "description": "The element contains an error in an unspecified place. The error will be considered resolved when new data is added",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "element_hash",
                    "type": "bytes",
                    "description": "Current hash of the entire element",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceDataField",
            "description": "A data field contains an error. The error is considered resolved when the field's value changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "field_name",
                    "type": "string",
                    "description": "Field name",
                    "required": true
                },
                {
                    "name": "data_hash",
                    "type": "bytes",
                    "description": "Current data hash",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceFrontSide",
            "description": "The front side of the document contains an error. The error is considered resolved when the file with the front side of the document changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hash",
                    "type": "bytes",
                    "description": "Current hash of the file containing the front side",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceReverseSide",
            "description": "The reverse side of the document contains an error. The error is considered resolved when the file with the reverse side of the document changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hash",
                    "type": "bytes",
                    "description": "Current hash of the file containing the reverse side",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceSelfie",
            "description": "The selfie contains an error. The error is considered resolved when the file with the selfie changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hash",
                    "type": "bytes",
                    "description": "Current hash of the file containing the selfie",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceTranslationFile",
            "description": "One of the files containing the translation of the document contains an error. The error is considered resolved when the file with the translation changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hash",
                    "type": "bytes",
                    "description": "Current hash of the file containing the translation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceTranslationFiles",
            "description": "The translation of the document contains an error. The error is considered resolved when the list of files changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hashes",
                    "type": "vector<bytes>",
                    "description": "Current hashes of all files with the translation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceFile",
            "description": "The file contains an error. The error is considered resolved when the file changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hash",
                    "type": "bytes",
                    "description": "Current hash of the file which has the error",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementErrorSourceFiles",
            "description": "The list of attached files contains an error. The error is considered resolved when the file list changes",
            "type": "InputPassportElementErrorSource",
            "annotations": [
                {
                    "name": "file_hashes",
                    "type": "vector<bytes>",
                    "description": "Current hashes of all attached files",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPassportElementError",
            "description": "Contains the description of an error in a Telegram Passport element; for bots only",
            "type": "InputPassportElementError",
            "annotations": [
                {
                    "name": "type",
                    "type": "PassportElementType",
                    "description": "Type of Telegram Passport element that has the error",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "string",
                    "description": "Error message",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "InputPassportElementErrorSource",
                    "description": "Error source",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageText",
            "description": "A text message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text of the message",
                    "required": true
                },
                {
                    "name": "link_preview",
                    "type": "linkPreview",
                    "description": "A link preview attached to the message; may be null",
                    "required": false
                },
                {
                    "name": "link_preview_options",
                    "type": "linkPreviewOptions",
                    "description": "Options which were used for generation of the link preview; may be null if default options were used",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageAnimation",
            "description": "An animation message (GIF-style).",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "The animation description",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Animation caption",
                    "required": true
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the animation; otherwise, the caption must be shown below the animation",
                    "required": true
                },
                {
                    "name": "has_spoiler",
                    "type": "Bool",
                    "description": "True, if the animation preview must be covered by a spoiler animation",
                    "required": true
                },
                {
                    "name": "is_secret",
                    "type": "Bool",
                    "description": "True, if the animation thumbnail must be blurred and the animation must be shown only while tapped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageAudio",
            "description": "An audio message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "audio",
                    "type": "audio",
                    "description": "The audio description",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Audio caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageDocument",
            "description": "A document message (general file)",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "document",
                    "type": "document",
                    "description": "The document description",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Document caption",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePaidMedia",
            "description": "A message with paid media",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars needed to buy access to the media in the message",
                    "required": true
                },
                {
                    "name": "media",
                    "type": "vector<PaidMedia>",
                    "description": "Information about the media",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Media caption",
                    "required": true
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the media; otherwise, the caption must be shown below the media",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePhoto",
            "description": "A photo message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "The photo",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Photo caption",
                    "required": true
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the photo; otherwise, the caption must be shown below the photo",
                    "required": true
                },
                {
                    "name": "has_spoiler",
                    "type": "Bool",
                    "description": "True, if the photo preview must be covered by a spoiler animation",
                    "required": true
                },
                {
                    "name": "is_secret",
                    "type": "Bool",
                    "description": "True, if the photo must be blurred and must be shown only while tapped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSticker",
            "description": "A sticker message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "The sticker description",
                    "required": true
                },
                {
                    "name": "is_premium",
                    "type": "Bool",
                    "description": "True, if premium animation of the sticker must be played",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVideo",
            "description": "A video message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "video",
                    "type": "video",
                    "description": "The video description",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Video caption",
                    "required": true
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the video; otherwise, the caption must be shown below the video",
                    "required": true
                },
                {
                    "name": "has_spoiler",
                    "type": "Bool",
                    "description": "True, if the video preview must be covered by a spoiler animation",
                    "required": true
                },
                {
                    "name": "is_secret",
                    "type": "Bool",
                    "description": "True, if the video thumbnail must be blurred and the video must be shown only while tapped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVideoNote",
            "description": "A video note message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "video_note",
                    "type": "videoNote",
                    "description": "The video note description",
                    "required": true
                },
                {
                    "name": "is_viewed",
                    "type": "Bool",
                    "description": "True, if at least one of the recipients has viewed the video note",
                    "required": true
                },
                {
                    "name": "is_secret",
                    "type": "Bool",
                    "description": "True, if the video note thumbnail must be blurred and the video note must be shown only while tapped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVoiceNote",
            "description": "A voice note message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "voice_note",
                    "type": "voiceNote",
                    "description": "The voice note description",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Voice note caption",
                    "required": true
                },
                {
                    "name": "is_listened",
                    "type": "Bool",
                    "description": "True, if at least one of the recipients has listened to the voice note",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageExpiredPhoto",
            "description": "A self-destructed photo message",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageExpiredVideo",
            "description": "A self-destructed video message",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageExpiredVideoNote",
            "description": "A self-destructed video note message",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageExpiredVoiceNote",
            "description": "A self-destructed voice note message",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageLocation",
            "description": "A message with a location",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The location description",
                    "required": true
                },
                {
                    "name": "live_period",
                    "type": "int32",
                    "description": "Time relative to the message send date, for which the location can be updated, in seconds; if 0x7FFFFFFF, then location can be updated forever",
                    "required": true
                },
                {
                    "name": "expires_in",
                    "type": "int32",
                    "description": "Left time for which the location can be updated, in seconds. If 0, then the location can't be updated anymore. The update updateMessageContent is not sent when this field changes",
                    "required": true
                },
                {
                    "name": "heading",
                    "type": "int32",
                    "description": "For live locations, a direction in which the location moves, in degrees; 1-360. If 0 the direction is unknown",
                    "required": true
                },
                {
                    "name": "proximity_alert_radius",
                    "type": "int32",
                    "description": "For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). 0 if the notification is disabled. Available only to the message sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVenue",
            "description": "A message with information about a venue",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "venue",
                    "type": "venue",
                    "description": "The venue description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageContact",
            "description": "A message with a user contact",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "contact",
                    "type": "contact",
                    "description": "The contact description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageAnimatedEmoji",
            "description": "A message with an animated emoji",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "animated_emoji",
                    "type": "animatedEmoji",
                    "description": "The animated emoji",
                    "required": true
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "The corresponding emoji",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageDice",
            "description": "A dice message. The dice value is randomly generated by the server",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "initial_state",
                    "type": "DiceStickers",
                    "description": "The animated stickers with the initial dice animation; may be null if unknown. The update updateMessageContent will be sent when the sticker became known",
                    "required": false
                },
                {
                    "name": "final_state",
                    "type": "DiceStickers",
                    "description": "The animated stickers with the final dice animation; may be null if unknown. The update updateMessageContent will be sent when the sticker became known",
                    "required": false
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji on which the dice throw animation is based",
                    "required": true
                },
                {
                    "name": "value",
                    "type": "int32",
                    "description": "The dice value. If the value is 0, the dice don't have final state yet",
                    "required": true
                },
                {
                    "name": "success_animation_frame_number",
                    "type": "int32",
                    "description": "Number of frame after which a success animation like a shower of confetti needs to be shown on updateMessageSendSucceeded",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageGame",
            "description": "A message with a game",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "game",
                    "type": "game",
                    "description": "The game description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePoll",
            "description": "A message with a poll",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "poll",
                    "type": "poll",
                    "description": "The poll description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageStory",
            "description": "A message with a forwarded story",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                },
                {
                    "name": "via_mention",
                    "type": "Bool",
                    "description": "True, if the story was automatically forwarded because of a mention of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageInvoice",
            "description": "A message with an invoice from a bot. Use getInternalLink with internalLinkTypeBotStart to share the invoice",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "product_info",
                    "type": "productInfo",
                    "description": "Information about the product",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the product price",
                    "required": true
                },
                {
                    "name": "total_amount",
                    "type": "int53",
                    "description": "Product total price in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "Unique invoice bot start_parameter to be passed to getInternalLink",
                    "required": true
                },
                {
                    "name": "is_test",
                    "type": "Bool",
                    "description": "True, if the invoice is a test invoice",
                    "required": true
                },
                {
                    "name": "need_shipping_address",
                    "type": "Bool",
                    "description": "True, if the shipping address must be specified",
                    "required": true
                },
                {
                    "name": "receipt_message_id",
                    "type": "int53",
                    "description": "The identifier of the message with the receipt, after the product has been purchased",
                    "required": true
                },
                {
                    "name": "paid_media",
                    "type": "PaidMedia",
                    "description": "Extended media attached to the invoice; may be null if none",
                    "required": false
                },
                {
                    "name": "paid_media_caption",
                    "type": "formattedText",
                    "description": "Extended media caption; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageCall",
            "description": "A message with information about an ended call",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "is_video",
                    "type": "Bool",
                    "description": "True, if the call was a video call",
                    "required": true
                },
                {
                    "name": "discard_reason",
                    "type": "CallDiscardReason",
                    "description": "Reason why the call was discarded",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Call duration, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVideoChatScheduled",
            "description": "A new video chat was scheduled",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Identifier of the video chat. The video chat can be received through the method getGroupCall",
                    "required": true
                },
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the group call is supposed to be started by an administrator",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVideoChatStarted",
            "description": "A newly created video chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Identifier of the video chat. The video chat can be received through the method getGroupCall",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageVideoChatEnded",
            "description": "A message with information about an ended video chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Call duration, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageInviteVideoChatParticipants",
            "description": "A message with information about an invitation to a video chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Identifier of the video chat. The video chat can be received through the method getGroupCall",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Invited user identifiers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageBasicGroupChatCreate",
            "description": "A newly created basic group",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the basic group",
                    "required": true
                },
                {
                    "name": "member_user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers of members in the basic group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSupergroupChatCreate",
            "description": "A newly created supergroup or channel",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the supergroup or channel",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatChangeTitle",
            "description": "An updated chat title",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "New chat title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatChangePhoto",
            "description": "An updated chat photo",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "New chat photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatDeletePhoto",
            "description": "A deleted chat photo",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatAddMembers",
            "description": "New chat members were added",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "member_user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers of the new members",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatJoinByLink",
            "description": "A new member joined the chat via an invite link",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatJoinByRequest",
            "description": "A new member was accepted to the chat by an administrator",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatDeleteMember",
            "description": "A chat member was deleted",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier of the deleted chat member",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatUpgradeTo",
            "description": "A basic group was upgraded to a supergroup and was deactivated as the result",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup to which the basic group was upgraded",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatUpgradeFrom",
            "description": "A supergroup has been created from a basic group",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the newly created supergroup",
                    "required": true
                },
                {
                    "name": "basic_group_id",
                    "type": "int53",
                    "description": "The identifier of the original basic group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePinMessage",
            "description": "A message has been pinned",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the pinned message, can be an identifier of a deleted message or 0",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageScreenshotTaken",
            "description": "A screenshot of a message in the chat has been taken",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatSetBackground",
            "description": "A new background was set in the chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "old_background_message_id",
                    "type": "int53",
                    "description": "Identifier of the message with a previously set same background; 0 if none. Can be an identifier of a deleted message",
                    "required": true
                },
                {
                    "name": "background",
                    "type": "chatBackground",
                    "description": "The new background",
                    "required": true
                },
                {
                    "name": "only_for_self",
                    "type": "Bool",
                    "description": "True, if the background was set only for self",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatSetTheme",
            "description": "A theme in the chat has been changed",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "If non-empty, name of a new theme, set for the chat. Otherwise, chat theme was reset to the default one",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatSetMessageAutoDeleteTime",
            "description": "The auto-delete or self-destruct timer for messages in the chat has been changed",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "message_auto_delete_time",
                    "type": "int32",
                    "description": "New value auto-delete or self-destruct time, in seconds; 0 if disabled",
                    "required": true
                },
                {
                    "name": "from_user_id",
                    "type": "int53",
                    "description": "If not 0, a user identifier, which default setting was automatically applied",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatBoost",
            "description": "The chat was boosted by the sender of the message",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "boost_count",
                    "type": "int32",
                    "description": "Number of times the chat was boosted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageForumTopicCreated",
            "description": "A forum topic has been created",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the topic",
                    "required": true
                },
                {
                    "name": "icon",
                    "type": "forumTopicIcon",
                    "description": "Icon of the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageForumTopicEdited",
            "description": "A forum topic has been edited",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "If non-empty, the new name of the topic",
                    "required": false
                },
                {
                    "name": "edit_icon_custom_emoji_id",
                    "type": "Bool",
                    "description": "True, if icon's custom_emoji_id is changed",
                    "required": true
                },
                {
                    "name": "icon_custom_emoji_id",
                    "type": "int64",
                    "description": "New unique identifier of the custom emoji shown on the topic icon; 0 if none. Must be ignored if edit_icon_custom_emoji_id is false",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageForumTopicIsClosedToggled",
            "description": "A forum topic has been closed or opened",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "is_closed",
                    "type": "Bool",
                    "description": "True, if the topic was closed; otherwise, the topic was reopened",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageForumTopicIsHiddenToggled",
            "description": "A General forum topic has been hidden or unhidden",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "is_hidden",
                    "type": "Bool",
                    "description": "True, if the topic was hidden; otherwise, the topic was unhidden",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSuggestProfilePhoto",
            "description": "A profile photo was suggested to a user in a private chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "chatPhoto",
                    "description": "The suggested chat photo. Use the method setProfilePhoto with inputChatPhotoPrevious to apply the photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageCustomServiceAction",
            "description": "A non-standard action has happened in the chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Message text to be shown in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageGameScore",
            "description": "A new high score was achieved in a game",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "game_message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the game, can be an identifier of a deleted message",
                    "required": true
                },
                {
                    "name": "game_id",
                    "type": "int64",
                    "description": "Identifier of the game; may be different from the games presented in the message with the game",
                    "required": true
                },
                {
                    "name": "score",
                    "type": "int32",
                    "description": "New score",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePaymentSuccessful",
            "description": "A payment has been completed",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "invoice_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat, containing the corresponding invoice message",
                    "required": true
                },
                {
                    "name": "invoice_message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the corresponding invoice; can be 0 or an identifier of a deleted message",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the price of the product",
                    "required": true
                },
                {
                    "name": "total_amount",
                    "type": "int53",
                    "description": "Total price for the product, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "is_recurring",
                    "type": "Bool",
                    "description": "True, if this is a recurring payment",
                    "required": true
                },
                {
                    "name": "is_first_recurring",
                    "type": "Bool",
                    "description": "True, if this is the first recurring payment",
                    "required": true
                },
                {
                    "name": "invoice_name",
                    "type": "string",
                    "description": "Name of the invoice; may be empty if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePaymentSuccessfulBot",
            "description": "A payment has been completed; for bots only",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for price of the product",
                    "required": true
                },
                {
                    "name": "total_amount",
                    "type": "int53",
                    "description": "Total price for the product, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "is_recurring",
                    "type": "Bool",
                    "description": "True, if this is a recurring payment",
                    "required": true
                },
                {
                    "name": "is_first_recurring",
                    "type": "Bool",
                    "description": "True, if this is the first recurring payment",
                    "required": true
                },
                {
                    "name": "invoice_payload",
                    "type": "bytes",
                    "description": "Invoice payload",
                    "required": true
                },
                {
                    "name": "shipping_option_id",
                    "type": "string",
                    "description": "Identifier of the shipping option chosen by the user; may be empty if not applicable",
                    "required": false
                },
                {
                    "name": "order_info",
                    "type": "orderInfo",
                    "description": "Information about the order; may be null",
                    "required": false
                },
                {
                    "name": "telegram_payment_charge_id",
                    "type": "string",
                    "description": "Telegram payment identifier",
                    "required": true
                },
                {
                    "name": "provider_payment_charge_id",
                    "type": "string",
                    "description": "Provider payment identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePaymentRefunded",
            "description": "A payment has been refunded",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "owner_id",
                    "type": "MessageSender",
                    "description": "Identifier of the previous owner of the Telegram Stars that refunds them",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the price of the product",
                    "required": true
                },
                {
                    "name": "total_amount",
                    "type": "int53",
                    "description": "Total price for the product, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "invoice_payload",
                    "type": "bytes",
                    "description": "Invoice payload; only for bots",
                    "required": true
                },
                {
                    "name": "telegram_payment_charge_id",
                    "type": "string",
                    "description": "Telegram payment identifier",
                    "required": true
                },
                {
                    "name": "provider_payment_charge_id",
                    "type": "string",
                    "description": "Provider payment identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageGiftedPremium",
            "description": "Telegram Premium was gifted to a user",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "gifter_user_id",
                    "type": "int53",
                    "description": "The identifier of a user that gifted Telegram Premium; 0 if the gift was anonymous or is outgoing",
                    "required": true
                },
                {
                    "name": "receiver_user_id",
                    "type": "int53",
                    "description": "The identifier of a user that received Telegram Premium; 0 if the gift is incoming",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the paid amount",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "cryptocurrency",
                    "type": "string",
                    "description": "Cryptocurrency used to pay for the gift; may be empty if none",
                    "required": false
                },
                {
                    "name": "cryptocurrency_amount",
                    "type": "int64",
                    "description": "The paid amount, in the smallest units of the cryptocurrency; 0 if none",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "A sticker to be shown in the message; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePremiumGiftCode",
            "description": "A Telegram Premium gift code was created for the user",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "creator_id",
                    "type": "MessageSender",
                    "description": "Identifier of a chat or a user that created the gift code; may be null if unknown",
                    "required": false
                },
                {
                    "name": "is_from_giveaway",
                    "type": "Bool",
                    "description": "True, if the gift code was created for a giveaway",
                    "required": true
                },
                {
                    "name": "is_unclaimed",
                    "type": "Bool",
                    "description": "True, if the winner for the corresponding Telegram Premium subscription wasn't chosen",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the paid amount; empty if unknown",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The paid amount, in the smallest units of the currency; 0 if unknown",
                    "required": true
                },
                {
                    "name": "cryptocurrency",
                    "type": "string",
                    "description": "Cryptocurrency used to pay for the gift; may be empty if none or unknown",
                    "required": false
                },
                {
                    "name": "cryptocurrency_amount",
                    "type": "int64",
                    "description": "The paid amount, in the smallest units of the cryptocurrency; 0 if unknown",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "A sticker to be shown in the message; may be null if unknown",
                    "required": false
                },
                {
                    "name": "code",
                    "type": "string",
                    "description": "The gift code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePremiumGiveawayCreated",
            "description": "A Telegram Premium giveaway was created for the chat. Use telegramPaymentPurposePremiumGiveaway or storePaymentPurposePremiumGiveaway to create a giveaway",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePremiumGiveaway",
            "description": "A Telegram Premium giveaway",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "parameters",
                    "type": "premiumGiveawayParameters",
                    "description": "Giveaway parameters",
                    "required": true
                },
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Number of users which will receive Telegram Premium subscription gift codes",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "A sticker to be shown in the message; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePremiumGiveawayCompleted",
            "description": "A Telegram Premium giveaway without public winners has been completed for the chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "giveaway_message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the giveaway; can be 0 if the message was deleted",
                    "required": true
                },
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Number of winners in the giveaway",
                    "required": true
                },
                {
                    "name": "unclaimed_prize_count",
                    "type": "int32",
                    "description": "Number of undistributed prizes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePremiumGiveawayWinners",
            "description": "A Telegram Premium giveaway with public winners has been completed for the chat",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "boosted_chat_id",
                    "type": "int53",
                    "description": "Identifier of the channel chat, which was automatically boosted by the winners of the giveaway for duration of the Premium subscription",
                    "required": true
                },
                {
                    "name": "giveaway_message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the giveaway in the boosted chat",
                    "required": true
                },
                {
                    "name": "additional_chat_count",
                    "type": "int32",
                    "description": "Number of other chats that participated in the giveaway",
                    "required": true
                },
                {
                    "name": "actual_winners_selection_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the winners were selected. May be bigger than winners selection date specified in parameters of the giveaway",
                    "required": true
                },
                {
                    "name": "only_new_members",
                    "type": "Bool",
                    "description": "True, if only new members of the chats were eligible for the giveaway",
                    "required": true
                },
                {
                    "name": "was_refunded",
                    "type": "Bool",
                    "description": "True, if the giveaway was canceled and was fully refunded",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation",
                    "required": true
                },
                {
                    "name": "prize_description",
                    "type": "string",
                    "description": "Additional description of the giveaway prize",
                    "required": true
                },
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Total number of winners in the giveaway",
                    "required": true
                },
                {
                    "name": "winner_user_ids",
                    "type": "vector<int53>",
                    "description": "Up to 100 user identifiers of the winners of the giveaway",
                    "required": true
                },
                {
                    "name": "unclaimed_prize_count",
                    "type": "int32",
                    "description": "Number of undistributed prizes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageGiftedStars",
            "description": "Telegram Stars were gifted to a user",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "gifter_user_id",
                    "type": "int53",
                    "description": "The identifier of a user that gifted Telegram Stars; 0 if the gift was anonymous or is outgoing",
                    "required": true
                },
                {
                    "name": "receiver_user_id",
                    "type": "int53",
                    "description": "The identifier of a user that received Telegram Stars; 0 if the gift is incoming",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "Currency for the paid amount",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "The paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "cryptocurrency",
                    "type": "string",
                    "description": "Cryptocurrency used to pay for the gift; may be empty if none",
                    "required": false
                },
                {
                    "name": "cryptocurrency_amount",
                    "type": "int64",
                    "description": "The paid amount, in the smallest units of the cryptocurrency; 0 if none",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars that were gifted",
                    "required": true
                },
                {
                    "name": "transaction_id",
                    "type": "string",
                    "description": "Identifier of the transaction for Telegram Stars purchase; for receiver only",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "A sticker to be shown in the message; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageContactRegistered",
            "description": "A contact has registered with Telegram",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageUsersShared",
            "description": "The current user shared users, which were requested by the bot",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "users",
                    "type": "vector<sharedUser>",
                    "description": "The shared users",
                    "required": true
                },
                {
                    "name": "button_id",
                    "type": "int32",
                    "description": "Identifier of the keyboard button with the request",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageChatShared",
            "description": "The current user shared a chat, which was requested by the bot",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "chat",
                    "type": "sharedChat",
                    "description": "The shared chat",
                    "required": true
                },
                {
                    "name": "button_id",
                    "type": "int32",
                    "description": "Identifier of the keyboard button with the request",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageBotWriteAccessAllowed",
            "description": "The user allowed the bot to send messages",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "reason",
                    "type": "BotWriteAccessAllowReason",
                    "description": "The reason why the bot was allowed to write messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageWebAppDataSent",
            "description": "Data from a Web App has been sent to a bot",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "button_text",
                    "type": "string",
                    "description": "Text of the keyboardButtonTypeWebApp button, which opened the Web App",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageWebAppDataReceived",
            "description": "Data from a Web App has been received; for bots only",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "button_text",
                    "type": "string",
                    "description": "Text of the keyboardButtonTypeWebApp button, which opened the Web App",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "The data",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePassportDataSent",
            "description": "Telegram Passport data has been sent to a bot",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "types",
                    "type": "vector<PassportElementType>",
                    "description": "List of Telegram Passport element types sent",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messagePassportDataReceived",
            "description": "Telegram Passport data has been received; for bots only",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "elements",
                    "type": "vector<encryptedPassportElement>",
                    "description": "List of received Telegram Passport elements",
                    "required": true
                },
                {
                    "name": "credentials",
                    "type": "encryptedCredentials",
                    "description": "Encrypted data credentials",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageProximityAlertTriggered",
            "description": "A user in the chat came within proximity alert range",
            "type": "MessageContent",
            "annotations": [
                {
                    "name": "traveler_id",
                    "type": "MessageSender",
                    "description": "The identifier of a user or chat that triggered the proximity alert",
                    "required": true
                },
                {
                    "name": "watcher_id",
                    "type": "MessageSender",
                    "description": "The identifier of a user or chat that subscribed for the proximity alert",
                    "required": true
                },
                {
                    "name": "distance",
                    "type": "int32",
                    "description": "The distance between the users",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageUnsupported",
            "description": "A message content that is not supported in the current TDLib version",
            "type": "MessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeMention",
            "description": "A mention of a user, a supergroup, or a channel by their username",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeHashtag",
            "description": "A hashtag text, beginning with '#'",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeCashtag",
            "description": "A cashtag text, beginning with '$' and consisting of capital English letters (e.g., '$USD')",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeBotCommand",
            "description": "A bot command, beginning with '/'",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeUrl",
            "description": "An HTTP URL",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeEmailAddress",
            "description": "An email address",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypePhoneNumber",
            "description": "A phone number",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeBankCardNumber",
            "description": "A bank card number. The getBankCardInfo method can be used to get information about the bank card",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeBold",
            "description": "A bold text",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeItalic",
            "description": "An italic text",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeUnderline",
            "description": "An underlined text",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeStrikethrough",
            "description": "A strikethrough text",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeSpoiler",
            "description": "A spoiler text",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeCode",
            "description": "Text that must be formatted as if inside a code HTML tag",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypePre",
            "description": "Text that must be formatted as if inside a pre HTML tag",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypePreCode",
            "description": "Text that must be formatted as if inside pre, and code HTML tags",
            "type": "TextEntityType",
            "annotations": [
                {
                    "name": "language",
                    "type": "string",
                    "description": "Programming language of the code; as defined by the sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeBlockQuote",
            "description": "Text that must be formatted as if inside a blockquote HTML tag; not supported in secret chats",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeExpandableBlockQuote",
            "description": "Text that must be formatted as if inside a blockquote HTML tag and collapsed by default to 3 lines with the ability to show full text; not supported in secret chats",
            "type": "TextEntityType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeTextUrl",
            "description": "A text description shown instead of a raw URL",
            "type": "TextEntityType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "HTTP or tg:// URL to be opened when the link is clicked",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeMentionName",
            "description": "A text shows instead of a raw mention of the user (e.g., when the user has no username)",
            "type": "TextEntityType",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the mentioned user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeCustomEmoji",
            "description": "A custom emoji. The text behind a custom emoji must be an emoji. Only premium users can use premium custom emoji",
            "type": "TextEntityType",
            "annotations": [
                {
                    "name": "custom_emoji_id",
                    "type": "int64",
                    "description": "Unique identifier of the custom emoji",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textEntityTypeMediaTimestamp",
            "description": "A media timestamp",
            "type": "TextEntityType",
            "annotations": [
                {
                    "name": "media_timestamp",
                    "type": "int32",
                    "description": "Timestamp from which a video/audio/video note/voice note/story playing must start, in seconds. The media can be in the content or the link preview of the current message, or in the same places in the replied message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputThumbnail",
            "description": "A thumbnail to be sent along with a file; must be in JPEG or WEBP format for stickers, and less than 200 KB in size",
            "type": "InputThumbnail",
            "annotations": [
                {
                    "name": "thumbnail",
                    "type": "InputFile",
                    "description": "Thumbnail file to send. Sending thumbnails by file_id is currently not supported",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Thumbnail width, usually shouldn't exceed 320. Use 0 if unknown",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Thumbnail height, usually shouldn't exceed 320. Use 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPaidMediaTypePhoto",
            "description": "The media is a photo. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20",
            "type": "InputPaidMediaType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPaidMediaTypeVideo",
            "description": "The media is a video",
            "type": "InputPaidMediaType",
            "annotations": [
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds",
                    "required": true
                },
                {
                    "name": "supports_streaming",
                    "type": "Bool",
                    "description": "True, if the video is supposed to be streamed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputPaidMedia",
            "description": "Describes a paid media to be sent",
            "type": "InputPaidMedia",
            "annotations": [
                {
                    "name": "type",
                    "type": "InputPaidMediaType",
                    "description": "Type of the media",
                    "required": true
                },
                {
                    "name": "media",
                    "type": "InputFile",
                    "description": "Photo or video to be sent",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Media thumbnail; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "added_sticker_file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the stickers added to the media, if applicable",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Media width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Media height",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSchedulingStateSendAtDate",
            "description": "The message will be sent at the specified date",
            "type": "MessageSchedulingState",
            "annotations": [
                {
                    "name": "send_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the message will be sent. The date must be within 367 days in the future",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSchedulingStateSendWhenOnline",
            "description": "The message will be sent when the other user is online. Applicable to private chats only and when the exact online status of the other user is known",
            "type": "MessageSchedulingState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSelfDestructTypeTimer",
            "description": "The message will be self-destructed in the specified time after its content was opened",
            "type": "MessageSelfDestructType",
            "annotations": [
                {
                    "name": "self_destruct_time",
                    "type": "int32",
                    "description": "The message's self-destruct time, in seconds; must be between 0 and 60 in private chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSelfDestructTypeImmediately",
            "description": "The message can be opened only once and will be self-destructed once closed",
            "type": "MessageSelfDestructType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageSendOptions",
            "description": "Options to be used when a message is sent",
            "type": "MessageSendOptions",
            "annotations": [
                {
                    "name": "disable_notification",
                    "type": "Bool",
                    "description": "Pass true to disable notification for the message",
                    "required": true
                },
                {
                    "name": "from_background",
                    "type": "Bool",
                    "description": "Pass true if the message is sent from the background",
                    "required": true
                },
                {
                    "name": "protect_content",
                    "type": "Bool",
                    "description": "Pass true if the content of the message must be protected from forwarding and saving; for bots only",
                    "required": true
                },
                {
                    "name": "update_order_of_installed_sticker_sets",
                    "type": "Bool",
                    "description": "Pass true if the user explicitly chosen a sticker or a custom emoji from an installed sticker set; applicable only to sendMessage and sendMessageAlbum",
                    "required": true
                },
                {
                    "name": "scheduling_state",
                    "type": "MessageSchedulingState",
                    "description": "Message scheduling state; pass null to send message immediately. Messages sent to a secret chat, live location messages and self-destructing messages can't be scheduled",
                    "required": false
                },
                {
                    "name": "effect_id",
                    "type": "int64",
                    "description": "Identifier of the effect to apply to the message; pass 0 if none; applicable only to sendMessage and sendMessageAlbum in private chats",
                    "required": true
                },
                {
                    "name": "sending_id",
                    "type": "int32",
                    "description": "Non-persistent identifier, which will be returned back in messageSendingStatePending object and can be used to match sent messages and corresponding updateNewMessage updates",
                    "required": true
                },
                {
                    "name": "only_preview",
                    "type": "Bool",
                    "description": "Pass true to get a fake message instead of actually sending them",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageCopyOptions",
            "description": "Options to be used when a message content is copied without reference to the original sender. Service messages, messages with messageInvoice, messagePaidMedia, messagePremiumGiveaway, or messagePremiumGiveawayWinners content can't be copied",
            "type": "MessageCopyOptions",
            "annotations": [
                {
                    "name": "send_copy",
                    "type": "Bool",
                    "description": "True, if content of the message needs to be copied without reference to the original sender. Always true if the message is forwarded to a secret chat or is local",
                    "required": true
                },
                {
                    "name": "replace_caption",
                    "type": "Bool",
                    "description": "True, if media caption of the message copy needs to be replaced. Ignored if send_copy is false",
                    "required": true
                },
                {
                    "name": "new_caption",
                    "type": "formattedText",
                    "description": "New message caption; pass null to copy message without caption. Ignored if replace_caption is false",
                    "required": false
                },
                {
                    "name": "new_show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if new caption must be shown above the animation; otherwise, new caption must be shown below the animation; not supported in secret chats. Ignored if replace_caption is false",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageText",
            "description": "A text message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Formatted text to be sent; 0-getOption('message_text_length_max') characters. Only Bold, Italic, Underline, Strikethrough, Spoiler, CustomEmoji, BlockQuote, ExpandableBlockQuote,",
                    "required": true
                },
                {
                    "name": "link_preview_options",
                    "type": "linkPreviewOptions",
                    "description": "Options to be used for generation of a link preview; may be null if none; pass null to use default link preview options",
                    "required": false
                },
                {
                    "name": "clear_draft",
                    "type": "Bool",
                    "description": "True, if a chat message draft must be deleted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageAnimation",
            "description": "An animation message (GIF-style).",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "animation",
                    "type": "InputFile",
                    "description": "Animation file to be sent",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Animation thumbnail; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "added_sticker_file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the stickers added to the animation, if applicable",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the animation, in seconds",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Width of the animation; may be replaced by the server",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Height of the animation; may be replaced by the server",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Animation caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the animation; otherwise, the caption must be shown below the animation; not supported in secret chats",
                    "required": true
                },
                {
                    "name": "has_spoiler",
                    "type": "Bool",
                    "description": "True, if the animation preview must be covered by a spoiler animation; not supported in secret chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageAudio",
            "description": "An audio message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "audio",
                    "type": "InputFile",
                    "description": "Audio file to be sent",
                    "required": true
                },
                {
                    "name": "album_cover_thumbnail",
                    "type": "inputThumbnail",
                    "description": "Thumbnail of the cover for the album; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the audio, in seconds; may be replaced by the server",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the audio; 0-64 characters; may be replaced by the server",
                    "required": true
                },
                {
                    "name": "performer",
                    "type": "string",
                    "description": "Performer of the audio; 0-64 characters, may be replaced by the server",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Audio caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageDocument",
            "description": "A document message (general file)",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "document",
                    "type": "InputFile",
                    "description": "Document to be sent",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Document thumbnail; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "disable_content_type_detection",
                    "type": "Bool",
                    "description": "Pass true to disable automatic file type detection and send the document as a file. Always true for files sent to secret chats",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Document caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessagePaidMedia",
            "description": "A message with paid media; can be used only in channel chats with supergroupFullInfo.has_paid_media_allowed",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The number of Telegram Stars that must be paid to see the media; 1-getOption('paid_media_message_star_count_max')",
                    "required": true
                },
                {
                    "name": "paid_media",
                    "type": "vector<inputPaidMedia>",
                    "description": "The content of the paid media",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Message caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the video; otherwise, the caption must be shown below the video; not supported in secret chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessagePhoto",
            "description": "A photo message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "InputFile",
                    "description": "Photo to send. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Photo thumbnail to be sent; pass null to skip thumbnail uploading. The thumbnail is sent to the other party only in secret chats",
                    "required": false
                },
                {
                    "name": "added_sticker_file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the stickers added to the photo, if applicable",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Photo width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Photo height",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Photo caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the photo; otherwise, the caption must be shown below the photo; not supported in secret chats",
                    "required": true
                },
                {
                    "name": "self_destruct_type",
                    "type": "MessageSelfDestructType",
                    "description": "Photo self-destruct type; pass null if none; private chats only",
                    "required": false
                },
                {
                    "name": "has_spoiler",
                    "type": "Bool",
                    "description": "True, if the photo preview must be covered by a spoiler animation; not supported in secret chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageSticker",
            "description": "A sticker message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "Sticker to be sent",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Sticker thumbnail; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Sticker width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Sticker height",
                    "required": true
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji used to choose the sticker",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageVideo",
            "description": "A video message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "video",
                    "type": "InputFile",
                    "description": "Video to be sent",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Video thumbnail; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "added_sticker_file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the stickers added to the video, if applicable",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Video width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Video height",
                    "required": true
                },
                {
                    "name": "supports_streaming",
                    "type": "Bool",
                    "description": "True, if the video is supposed to be streamed",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Video caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "show_caption_above_media",
                    "type": "Bool",
                    "description": "True, if the caption must be shown above the video; otherwise, the caption must be shown below the video; not supported in secret chats",
                    "required": true
                },
                {
                    "name": "self_destruct_type",
                    "type": "MessageSelfDestructType",
                    "description": "Video self-destruct type; pass null if none; private chats only",
                    "required": false
                },
                {
                    "name": "has_spoiler",
                    "type": "Bool",
                    "description": "True, if the video preview must be covered by a spoiler animation; not supported in secret chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageVideoNote",
            "description": "A video note message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "video_note",
                    "type": "InputFile",
                    "description": "Video note to be sent",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "inputThumbnail",
                    "description": "Video thumbnail; may be null if empty; pass null to skip thumbnail uploading",
                    "required": false
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds; 0-60",
                    "required": true
                },
                {
                    "name": "length",
                    "type": "int32",
                    "description": "Video width and height; must be positive and not greater than 640",
                    "required": true
                },
                {
                    "name": "self_destruct_type",
                    "type": "MessageSelfDestructType",
                    "description": "Video note self-destruct type; may be null if none; pass null if none; private chats only",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageVoiceNote",
            "description": "A voice note message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "voice_note",
                    "type": "InputFile",
                    "description": "Voice note to be sent. The voice note must be encoded with the Opus codec and stored inside an OGG container with a single audio channel, or be in MP3 or M4A format as regular audio",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the voice note, in seconds",
                    "required": true
                },
                {
                    "name": "waveform",
                    "type": "bytes",
                    "description": "Waveform representation of the voice note in 5-bit format",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Voice note caption; may be null if empty; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                },
                {
                    "name": "self_destruct_type",
                    "type": "MessageSelfDestructType",
                    "description": "Voice note self-destruct type; may be null if none; pass null if none; private chats only",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageLocation",
            "description": "A message with a location",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "Location to be sent",
                    "required": true
                },
                {
                    "name": "live_period",
                    "type": "int32",
                    "description": "Period for which the location can be updated, in seconds; must be between 60 and 86400 for a temporary live location, 0x7FFFFFFF for permanent live location, and 0 otherwise",
                    "required": true
                },
                {
                    "name": "heading",
                    "type": "int32",
                    "description": "For live locations, a direction in which the location moves, in degrees; 1-360. Pass 0 if unknown",
                    "required": true
                },
                {
                    "name": "proximity_alert_radius",
                    "type": "int32",
                    "description": "For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled. Can't be enabled in channels and Saved Messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageVenue",
            "description": "A message with information about a venue",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "venue",
                    "type": "venue",
                    "description": "Venue to send",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageContact",
            "description": "A message containing a user contact",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "contact",
                    "type": "contact",
                    "description": "Contact to send",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageDice",
            "description": "A dice message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji on which the dice throw animation is based",
                    "required": true
                },
                {
                    "name": "clear_draft",
                    "type": "Bool",
                    "description": "True, if the chat message draft must be deleted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageGame",
            "description": "A message with a game; not supported for channels or secret chats",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the bot that owns the game",
                    "required": true
                },
                {
                    "name": "game_short_name",
                    "type": "string",
                    "description": "Short name of the game",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageInvoice",
            "description": "A message with an invoice; can be used only by bots",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "invoice",
                    "type": "invoice",
                    "description": "Invoice",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Product title; 1-32 characters",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Product description; 0-255 characters",
                    "required": true
                },
                {
                    "name": "photo_url",
                    "type": "string",
                    "description": "Product photo URL; optional",
                    "required": true
                },
                {
                    "name": "photo_size",
                    "type": "int32",
                    "description": "Product photo size",
                    "required": true
                },
                {
                    "name": "photo_width",
                    "type": "int32",
                    "description": "Product photo width",
                    "required": true
                },
                {
                    "name": "photo_height",
                    "type": "int32",
                    "description": "Product photo height",
                    "required": true
                },
                {
                    "name": "payload",
                    "type": "bytes",
                    "description": "The invoice payload",
                    "required": true
                },
                {
                    "name": "provider_token",
                    "type": "string",
                    "description": "Payment provider token; may be empty for payments in Telegram Stars",
                    "required": false
                },
                {
                    "name": "provider_data",
                    "type": "string",
                    "description": "JSON-encoded data about the invoice, which will be shared with the payment provider",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "Unique invoice bot deep link parameter for the generation of this invoice. If empty, it would be possible to pay directly from forwards of the invoice message",
                    "required": true
                },
                {
                    "name": "paid_media",
                    "type": "inputPaidMedia",
                    "description": "The content of paid media attached to the invoice; pass null if none",
                    "required": false
                },
                {
                    "name": "paid_media_caption",
                    "type": "formattedText",
                    "description": "Paid media caption; pass null to use an empty caption; 0-getOption('message_caption_length_max') characters",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessagePoll",
            "description": "A message with a poll. Polls can't be sent to secret chats. Polls can be sent only to a private chat with a bot",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "question",
                    "type": "formattedText",
                    "description": "Poll question; 1-255 characters (up to 300 characters for bots). Only custom emoji entities are allowed to be added and only by Premium users",
                    "required": true
                },
                {
                    "name": "options",
                    "type": "vector<formattedText>",
                    "description": "List of poll answer options, 2-10 strings 1-100 characters each. Only custom emoji entities are allowed to be added and only by Premium users",
                    "required": true
                },
                {
                    "name": "is_anonymous",
                    "type": "Bool",
                    "description": "True, if the poll voters are anonymous. Non-anonymous polls can't be sent or forwarded to channels",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "PollType",
                    "description": "Type of the poll",
                    "required": true
                },
                {
                    "name": "open_period",
                    "type": "int32",
                    "description": "Amount of time the poll will be active after creation, in seconds; for bots only",
                    "required": true
                },
                {
                    "name": "close_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the poll will automatically be closed; for bots only",
                    "required": true
                },
                {
                    "name": "is_closed",
                    "type": "Bool",
                    "description": "True, if the poll needs to be sent already closed; for bots only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageStory",
            "description": "A message with a forwarded story. Stories can't be sent to secret chats. A story can be forwarded only if story.can_be_forwarded",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "story_sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputMessageForwarded",
            "description": "A forwarded message",
            "type": "InputMessageContent",
            "annotations": [
                {
                    "name": "from_chat_id",
                    "type": "int53",
                    "description": "Identifier for the chat this forwarded message came from",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message to forward. A message can be forwarded only if messageProperties.can_be_forwarded",
                    "required": true
                },
                {
                    "name": "in_game_share",
                    "type": "Bool",
                    "description": "True, if a game message is being shared from a launched game; applies only to game messages",
                    "required": true
                },
                {
                    "name": "copy_options",
                    "type": "messageCopyOptions",
                    "description": "Options to be used to copy content of the message without reference to the original sender; pass null to forward the message as usual",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageProperties",
            "description": "Contains properties of a message and describes actions that can be done with the message right now",
            "type": "MessageProperties",
            "annotations": [
                {
                    "name": "can_be_deleted_only_for_self",
                    "type": "Bool",
                    "description": "True, if the message can be deleted only for the current user while other users will continue to see it using the method deleteMessages with revoke == false",
                    "required": true
                },
                {
                    "name": "can_be_deleted_for_all_users",
                    "type": "Bool",
                    "description": "True, if the message can be deleted for all users using the method deleteMessages with revoke == true",
                    "required": true
                },
                {
                    "name": "can_be_edited",
                    "type": "Bool",
                    "description": "True, if the message can be edited using the methods editMessageText, editMessageMedia, editMessageCaption, or editMessageReplyMarkup.",
                    "required": true
                },
                {
                    "name": "can_be_forwarded",
                    "type": "Bool",
                    "description": "True, if the message can be forwarded using inputMessageForwarded or forwardMessages",
                    "required": true
                },
                {
                    "name": "can_be_paid",
                    "type": "Bool",
                    "description": "True, if the message can be paid using inputInvoiceMessage",
                    "required": true
                },
                {
                    "name": "can_be_pinned",
                    "type": "Bool",
                    "description": "True, if the message can be pinned or unpinned in the chat using pinChatMessage or unpinChatMessage",
                    "required": true
                },
                {
                    "name": "can_be_replied",
                    "type": "Bool",
                    "description": "True, if the message can be replied in the same chat and forum topic using inputMessageReplyToMessage",
                    "required": true
                },
                {
                    "name": "can_be_replied_in_another_chat",
                    "type": "Bool",
                    "description": "True, if the message can be replied in another chat or forum topic using inputMessageReplyToExternalMessage",
                    "required": true
                },
                {
                    "name": "can_be_saved",
                    "type": "Bool",
                    "description": "True, if content of the message can be saved locally or copied using inputMessageForwarded or forwardMessages with copy options",
                    "required": true
                },
                {
                    "name": "can_be_shared_in_story",
                    "type": "Bool",
                    "description": "True, if the message can be shared in a story using inputStoryAreaTypeMessage",
                    "required": true
                },
                {
                    "name": "can_edit_scheduling_state",
                    "type": "Bool",
                    "description": "True, if scheduling state of the message can be edited",
                    "required": true
                },
                {
                    "name": "can_get_embedding_code",
                    "type": "Bool",
                    "description": "True, if code for message embedding can be received using getMessageEmbeddingCode",
                    "required": true
                },
                {
                    "name": "can_get_link",
                    "type": "Bool",
                    "description": "True, if a link can be generated for the message using getMessageLink",
                    "required": true
                },
                {
                    "name": "can_get_media_timestamp_links",
                    "type": "Bool",
                    "description": "True, if media timestamp links can be generated for media timestamp entities in the message text, caption or link preview description using getMessageLink",
                    "required": true
                },
                {
                    "name": "can_get_message_thread",
                    "type": "Bool",
                    "description": "True, if information about the message thread is available through getMessageThread and getMessageThreadHistory",
                    "required": true
                },
                {
                    "name": "can_get_read_date",
                    "type": "Bool",
                    "description": "True, if read date of the message can be received through getMessageReadDate",
                    "required": true
                },
                {
                    "name": "can_get_statistics",
                    "type": "Bool",
                    "description": "True, if message statistics are available through getMessageStatistics and message forwards can be received using getMessagePublicForwards",
                    "required": true
                },
                {
                    "name": "can_get_viewers",
                    "type": "Bool",
                    "description": "True, if chat members already viewed the message can be received through getMessageViewers",
                    "required": true
                },
                {
                    "name": "can_recognize_speech",
                    "type": "Bool",
                    "description": "True, if speech can be recognized for the message through recognizeSpeech",
                    "required": true
                },
                {
                    "name": "can_report_chat",
                    "type": "Bool",
                    "description": "True, if the message can be reported using reportChat",
                    "required": true
                },
                {
                    "name": "can_report_reactions",
                    "type": "Bool",
                    "description": "True, if reactions on the message can be reported through reportMessageReactions",
                    "required": true
                },
                {
                    "name": "can_report_supergroup_spam",
                    "type": "Bool",
                    "description": "True, if the message can be reported using reportSupergroupSpam",
                    "required": true
                },
                {
                    "name": "can_set_fact_check",
                    "type": "Bool",
                    "description": "True, if fact check for the message can be changed through setMessageFactCheck",
                    "required": true
                },
                {
                    "name": "need_show_statistics",
                    "type": "Bool",
                    "description": "True, if message statistics must be available from context menu of the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterEmpty",
            "description": "Returns all found messages, no filter is applied",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterAnimation",
            "description": "Returns only animation messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterAudio",
            "description": "Returns only audio messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterDocument",
            "description": "Returns only document messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterPhoto",
            "description": "Returns only photo messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterVideo",
            "description": "Returns only video messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterVoiceNote",
            "description": "Returns only voice note messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterPhotoAndVideo",
            "description": "Returns only photo and video messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterUrl",
            "description": "Returns only messages containing URLs",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterChatPhoto",
            "description": "Returns only messages containing chat photos",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterVideoNote",
            "description": "Returns only video note messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterVoiceAndVideoNote",
            "description": "Returns only voice and video note messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterMention",
            "description": "Returns only messages with mentions of the current user, or messages that are replies to their messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterUnreadMention",
            "description": "Returns only messages with unread mentions of the current user, or messages that are replies to their messages. When using this filter the results can't be additionally filtered by a query, a message thread or by the sending user",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterUnreadReaction",
            "description": "Returns only messages with unread reactions for the current user. When using this filter the results can't be additionally filtered by a query, a message thread or by the sending user",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterFailedToSend",
            "description": "Returns only failed to send messages. This filter can be used only if the message database is used",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "searchMessagesFilterPinned",
            "description": "Returns only pinned messages",
            "type": "SearchMessagesFilter",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionTyping",
            "description": "The user is typing a message",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionRecordingVideo",
            "description": "The user is recording a video",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionUploadingVideo",
            "description": "The user is uploading a video",
            "type": "ChatAction",
            "annotations": [
                {
                    "name": "progress",
                    "type": "int32",
                    "description": "Upload progress, as a percentage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionRecordingVoiceNote",
            "description": "The user is recording a voice note",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionUploadingVoiceNote",
            "description": "The user is uploading a voice note",
            "type": "ChatAction",
            "annotations": [
                {
                    "name": "progress",
                    "type": "int32",
                    "description": "Upload progress, as a percentage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionUploadingPhoto",
            "description": "The user is uploading a photo",
            "type": "ChatAction",
            "annotations": [
                {
                    "name": "progress",
                    "type": "int32",
                    "description": "Upload progress, as a percentage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionUploadingDocument",
            "description": "The user is uploading a document",
            "type": "ChatAction",
            "annotations": [
                {
                    "name": "progress",
                    "type": "int32",
                    "description": "Upload progress, as a percentage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionChoosingSticker",
            "description": "The user is picking a sticker to send",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionChoosingLocation",
            "description": "The user is picking a location or venue to send",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionChoosingContact",
            "description": "The user is picking a contact to send",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionStartPlayingGame",
            "description": "The user has started to play a game",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionRecordingVideoNote",
            "description": "The user is recording a video note",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionUploadingVideoNote",
            "description": "The user is uploading a video note",
            "type": "ChatAction",
            "annotations": [
                {
                    "name": "progress",
                    "type": "int32",
                    "description": "Upload progress, as a percentage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionWatchingAnimations",
            "description": "The user is watching animations sent by the other party by clicking on an animated emoji",
            "type": "ChatAction",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "The animated emoji",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActionCancel",
            "description": "The user has canceled the previous action",
            "type": "ChatAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userStatusEmpty",
            "description": "The user's status has never been changed",
            "type": "UserStatus",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userStatusOnline",
            "description": "The user is online",
            "type": "UserStatus",
            "annotations": [
                {
                    "name": "expires",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user's online status will expire",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userStatusOffline",
            "description": "The user is offline",
            "type": "UserStatus",
            "annotations": [
                {
                    "name": "was_online",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user was last online",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userStatusRecently",
            "description": "The user was online recently",
            "type": "UserStatus",
            "annotations": [
                {
                    "name": "by_my_privacy_settings",
                    "type": "Bool",
                    "description": "Exact user's status is hidden because the current user enabled userPrivacySettingShowStatus privacy setting for the user and has no Telegram Premium",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userStatusLastWeek",
            "description": "The user is offline, but was online last week",
            "type": "UserStatus",
            "annotations": [
                {
                    "name": "by_my_privacy_settings",
                    "type": "Bool",
                    "description": "Exact user's status is hidden because the current user enabled userPrivacySettingShowStatus privacy setting for the user and has no Telegram Premium",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userStatusLastMonth",
            "description": "The user is offline, but was online last month",
            "type": "UserStatus",
            "annotations": [
                {
                    "name": "by_my_privacy_settings",
                    "type": "Bool",
                    "description": "Exact user's status is hidden because the current user enabled userPrivacySettingShowStatus privacy setting for the user and has no Telegram Premium",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiKeyword",
            "description": "Represents an emoji with its keyword",
            "type": "EmojiKeyword",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "The emoji",
                    "required": true
                },
                {
                    "name": "keyword",
                    "type": "string",
                    "description": "The keyword",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiKeywords",
            "description": "Represents a list of emojis with their keywords",
            "type": "EmojiKeywords",
            "annotations": [
                {
                    "name": "emoji_keywords",
                    "type": "vector<emojiKeyword>",
                    "description": "List of emojis with their keywords",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickers",
            "description": "Represents a list of stickers",
            "type": "Stickers",
            "annotations": [
                {
                    "name": "stickers",
                    "type": "vector<sticker>",
                    "description": "List of stickers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojis",
            "description": "Represents a list of emojis",
            "type": "Emojis",
            "annotations": [
                {
                    "name": "emojis",
                    "type": "vector<string>",
                    "description": "List of emojis",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerSet",
            "description": "Represents a sticker set",
            "type": "StickerSet",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Identifier of the sticker set",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the sticker set",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the sticker set",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Sticker set thumbnail in WEBP, TGS, or WEBM format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed",
                    "required": false
                },
                {
                    "name": "thumbnail_outline",
                    "type": "vector<closedVectorPath>",
                    "description": "Sticker set thumbnail's outline represented as a list of closed vector paths; may be empty. The coordinate system origin is in the upper-left corner",
                    "required": false
                },
                {
                    "name": "is_owned",
                    "type": "Bool",
                    "description": "True, if the sticker set is owned by the current user",
                    "required": true
                },
                {
                    "name": "is_installed",
                    "type": "Bool",
                    "description": "True, if the sticker set has been installed by the current user",
                    "required": true
                },
                {
                    "name": "is_archived",
                    "type": "Bool",
                    "description": "True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously",
                    "required": true
                },
                {
                    "name": "is_official",
                    "type": "Bool",
                    "description": "True, if the sticker set is official",
                    "required": true
                },
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the stickers in the set",
                    "required": true
                },
                {
                    "name": "needs_repainting",
                    "type": "Bool",
                    "description": "True, if stickers in the sticker set are custom emoji that must be repainted; for custom emoji sticker sets only",
                    "required": true
                },
                {
                    "name": "is_allowed_as_chat_emoji_status",
                    "type": "Bool",
                    "description": "True, if stickers in the sticker set are custom emoji that can be used as chat emoji status; for custom emoji sticker sets only",
                    "required": true
                },
                {
                    "name": "is_viewed",
                    "type": "Bool",
                    "description": "True for already viewed trending sticker sets",
                    "required": true
                },
                {
                    "name": "stickers",
                    "type": "vector<sticker>",
                    "description": "List of stickers in this set",
                    "required": true
                },
                {
                    "name": "emojis",
                    "type": "vector<emojis>",
                    "description": "A list of emojis corresponding to the stickers in the same order. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerSetInfo",
            "description": "Represents short information about a sticker set",
            "type": "StickerSetInfo",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Identifier of the sticker set",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the sticker set",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the sticker set",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Sticker set thumbnail in WEBP, TGS, or WEBM format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed",
                    "required": false
                },
                {
                    "name": "thumbnail_outline",
                    "type": "vector<closedVectorPath>",
                    "description": "Sticker set thumbnail's outline represented as a list of closed vector paths; may be empty. The coordinate system origin is in the upper-left corner",
                    "required": false
                },
                {
                    "name": "is_owned",
                    "type": "Bool",
                    "description": "True, if the sticker set is owned by the current user",
                    "required": true
                },
                {
                    "name": "is_installed",
                    "type": "Bool",
                    "description": "True, if the sticker set has been installed by the current user",
                    "required": true
                },
                {
                    "name": "is_archived",
                    "type": "Bool",
                    "description": "True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously",
                    "required": true
                },
                {
                    "name": "is_official",
                    "type": "Bool",
                    "description": "True, if the sticker set is official",
                    "required": true
                },
                {
                    "name": "sticker_type",
                    "type": "StickerType",
                    "description": "Type of the stickers in the set",
                    "required": true
                },
                {
                    "name": "needs_repainting",
                    "type": "Bool",
                    "description": "True, if stickers in the sticker set are custom emoji that must be repainted; for custom emoji sticker sets only",
                    "required": true
                },
                {
                    "name": "is_allowed_as_chat_emoji_status",
                    "type": "Bool",
                    "description": "True, if stickers in the sticker set are custom emoji that can be used as chat emoji status; for custom emoji sticker sets only",
                    "required": true
                },
                {
                    "name": "is_viewed",
                    "type": "Bool",
                    "description": "True for already viewed trending sticker sets",
                    "required": true
                },
                {
                    "name": "size",
                    "type": "int32",
                    "description": "Total number of stickers in the set",
                    "required": true
                },
                {
                    "name": "covers",
                    "type": "vector<sticker>",
                    "description": "Up to the first 5 stickers from the set, depending on the context. If the application needs more stickers the full sticker set needs to be requested",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stickerSets",
            "description": "Represents a list of sticker sets",
            "type": "StickerSets",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of sticker sets found",
                    "required": true
                },
                {
                    "name": "sets",
                    "type": "vector<stickerSetInfo>",
                    "description": "List of sticker sets",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "trendingStickerSets",
            "description": "Represents a list of trending sticker sets",
            "type": "TrendingStickerSets",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of trending sticker sets",
                    "required": true
                },
                {
                    "name": "sets",
                    "type": "vector<stickerSetInfo>",
                    "description": "List of trending sticker sets",
                    "required": true
                },
                {
                    "name": "is_premium",
                    "type": "Bool",
                    "description": "True, if the list contains sticker sets with premium stickers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategorySourceSearch",
            "description": "The category contains a list of similar emoji to search for in getStickers and searchStickers for stickers,",
            "type": "EmojiCategorySource",
            "annotations": [
                {
                    "name": "emojis",
                    "type": "vector<string>",
                    "description": "List of emojis to search for",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategorySourcePremium",
            "description": "The category contains premium stickers that must be found by getPremiumStickers",
            "type": "EmojiCategorySource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategory",
            "description": "Describes an emoji category",
            "type": "EmojiCategory",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the category",
                    "required": true
                },
                {
                    "name": "icon",
                    "type": "sticker",
                    "description": "Custom emoji sticker, which represents icon of the category",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "EmojiCategorySource",
                    "description": "Source of stickers for the emoji category",
                    "required": true
                },
                {
                    "name": "is_greeting",
                    "type": "Bool",
                    "description": "True, if the category must be shown first when choosing a sticker for the start page",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategories",
            "description": "Represents a list of emoji categories",
            "type": "EmojiCategories",
            "annotations": [
                {
                    "name": "categories",
                    "type": "vector<emojiCategory>",
                    "description": "List of categories",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategoryTypeDefault",
            "description": "The category must be used by default (e.g., for custom emoji or animation search)",
            "type": "EmojiCategoryType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategoryTypeRegularStickers",
            "description": "The category must be used by default for regular sticker selection. It may contain greeting emoji category and premium stickers",
            "type": "EmojiCategoryType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategoryTypeEmojiStatus",
            "description": "The category must be used for emoji status selection",
            "type": "EmojiCategoryType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiCategoryTypeChatPhoto",
            "description": "The category must be used for chat photo emoji selection",
            "type": "EmojiCategoryType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "currentWeather",
            "description": "Describes the current weather",
            "type": "CurrentWeather",
            "annotations": [
                {
                    "name": "temperature",
                    "type": "double",
                    "description": "Temperature, in degree Celsius",
                    "required": true
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji representing the weather",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaPosition",
            "description": "Describes position of a clickable rectangle area on a story media",
            "type": "StoryAreaPosition",
            "annotations": [
                {
                    "name": "x_percentage",
                    "type": "double",
                    "description": "The abscissa of the rectangle's center, as a percentage of the media width",
                    "required": true
                },
                {
                    "name": "y_percentage",
                    "type": "double",
                    "description": "The ordinate of the rectangle's center, as a percentage of the media height",
                    "required": true
                },
                {
                    "name": "width_percentage",
                    "type": "double",
                    "description": "The width of the rectangle, as a percentage of the media width",
                    "required": true
                },
                {
                    "name": "height_percentage",
                    "type": "double",
                    "description": "The height of the rectangle, as a percentage of the media height",
                    "required": true
                },
                {
                    "name": "rotation_angle",
                    "type": "double",
                    "description": "Clockwise rotation angle of the rectangle, in degrees; 0-360",
                    "required": true
                },
                {
                    "name": "corner_radius_percentage",
                    "type": "double",
                    "description": "The radius of the rectangle corner rounding, as a percentage of the media width",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaTypeLocation",
            "description": "An area pointing to a location",
            "type": "StoryAreaType",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The location",
                    "required": true
                },
                {
                    "name": "address",
                    "type": "locationAddress",
                    "description": "Address of the location; may be null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaTypeVenue",
            "description": "An area pointing to a venue",
            "type": "StoryAreaType",
            "annotations": [
                {
                    "name": "venue",
                    "type": "venue",
                    "description": "Information about the venue",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaTypeSuggestedReaction",
            "description": "An area pointing to a suggested reaction. App needs to show a clickable reaction on the area and call setStoryReaction when the are is clicked",
            "type": "StoryAreaType",
            "annotations": [
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reaction",
                    "required": true
                },
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Number of times the reaction was added",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "True, if reaction has a dark background",
                    "required": true
                },
                {
                    "name": "is_flipped",
                    "type": "Bool",
                    "description": "True, if reaction corner is flipped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaTypeMessage",
            "description": "An area pointing to a message",
            "type": "StoryAreaType",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat with the message",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaTypeLink",
            "description": "An area pointing to a HTTP or tg:// link",
            "type": "StoryAreaType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "HTTP or tg:// URL to be opened when the area is clicked",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyAreaTypeWeather",
            "description": "An area with information about weather",
            "type": "StoryAreaType",
            "annotations": [
                {
                    "name": "temperature",
                    "type": "double",
                    "description": "Temperature, in degree Celsius",
                    "required": true
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji representing the weather",
                    "required": true
                },
                {
                    "name": "background_color",
                    "type": "int32",
                    "description": "A color of the area background in the ARGB format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyArea",
            "description": "Describes a clickable rectangle area on a story media",
            "type": "StoryArea",
            "annotations": [
                {
                    "name": "position",
                    "type": "storyAreaPosition",
                    "description": "Position of the area",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "StoryAreaType",
                    "description": "Type of the area",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypeLocation",
            "description": "An area pointing to a location",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "location",
                    "type": "location",
                    "description": "The location",
                    "required": true
                },
                {
                    "name": "address",
                    "type": "locationAddress",
                    "description": "Address of the location; pass null if unknown",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypeFoundVenue",
            "description": "An area pointing to a venue found by the bot getOption('venue_search_bot_username')",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "query_id",
                    "type": "int64",
                    "description": "Identifier of the inline query, used to found the venue",
                    "required": true
                },
                {
                    "name": "result_id",
                    "type": "string",
                    "description": "Identifier of the inline query result",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypePreviousVenue",
            "description": "An area pointing to a venue already added to the story",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "venue_provider",
                    "type": "string",
                    "description": "Provider of the venue",
                    "required": true
                },
                {
                    "name": "venue_id",
                    "type": "string",
                    "description": "Identifier of the venue in the provider database",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypeSuggestedReaction",
            "description": "An area pointing to a suggested reaction",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reaction",
                    "required": true
                },
                {
                    "name": "is_dark",
                    "type": "Bool",
                    "description": "True, if reaction has a dark background",
                    "required": true
                },
                {
                    "name": "is_flipped",
                    "type": "Bool",
                    "description": "True, if reaction corner is flipped",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypeMessage",
            "description": "An area pointing to a message",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat with the message. Currently, the chat must be a supergroup or a channel chat",
                    "required": true
                },
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message. Use messageProperties.can_be_shared_in_story to check whether the message is suitable",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypeLink",
            "description": "An area pointing to a HTTP or tg:// link",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "HTTP or tg:// URL to be opened when the area is clicked",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreaTypeWeather",
            "description": "An area with information about weather",
            "type": "InputStoryAreaType",
            "annotations": [
                {
                    "name": "temperature",
                    "type": "double",
                    "description": "Temperature, in degree Celsius",
                    "required": true
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji representing the weather",
                    "required": true
                },
                {
                    "name": "background_color",
                    "type": "int32",
                    "description": "A color of the area background in the ARGB format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryArea",
            "description": "Describes a clickable rectangle area on a story media to be added",
            "type": "InputStoryArea",
            "annotations": [
                {
                    "name": "position",
                    "type": "storyAreaPosition",
                    "description": "Position of the area",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "InputStoryAreaType",
                    "description": "Type of the area",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryAreas",
            "description": "Contains a list of story areas to be added",
            "type": "InputStoryAreas",
            "annotations": [
                {
                    "name": "areas",
                    "type": "vector<inputStoryArea>",
                    "description": "List of input story areas. Currently, a story can have",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyVideo",
            "description": "Describes a video file sent in a story",
            "type": "StoryVideo",
            "annotations": [
                {
                    "name": "duration",
                    "type": "double",
                    "description": "Duration of the video, in seconds",
                    "required": true
                },
                {
                    "name": "width",
                    "type": "int32",
                    "description": "Video width",
                    "required": true
                },
                {
                    "name": "height",
                    "type": "int32",
                    "description": "Video height",
                    "required": true
                },
                {
                    "name": "has_stickers",
                    "type": "Bool",
                    "description": "True, if stickers were added to the video. The list of corresponding sticker sets can be received using getAttachedStickerSets",
                    "required": true
                },
                {
                    "name": "is_animation",
                    "type": "Bool",
                    "description": "True, if the video has no sound",
                    "required": true
                },
                {
                    "name": "minithumbnail",
                    "type": "minithumbnail",
                    "description": "Video minithumbnail; may be null",
                    "required": false
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Video thumbnail in JPEG or MPEG4 format; may be null",
                    "required": false
                },
                {
                    "name": "preload_prefix_size",
                    "type": "int32",
                    "description": "Size of file prefix, which is supposed to be preloaded, in bytes",
                    "required": true
                },
                {
                    "name": "cover_frame_timestamp",
                    "type": "double",
                    "description": "Timestamp of the frame used as video thumbnail",
                    "required": true
                },
                {
                    "name": "video",
                    "type": "file",
                    "description": "File containing the video",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyContentPhoto",
            "description": "A photo story",
            "type": "StoryContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "The photo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyContentVideo",
            "description": "A video story",
            "type": "StoryContent",
            "annotations": [
                {
                    "name": "video",
                    "type": "storyVideo",
                    "description": "The video in MPEG4 format",
                    "required": true
                },
                {
                    "name": "alternative_video",
                    "type": "storyVideo",
                    "description": "Alternative version of the video in MPEG4 format, encoded by x264 codec; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyContentUnsupported",
            "description": "A story content that is not supported in the current TDLib version",
            "type": "StoryContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryContentPhoto",
            "description": "A photo story",
            "type": "InputStoryContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "InputFile",
                    "description": "Photo to send. The photo must be at most 10 MB in size. The photo size must be 1080x1920",
                    "required": true
                },
                {
                    "name": "added_sticker_file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the stickers added to the photo, if applicable",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputStoryContentVideo",
            "description": "A video story",
            "type": "InputStoryContent",
            "annotations": [
                {
                    "name": "video",
                    "type": "InputFile",
                    "description": "Video to be sent. The video size must be 720x1280. The video must be streamable and stored in MPEG4 format, after encoding with x265 codec and key frames added each second",
                    "required": true
                },
                {
                    "name": "added_sticker_file_ids",
                    "type": "vector<int32>",
                    "description": "File identifiers of the stickers added to the video, if applicable",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "double",
                    "description": "Precise duration of the video, in seconds; 0-60",
                    "required": true
                },
                {
                    "name": "cover_frame_timestamp",
                    "type": "double",
                    "description": "Timestamp of the frame, which will be used as video thumbnail",
                    "required": true
                },
                {
                    "name": "is_animation",
                    "type": "Bool",
                    "description": "True, if the video has no sound",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyListMain",
            "description": "The list of stories, shown in the main chat list and folder chat lists",
            "type": "StoryList",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyListArchive",
            "description": "The list of stories, shown in the Arvhive chat list",
            "type": "StoryList",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyOriginPublicStory",
            "description": "The original story was a public story with known sender",
            "type": "StoryOrigin",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted original story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier of the original story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyOriginHiddenUser",
            "description": "The original story was sent by an unknown user",
            "type": "StoryOrigin",
            "annotations": [
                {
                    "name": "sender_name",
                    "type": "string",
                    "description": "Name of the story sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyRepostInfo",
            "description": "Contains information about original story that was reposted",
            "type": "StoryRepostInfo",
            "annotations": [
                {
                    "name": "origin",
                    "type": "StoryOrigin",
                    "description": "Origin of the story that was reposted",
                    "required": true
                },
                {
                    "name": "is_content_modified",
                    "type": "Bool",
                    "description": "True, if story content was modified during reposting; otherwise, story wasn't modified",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInteractionInfo",
            "description": "Contains information about interactions with a story",
            "type": "StoryInteractionInfo",
            "annotations": [
                {
                    "name": "view_count",
                    "type": "int32",
                    "description": "Number of times the story was viewed",
                    "required": true
                },
                {
                    "name": "forward_count",
                    "type": "int32",
                    "description": "Number of times the story was forwarded; 0 if none or unknown",
                    "required": true
                },
                {
                    "name": "reaction_count",
                    "type": "int32",
                    "description": "Number of reactions added to the story; 0 if none or unknown",
                    "required": true
                },
                {
                    "name": "recent_viewer_user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of at most 3 recent viewers of the story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "story",
            "description": "Represents a story",
            "type": "Story",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique story identifier among stories of the given sender",
                    "required": true
                },
                {
                    "name": "sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of the story; may be null if the story is posted on behalf of the sender_chat_id",
                    "required": false
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the story was published",
                    "required": true
                },
                {
                    "name": "is_being_sent",
                    "type": "Bool",
                    "description": "True, if the story is being sent by the current user",
                    "required": true
                },
                {
                    "name": "is_being_edited",
                    "type": "Bool",
                    "description": "True, if the story is being edited by the current user",
                    "required": true
                },
                {
                    "name": "is_edited",
                    "type": "Bool",
                    "description": "True, if the story was edited",
                    "required": true
                },
                {
                    "name": "is_posted_to_chat_page",
                    "type": "Bool",
                    "description": "True, if the story is saved in the sender's profile and will be available there after expiration",
                    "required": true
                },
                {
                    "name": "is_visible_only_for_self",
                    "type": "Bool",
                    "description": "True, if the story is visible only for the current user",
                    "required": true
                },
                {
                    "name": "can_be_deleted",
                    "type": "Bool",
                    "description": "True, if the story can be deleted",
                    "required": true
                },
                {
                    "name": "can_be_edited",
                    "type": "Bool",
                    "description": "True, if the story can be edited",
                    "required": true
                },
                {
                    "name": "can_be_forwarded",
                    "type": "Bool",
                    "description": "True, if the story can be forwarded as a message. Otherwise, screenshots and saving of the story content must be also forbidden",
                    "required": true
                },
                {
                    "name": "can_be_replied",
                    "type": "Bool",
                    "description": "True, if the story can be replied in the chat with the story sender",
                    "required": true
                },
                {
                    "name": "can_toggle_is_posted_to_chat_page",
                    "type": "Bool",
                    "description": "True, if the story's is_posted_to_chat_page value can be changed",
                    "required": true
                },
                {
                    "name": "can_get_statistics",
                    "type": "Bool",
                    "description": "True, if the story statistics are available through getStoryStatistics",
                    "required": true
                },
                {
                    "name": "can_get_interactions",
                    "type": "Bool",
                    "description": "True, if interactions with the story can be received through getStoryInteractions",
                    "required": true
                },
                {
                    "name": "has_expired_viewers",
                    "type": "Bool",
                    "description": "True, if users viewed the story can't be received, because the story has expired more than getOption('story_viewers_expiration_delay') seconds ago",
                    "required": true
                },
                {
                    "name": "repost_info",
                    "type": "storyRepostInfo",
                    "description": "Information about the original story; may be null if the story wasn't reposted",
                    "required": false
                },
                {
                    "name": "interaction_info",
                    "type": "storyInteractionInfo",
                    "description": "Information about interactions with the story; may be null if the story isn't owned or there were no interactions",
                    "required": false
                },
                {
                    "name": "chosen_reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the chosen reaction; may be null if none",
                    "required": false
                },
                {
                    "name": "privacy_settings",
                    "type": "StoryPrivacySettings",
                    "description": "Privacy rules affecting story visibility; may be approximate for non-owned stories",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "StoryContent",
                    "description": "Content of the story",
                    "required": true
                },
                {
                    "name": "areas",
                    "type": "vector<storyArea>",
                    "description": "Clickable areas to be shown on the story content",
                    "required": true
                },
                {
                    "name": "caption",
                    "type": "formattedText",
                    "description": "Caption of the story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "stories",
            "description": "Represents a list of stories",
            "type": "Stories",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of stories found",
                    "required": true
                },
                {
                    "name": "stories",
                    "type": "vector<story>",
                    "description": "The list of stories",
                    "required": true
                },
                {
                    "name": "pinned_story_ids",
                    "type": "vector<int32>",
                    "description": "Identifiers of the pinned stories; returned only in getChatPostedToChatPageStories with from_story_id == 0",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundStories",
            "description": "Contains a list of stories found by a search",
            "type": "FoundStories",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of stories found",
                    "required": true
                },
                {
                    "name": "stories",
                    "type": "vector<story>",
                    "description": "List of stories",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyFullId",
            "description": "Contains identifier of a story along with identifier of its sender",
            "type": "StoryFullId",
            "annotations": [
                {
                    "name": "sender_chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Unique story identifier among stories of the given sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInfo",
            "description": "Contains basic information about a story",
            "type": "StoryInfo",
            "annotations": [
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Unique story identifier among stories of the given sender",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the story was published",
                    "required": true
                },
                {
                    "name": "is_for_close_friends",
                    "type": "Bool",
                    "description": "True, if the story is available only to close friends",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatActiveStories",
            "description": "Describes active stories posted by a chat",
            "type": "ChatActiveStories",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat that posted the stories",
                    "required": true
                },
                {
                    "name": "list",
                    "type": "StoryList",
                    "description": "Identifier of the story list in which the stories are shown; may be null if the stories aren't shown in a story list",
                    "required": false
                },
                {
                    "name": "order",
                    "type": "int53",
                    "description": "A parameter used to determine order of the stories in the story list; 0 if the stories doesn't need to be shown in the story list. Stories must be sorted by the pair (order, story_sender_chat_id) in descending order",
                    "required": true
                },
                {
                    "name": "max_read_story_id",
                    "type": "int32",
                    "description": "Identifier of the last read active story",
                    "required": true
                },
                {
                    "name": "stories",
                    "type": "vector<storyInfo>",
                    "description": "Basic information about the stories; use getStory to get full information about the stories. The stories are in chronological order (i.e., in order of increasing story identifiers)",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInteractionTypeView",
            "description": "A view of the story",
            "type": "StoryInteractionType",
            "annotations": [
                {
                    "name": "chosen_reaction_type",
                    "type": "ReactionType",
                    "description": "Type of the reaction that was chosen by the viewer; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInteractionTypeForward",
            "description": "A forward of the story as a message",
            "type": "StoryInteractionType",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The message with story forward",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInteractionTypeRepost",
            "description": "A repost of the story as a story",
            "type": "StoryInteractionType",
            "annotations": [
                {
                    "name": "story",
                    "type": "story",
                    "description": "The reposted story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInteraction",
            "description": "Represents interaction with a story",
            "type": "StoryInteraction",
            "annotations": [
                {
                    "name": "actor_id",
                    "type": "MessageSender",
                    "description": "Identifier of the user or chat that made the interaction",
                    "required": true
                },
                {
                    "name": "interaction_date",
                    "type": "int32",
                    "description": "Approximate point in time (Unix timestamp) when the interaction happened",
                    "required": true
                },
                {
                    "name": "block_list",
                    "type": "BlockList",
                    "description": "Block list to which the actor is added; may be null if none or for chat stories",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "StoryInteractionType",
                    "description": "Type of the interaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyInteractions",
            "description": "Represents a list of interactions with a story",
            "type": "StoryInteractions",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of interactions found",
                    "required": true
                },
                {
                    "name": "total_forward_count",
                    "type": "int32",
                    "description": "Approximate total number of found forwards and reposts; always 0 for chat stories",
                    "required": true
                },
                {
                    "name": "total_reaction_count",
                    "type": "int32",
                    "description": "Approximate total number of found reactions; always 0 for chat stories",
                    "required": true
                },
                {
                    "name": "interactions",
                    "type": "vector<storyInteraction>",
                    "description": "List of story interactions",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "quickReplyMessage",
            "description": "Describes a message that can be used for quick reply",
            "type": "QuickReplyMessage",
            "annotations": [
                {
                    "name": "id",
                    "type": "int53",
                    "description": "Unique message identifier among all quick replies",
                    "required": true
                },
                {
                    "name": "sending_state",
                    "type": "MessageSendingState",
                    "description": "The sending state of the message; may be null if the message isn't being sent and didn't fail to be sent",
                    "required": false
                },
                {
                    "name": "can_be_edited",
                    "type": "Bool",
                    "description": "True, if the message can be edited",
                    "required": true
                },
                {
                    "name": "reply_to_message_id",
                    "type": "int53",
                    "description": "The identifier of the quick reply message to which the message replies; 0 if none",
                    "required": true
                },
                {
                    "name": "via_bot_user_id",
                    "type": "int53",
                    "description": "If non-zero, the user identifier of the bot through which this message was sent",
                    "required": true
                },
                {
                    "name": "media_album_id",
                    "type": "int64",
                    "description": "Unique identifier of an album this message belongs to; 0 if none. Only audios, documents, photos and videos can be grouped together in albums",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "MessageContent",
                    "description": "Content of the message",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "Inline keyboard reply markup for the message; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "quickReplyMessages",
            "description": "Contains a list of quick reply messages",
            "type": "QuickReplyMessages",
            "annotations": [
                {
                    "name": "messages",
                    "type": "vector<quickReplyMessage>",
                    "description": "List of quick reply messages; messages may be null",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "quickReplyShortcut",
            "description": "Describes a shortcut that can be used for a quick reply",
            "type": "QuickReplyShortcut",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique shortcut identifier",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the shortcut that can be used to use the shortcut",
                    "required": true
                },
                {
                    "name": "first_message",
                    "type": "quickReplyMessage",
                    "description": "The first shortcut message",
                    "required": true
                },
                {
                    "name": "message_count",
                    "type": "int32",
                    "description": "The total number of messages in the shortcut",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "publicForwardMessage",
            "description": "Contains a public forward as a message",
            "type": "PublicForward",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "Information about the message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "publicForwardStory",
            "description": "Contains a public repost to a story",
            "type": "PublicForward",
            "annotations": [
                {
                    "name": "story",
                    "type": "story",
                    "description": "Information about the story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "publicForwards",
            "description": "Represents a list of public forwards and reposts as a story of a message or a story",
            "type": "PublicForwards",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Approximate total number of messages and stories found",
                    "required": true
                },
                {
                    "name": "forwards",
                    "type": "vector<PublicForward>",
                    "description": "List of found public forwards and reposts",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botMediaPreview",
            "description": "Describes media previews of a bot",
            "type": "BotMediaPreview",
            "annotations": [
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the preview was added or changed last time",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "StoryContent",
                    "description": "Content of the preview",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botMediaPreviews",
            "description": "Contains a list of media previews of a bot",
            "type": "BotMediaPreviews",
            "annotations": [
                {
                    "name": "previews",
                    "type": "vector<botMediaPreview>",
                    "description": "List of media previews",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botMediaPreviewInfo",
            "description": "Contains a list of media previews of a bot for the given language and the list of languages for which the bot has dedicated previews",
            "type": "BotMediaPreviewInfo",
            "annotations": [
                {
                    "name": "previews",
                    "type": "vector<botMediaPreview>",
                    "description": "List of media previews",
                    "required": true
                },
                {
                    "name": "language_codes",
                    "type": "vector<string>",
                    "description": "List of language codes for which the bot has dedicated previews",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostLevelFeatures",
            "description": "Contains a list of features available on a specific chat boost level",
            "type": "ChatBoostLevelFeatures",
            "annotations": [
                {
                    "name": "level",
                    "type": "int32",
                    "description": "Target chat boost level",
                    "required": true
                },
                {
                    "name": "story_per_day_count",
                    "type": "int32",
                    "description": "Number of stories that the chat can publish daily",
                    "required": true
                },
                {
                    "name": "custom_emoji_reaction_count",
                    "type": "int32",
                    "description": "Number of custom emoji reactions that can be added to the list of available reactions",
                    "required": true
                },
                {
                    "name": "title_color_count",
                    "type": "int32",
                    "description": "Number of custom colors for chat title",
                    "required": true
                },
                {
                    "name": "profile_accent_color_count",
                    "type": "int32",
                    "description": "Number of custom colors for profile photo background",
                    "required": true
                },
                {
                    "name": "can_set_profile_background_custom_emoji",
                    "type": "Bool",
                    "description": "True, if custom emoji for profile background can be set",
                    "required": true
                },
                {
                    "name": "accent_color_count",
                    "type": "int32",
                    "description": "Number of custom colors for background of empty chat photo, replies to messages and link previews",
                    "required": true
                },
                {
                    "name": "can_set_background_custom_emoji",
                    "type": "Bool",
                    "description": "True, if custom emoji for reply header and link preview background can be set",
                    "required": true
                },
                {
                    "name": "can_set_emoji_status",
                    "type": "Bool",
                    "description": "True, if emoji status can be set",
                    "required": true
                },
                {
                    "name": "chat_theme_background_count",
                    "type": "int32",
                    "description": "Number of chat theme backgrounds that can be set as chat background",
                    "required": true
                },
                {
                    "name": "can_set_custom_background",
                    "type": "Bool",
                    "description": "True, if custom background can be set in the chat for all users",
                    "required": true
                },
                {
                    "name": "can_set_custom_emoji_sticker_set",
                    "type": "Bool",
                    "description": "True, if custom emoji sticker set can be set for the chat",
                    "required": true
                },
                {
                    "name": "can_recognize_speech",
                    "type": "Bool",
                    "description": "True, if speech recognition can be used for video note and voice note messages by all users",
                    "required": true
                },
                {
                    "name": "can_disable_sponsored_messages",
                    "type": "Bool",
                    "description": "True, if sponsored messages can be disabled in the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostFeatures",
            "description": "Contains a list of features available on the first chat boost levels",
            "type": "ChatBoostFeatures",
            "annotations": [
                {
                    "name": "features",
                    "type": "vector<chatBoostLevelFeatures>",
                    "description": "The list of features",
                    "required": true
                },
                {
                    "name": "min_profile_background_custom_emoji_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level required to set custom emoji for profile background",
                    "required": true
                },
                {
                    "name": "min_background_custom_emoji_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level required to set custom emoji for reply header and link preview background; for channel chats only",
                    "required": true
                },
                {
                    "name": "min_emoji_status_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level required to set emoji status",
                    "required": true
                },
                {
                    "name": "min_chat_theme_background_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level required to set a chat theme background as chat background",
                    "required": true
                },
                {
                    "name": "min_custom_background_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level required to set custom chat background",
                    "required": true
                },
                {
                    "name": "min_custom_emoji_sticker_set_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level required to set custom emoji sticker set for the chat; for supergroup chats only",
                    "required": true
                },
                {
                    "name": "min_speech_recognition_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level allowing to recognize speech in video note and voice note messages for non-Premium users; for supergroup chats only",
                    "required": true
                },
                {
                    "name": "min_sponsored_message_disable_boost_level",
                    "type": "int32",
                    "description": "The minimum boost level allowing to disable sponsored messages in the chat; for channel chats only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostSourceGiftCode",
            "description": "The chat created a Telegram Premium gift code for a user",
            "type": "ChatBoostSource",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of a user, for which the gift code was created",
                    "required": true
                },
                {
                    "name": "gift_code",
                    "type": "string",
                    "description": "The created Telegram Premium gift code, which is known only if this is a gift code for the current user, or it has already been claimed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostSourceGiveaway",
            "description": "The chat created a Telegram Premium giveaway",
            "type": "ChatBoostSource",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of a user that won in the giveaway; 0 if none",
                    "required": true
                },
                {
                    "name": "gift_code",
                    "type": "string",
                    "description": "The created Telegram Premium gift code if it was used by the user or can be claimed by the current user; an empty string otherwise",
                    "required": true
                },
                {
                    "name": "giveaway_message_id",
                    "type": "int53",
                    "description": "Identifier of the corresponding giveaway message; can be an identifier of a deleted message",
                    "required": true
                },
                {
                    "name": "is_unclaimed",
                    "type": "Bool",
                    "description": "True, if the winner for the corresponding Telegram Premium subscription wasn't chosen, because there were not enough participants",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostSourcePremium",
            "description": "A user with Telegram Premium subscription or gifted Telegram Premium boosted the chat",
            "type": "ChatBoostSource",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "prepaidPremiumGiveaway",
            "description": "Describes a prepaid Telegram Premium giveaway",
            "type": "PrepaidPremiumGiveaway",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique identifier of the prepaid giveaway",
                    "required": true
                },
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Number of users which will receive Telegram Premium subscription gift codes",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation",
                    "required": true
                },
                {
                    "name": "payment_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the giveaway was paid",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostStatus",
            "description": "Describes current boost status of a chat",
            "type": "ChatBoostStatus",
            "annotations": [
                {
                    "name": "boost_url",
                    "type": "string",
                    "description": "An HTTP URL, which can be used to boost the chat",
                    "required": true
                },
                {
                    "name": "applied_slot_ids",
                    "type": "vector<int32>",
                    "description": "Identifiers of boost slots of the current user applied to the chat",
                    "required": true
                },
                {
                    "name": "level",
                    "type": "int32",
                    "description": "Current boost level of the chat",
                    "required": true
                },
                {
                    "name": "gift_code_boost_count",
                    "type": "int32",
                    "description": "The number of boosts received by the chat from created Telegram Premium gift codes and giveaways; always 0 if the current user isn't an administrator in the chat",
                    "required": true
                },
                {
                    "name": "boost_count",
                    "type": "int32",
                    "description": "The number of boosts received by the chat",
                    "required": true
                },
                {
                    "name": "current_level_boost_count",
                    "type": "int32",
                    "description": "The number of boosts added to reach the current level",
                    "required": true
                },
                {
                    "name": "next_level_boost_count",
                    "type": "int32",
                    "description": "The number of boosts needed to reach the next level; 0 if the next level isn't available",
                    "required": true
                },
                {
                    "name": "premium_member_count",
                    "type": "int32",
                    "description": "Approximate number of Telegram Premium subscribers joined the chat; always 0 if the current user isn't an administrator in the chat",
                    "required": true
                },
                {
                    "name": "premium_member_percentage",
                    "type": "double",
                    "description": "A percentage of Telegram Premium subscribers joined the chat; always 0 if the current user isn't an administrator in the chat",
                    "required": true
                },
                {
                    "name": "prepaid_giveaways",
                    "type": "vector<prepaidPremiumGiveaway>",
                    "description": "The list of prepaid giveaways available for the chat; only for chat administrators",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoost",
            "description": "Describes a boost applied to a chat",
            "type": "ChatBoost",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the boost",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int32",
                    "description": "The number of identical boosts applied",
                    "required": true
                },
                {
                    "name": "source",
                    "type": "ChatBoostSource",
                    "description": "Source of the boost",
                    "required": true
                },
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the chat was boosted",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the boost will expire",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundChatBoosts",
            "description": "Contains a list of boosts applied to a chat",
            "type": "FoundChatBoosts",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of boosts applied to the chat",
                    "required": true
                },
                {
                    "name": "boosts",
                    "type": "vector<chatBoost>",
                    "description": "List of boosts",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostSlot",
            "description": "Describes a slot for chat boost",
            "type": "ChatBoostSlot",
            "annotations": [
                {
                    "name": "slot_id",
                    "type": "int32",
                    "description": "Unique identifier of the slot",
                    "required": true
                },
                {
                    "name": "currently_boosted_chat_id",
                    "type": "int53",
                    "description": "Identifier of the currently boosted chat; 0 if none",
                    "required": true
                },
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the chat was boosted; 0 if none",
                    "required": true
                },
                {
                    "name": "expiration_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the boost will expire",
                    "required": true
                },
                {
                    "name": "cooldown_until_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) after which the boost can be used for another chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostSlots",
            "description": "Contains a list of chat boost slots",
            "type": "ChatBoostSlots",
            "annotations": [
                {
                    "name": "slots",
                    "type": "vector<chatBoostSlot>",
                    "description": "List of boost slots",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "resendCodeReasonUserRequest",
            "description": "The user requested to resend the code",
            "type": "ResendCodeReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "resendCodeReasonVerificationFailed",
            "description": "The code is re-sent, because device verification has failed",
            "type": "ResendCodeReason",
            "annotations": [
                {
                    "name": "error_message",
                    "type": "string",
                    "description": "Cause of the verification failure, for example, PLAY_SERVICES_NOT_AVAILABLE, APNS_RECEIVE_TIMEOUT, or APNS_INIT_FAILED",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callDiscardReasonEmpty",
            "description": "The call wasn't discarded, or the reason is unknown",
            "type": "CallDiscardReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callDiscardReasonMissed",
            "description": "The call was ended before the conversation started. It was canceled by the caller or missed by the other party",
            "type": "CallDiscardReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callDiscardReasonDeclined",
            "description": "The call was ended before the conversation started. It was declined by the other party",
            "type": "CallDiscardReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callDiscardReasonDisconnected",
            "description": "The call was ended during the conversation because the users were disconnected",
            "type": "CallDiscardReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callDiscardReasonHungUp",
            "description": "The call was ended because one of the parties hung up",
            "type": "CallDiscardReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProtocol",
            "description": "Specifies the supported call protocols",
            "type": "CallProtocol",
            "annotations": [
                {
                    "name": "udp_p2p",
                    "type": "Bool",
                    "description": "True, if UDP peer-to-peer connections are supported",
                    "required": true
                },
                {
                    "name": "udp_reflector",
                    "type": "Bool",
                    "description": "True, if connection through UDP reflectors is supported",
                    "required": true
                },
                {
                    "name": "min_layer",
                    "type": "int32",
                    "description": "The minimum supported API layer; use 65",
                    "required": true
                },
                {
                    "name": "max_layer",
                    "type": "int32",
                    "description": "The maximum supported API layer; use 92",
                    "required": true
                },
                {
                    "name": "library_versions",
                    "type": "vector<string>",
                    "description": "List of supported tgcalls versions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callServerTypeTelegramReflector",
            "description": "A Telegram call reflector",
            "type": "CallServerType",
            "annotations": [
                {
                    "name": "peer_tag",
                    "type": "bytes",
                    "description": "A peer tag to be used with the reflector",
                    "required": true
                },
                {
                    "name": "is_tcp",
                    "type": "Bool",
                    "description": "True, if the server uses TCP instead of UDP",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callServerTypeWebrtc",
            "description": "A WebRTC server",
            "type": "CallServerType",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username to be used for authentication",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "Authentication password",
                    "required": true
                },
                {
                    "name": "supports_turn",
                    "type": "Bool",
                    "description": "True, if the server supports TURN",
                    "required": true
                },
                {
                    "name": "supports_stun",
                    "type": "Bool",
                    "description": "True, if the server supports STUN",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callServer",
            "description": "Describes a server for relaying call data",
            "type": "CallServer",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Server identifier",
                    "required": true
                },
                {
                    "name": "ip_address",
                    "type": "string",
                    "description": "Server IPv4 address",
                    "required": true
                },
                {
                    "name": "ipv6_address",
                    "type": "string",
                    "description": "Server IPv6 address",
                    "required": true
                },
                {
                    "name": "port",
                    "type": "int32",
                    "description": "Server port number",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "CallServerType",
                    "description": "Server type",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callId",
            "description": "Contains the call identifier",
            "type": "CallId",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallId",
            "description": "Contains the group call identifier",
            "type": "GroupCallId",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callStatePending",
            "description": "The call is pending, waiting to be accepted by a user",
            "type": "CallState",
            "annotations": [
                {
                    "name": "is_created",
                    "type": "Bool",
                    "description": "True, if the call has already been created by the server",
                    "required": true
                },
                {
                    "name": "is_received",
                    "type": "Bool",
                    "description": "True, if the call has already been received by the other party",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callStateExchangingKeys",
            "description": "The call has been answered and encryption keys are being exchanged",
            "type": "CallState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callStateReady",
            "description": "The call is ready to use",
            "type": "CallState",
            "annotations": [
                {
                    "name": "protocol",
                    "type": "callProtocol",
                    "description": "Call protocols supported by the other call participant",
                    "required": true
                },
                {
                    "name": "servers",
                    "type": "vector<callServer>",
                    "description": "List of available call servers",
                    "required": true
                },
                {
                    "name": "config",
                    "type": "string",
                    "description": "A JSON-encoded call config",
                    "required": true
                },
                {
                    "name": "encryption_key",
                    "type": "bytes",
                    "description": "Call encryption key",
                    "required": true
                },
                {
                    "name": "emojis",
                    "type": "vector<string>",
                    "description": "Encryption key fingerprint represented as 4 emoji",
                    "required": true
                },
                {
                    "name": "allow_p2p",
                    "type": "Bool",
                    "description": "True, if peer-to-peer connection is allowed by users privacy settings",
                    "required": true
                },
                {
                    "name": "custom_parameters",
                    "type": "string",
                    "description": "Custom JSON-encoded call parameters to be passed to tgcalls",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callStateHangingUp",
            "description": "The call is hanging up after discardCall has been called",
            "type": "CallState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callStateDiscarded",
            "description": "The call has ended successfully",
            "type": "CallState",
            "annotations": [
                {
                    "name": "reason",
                    "type": "CallDiscardReason",
                    "description": "The reason why the call has ended",
                    "required": true
                },
                {
                    "name": "need_rating",
                    "type": "Bool",
                    "description": "True, if the call rating must be sent to the server",
                    "required": true
                },
                {
                    "name": "need_debug_information",
                    "type": "Bool",
                    "description": "True, if the call debug information must be sent to the server",
                    "required": true
                },
                {
                    "name": "need_log",
                    "type": "Bool",
                    "description": "True, if the call log must be sent to the server",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callStateError",
            "description": "The call has ended with an error",
            "type": "CallState",
            "annotations": [
                {
                    "name": "error",
                    "type": "error",
                    "description": "Error. An error with the code 4005000 will be returned if an outgoing call is missed because of an expired timeout",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallVideoQualityThumbnail",
            "description": "The worst available video quality",
            "type": "GroupCallVideoQuality",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallVideoQualityMedium",
            "description": "The medium video quality",
            "type": "GroupCallVideoQuality",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallVideoQualityFull",
            "description": "The best available video quality",
            "type": "GroupCallVideoQuality",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallStream",
            "description": "Describes an available stream in a group call",
            "type": "GroupCallStream",
            "annotations": [
                {
                    "name": "channel_id",
                    "type": "int32",
                    "description": "Identifier of an audio/video channel",
                    "required": true
                },
                {
                    "name": "scale",
                    "type": "int32",
                    "description": "Scale of segment durations in the stream. The duration is 1000/(2**scale) milliseconds",
                    "required": true
                },
                {
                    "name": "time_offset",
                    "type": "int53",
                    "description": "Point in time when the stream currently ends; Unix timestamp in milliseconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallStreams",
            "description": "Represents a list of group call streams",
            "type": "GroupCallStreams",
            "annotations": [
                {
                    "name": "streams",
                    "type": "vector<groupCallStream>",
                    "description": "A list of group call streams",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "rtmpUrl",
            "description": "Represents an RTMP URL",
            "type": "RtmpUrl",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL",
                    "required": true
                },
                {
                    "name": "stream_key",
                    "type": "string",
                    "description": "Stream key",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallRecentSpeaker",
            "description": "Describes a recently speaking participant in a group call",
            "type": "GroupCallRecentSpeaker",
            "annotations": [
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Group call participant identifier",
                    "required": true
                },
                {
                    "name": "is_speaking",
                    "type": "Bool",
                    "description": "True, is the user has spoken recently",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCall",
            "description": "Describes a group call",
            "type": "GroupCall",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Group call identifier",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Group call title",
                    "required": true
                },
                {
                    "name": "scheduled_start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the group call is supposed to be started by an administrator; 0 if it is already active or was ended",
                    "required": true
                },
                {
                    "name": "enabled_start_notification",
                    "type": "Bool",
                    "description": "True, if the group call is scheduled and the current user will receive a notification when the group call starts",
                    "required": true
                },
                {
                    "name": "is_active",
                    "type": "Bool",
                    "description": "True, if the call is active",
                    "required": true
                },
                {
                    "name": "is_rtmp_stream",
                    "type": "Bool",
                    "description": "True, if the chat is an RTMP stream instead of an ordinary video chat",
                    "required": true
                },
                {
                    "name": "is_joined",
                    "type": "Bool",
                    "description": "True, if the call is joined",
                    "required": true
                },
                {
                    "name": "need_rejoin",
                    "type": "Bool",
                    "description": "True, if user was kicked from the call because of network loss and the call needs to be rejoined",
                    "required": true
                },
                {
                    "name": "can_be_managed",
                    "type": "Bool",
                    "description": "True, if the current user can manage the group call",
                    "required": true
                },
                {
                    "name": "participant_count",
                    "type": "int32",
                    "description": "Number of participants in the group call",
                    "required": true
                },
                {
                    "name": "has_hidden_listeners",
                    "type": "Bool",
                    "description": "True, if group call participants, which are muted, aren't returned in participant list",
                    "required": true
                },
                {
                    "name": "loaded_all_participants",
                    "type": "Bool",
                    "description": "True, if all group call participants are loaded",
                    "required": true
                },
                {
                    "name": "recent_speakers",
                    "type": "vector<groupCallRecentSpeaker>",
                    "description": "At most 3 recently speaking users in the group call",
                    "required": true
                },
                {
                    "name": "is_my_video_enabled",
                    "type": "Bool",
                    "description": "True, if the current user's video is enabled",
                    "required": true
                },
                {
                    "name": "is_my_video_paused",
                    "type": "Bool",
                    "description": "True, if the current user's video is paused",
                    "required": true
                },
                {
                    "name": "can_enable_video",
                    "type": "Bool",
                    "description": "True, if the current user can broadcast video or share screen",
                    "required": true
                },
                {
                    "name": "mute_new_participants",
                    "type": "Bool",
                    "description": "True, if only group call administrators can unmute new participants",
                    "required": true
                },
                {
                    "name": "can_toggle_mute_new_participants",
                    "type": "Bool",
                    "description": "True, if the current user can enable or disable mute_new_participants setting",
                    "required": true
                },
                {
                    "name": "record_duration",
                    "type": "int32",
                    "description": "Duration of the ongoing group call recording, in seconds; 0 if none. An updateGroupCall update is not triggered when value of this field changes, but the same recording goes on",
                    "required": true
                },
                {
                    "name": "is_video_recorded",
                    "type": "Bool",
                    "description": "True, if a video file is being recorded for the call",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Call duration, in seconds; for ended calls only",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallVideoSourceGroup",
            "description": "Describes a group of video synchronization source identifiers",
            "type": "GroupCallVideoSourceGroup",
            "annotations": [
                {
                    "name": "semantics",
                    "type": "string",
                    "description": "The semantics of sources, one of 'SIM' or 'FID'",
                    "required": true
                },
                {
                    "name": "source_ids",
                    "type": "vector<int32>",
                    "description": "The list of synchronization source identifiers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallParticipantVideoInfo",
            "description": "Contains information about a group call participant's video channel",
            "type": "GroupCallParticipantVideoInfo",
            "annotations": [
                {
                    "name": "source_groups",
                    "type": "vector<groupCallVideoSourceGroup>",
                    "description": "List of synchronization source groups of the video",
                    "required": true
                },
                {
                    "name": "endpoint_id",
                    "type": "string",
                    "description": "Video channel endpoint identifier",
                    "required": true
                },
                {
                    "name": "is_paused",
                    "type": "Bool",
                    "description": "True, if the video is paused. This flag needs to be ignored, if new video frames are received",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "groupCallParticipant",
            "description": "Represents a group call participant",
            "type": "GroupCallParticipant",
            "annotations": [
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Identifier of the group call participant",
                    "required": true
                },
                {
                    "name": "audio_source_id",
                    "type": "int32",
                    "description": "User's audio channel synchronization source identifier",
                    "required": true
                },
                {
                    "name": "screen_sharing_audio_source_id",
                    "type": "int32",
                    "description": "User's screen sharing audio channel synchronization source identifier",
                    "required": true
                },
                {
                    "name": "video_info",
                    "type": "groupCallParticipantVideoInfo",
                    "description": "Information about user's video channel; may be null if there is no active video",
                    "required": false
                },
                {
                    "name": "screen_sharing_video_info",
                    "type": "groupCallParticipantVideoInfo",
                    "description": "Information about user's screen sharing video channel; may be null if there is no active screen sharing video",
                    "required": false
                },
                {
                    "name": "bio",
                    "type": "string",
                    "description": "The participant user's bio or the participant chat's description",
                    "required": true
                },
                {
                    "name": "is_current_user",
                    "type": "Bool",
                    "description": "True, if the participant is the current user",
                    "required": true
                },
                {
                    "name": "is_speaking",
                    "type": "Bool",
                    "description": "True, if the participant is speaking as set by setGroupCallParticipantIsSpeaking",
                    "required": true
                },
                {
                    "name": "is_hand_raised",
                    "type": "Bool",
                    "description": "True, if the participant hand is raised",
                    "required": true
                },
                {
                    "name": "can_be_muted_for_all_users",
                    "type": "Bool",
                    "description": "True, if the current user can mute the participant for all other group call participants",
                    "required": true
                },
                {
                    "name": "can_be_unmuted_for_all_users",
                    "type": "Bool",
                    "description": "True, if the current user can allow the participant to unmute themselves or unmute the participant (if the participant is the current user)",
                    "required": true
                },
                {
                    "name": "can_be_muted_for_current_user",
                    "type": "Bool",
                    "description": "True, if the current user can mute the participant only for self",
                    "required": true
                },
                {
                    "name": "can_be_unmuted_for_current_user",
                    "type": "Bool",
                    "description": "True, if the current user can unmute the participant for self",
                    "required": true
                },
                {
                    "name": "is_muted_for_all_users",
                    "type": "Bool",
                    "description": "True, if the participant is muted for all users",
                    "required": true
                },
                {
                    "name": "is_muted_for_current_user",
                    "type": "Bool",
                    "description": "True, if the participant is muted for the current user",
                    "required": true
                },
                {
                    "name": "can_unmute_self",
                    "type": "Bool",
                    "description": "True, if the participant is muted for all users, but can unmute themselves",
                    "required": true
                },
                {
                    "name": "volume_level",
                    "type": "int32",
                    "description": "Participant's volume level; 1-20000 in hundreds of percents",
                    "required": true
                },
                {
                    "name": "order",
                    "type": "string",
                    "description": "User's order in the group call participant list. Orders must be compared lexicographically. The bigger is order, the higher is user in the list. If order is empty, the user must be removed from the participant list",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemEcho",
            "description": "The user heard their own voice",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemNoise",
            "description": "The user heard background noise",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemInterruptions",
            "description": "The other side kept disappearing",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemDistortedSpeech",
            "description": "The speech was distorted",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemSilentLocal",
            "description": "The user couldn't hear the other side",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemSilentRemote",
            "description": "The other side couldn't hear the user",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemDropped",
            "description": "The call ended unexpectedly",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemDistortedVideo",
            "description": "The video was distorted",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callProblemPixelatedVideo",
            "description": "The video was pixelated",
            "type": "CallProblem",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "call",
            "description": "Describes a call",
            "type": "Call",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Call identifier, not persistent",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier of the other call participant",
                    "required": true
                },
                {
                    "name": "is_outgoing",
                    "type": "Bool",
                    "description": "True, if the call is outgoing",
                    "required": true
                },
                {
                    "name": "is_video",
                    "type": "Bool",
                    "description": "True, if the call is a video call",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "CallState",
                    "description": "Call state",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "firebaseAuthenticationSettingsAndroid",
            "description": "Settings for Firebase Authentication in the official Android application",
            "type": "FirebaseAuthenticationSettings",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "firebaseAuthenticationSettingsIos",
            "description": "Settings for Firebase Authentication in the official iOS application",
            "type": "FirebaseAuthenticationSettings",
            "annotations": [
                {
                    "name": "device_token",
                    "type": "string",
                    "description": "Device token from Apple Push Notification service",
                    "required": true
                },
                {
                    "name": "is_app_sandbox",
                    "type": "Bool",
                    "description": "True, if App Sandbox is enabled",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "phoneNumberAuthenticationSettings",
            "description": "Contains settings for the authentication of the user's phone number",
            "type": "PhoneNumberAuthenticationSettings",
            "annotations": [
                {
                    "name": "allow_flash_call",
                    "type": "Bool",
                    "description": "Pass true if the authentication code may be sent via a flash call to the specified phone number",
                    "required": true
                },
                {
                    "name": "allow_missed_call",
                    "type": "Bool",
                    "description": "Pass true if the authentication code may be sent via a missed call to the specified phone number",
                    "required": true
                },
                {
                    "name": "is_current_phone_number",
                    "type": "Bool",
                    "description": "Pass true if the authenticated phone number is used on the current device",
                    "required": true
                },
                {
                    "name": "has_unknown_phone_number",
                    "type": "Bool",
                    "description": "Pass true if there is a SIM card in the current device, but it is not possible to check whether phone number matches",
                    "required": true
                },
                {
                    "name": "allow_sms_retriever_api",
                    "type": "Bool",
                    "description": "For official applications only. True, if the application can use Android SMS Retriever API (requires Google Play Services >= 10.2) to automatically receive the authentication code from the SMS. See https://developers.google.com/identity/sms-retriever/ for more details",
                    "required": true
                },
                {
                    "name": "firebase_authentication_settings",
                    "type": "FirebaseAuthenticationSettings",
                    "description": "For official Android and iOS applications only; pass null otherwise. Settings for Firebase Authentication",
                    "required": false
                },
                {
                    "name": "authentication_tokens",
                    "type": "vector<string>",
                    "description": "List of up to 20 authentication tokens, recently received in updateOption('authentication_token') in previously logged out sessions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "addedReaction",
            "description": "Represents a reaction applied to a message",
            "type": "AddedReaction",
            "annotations": [
                {
                    "name": "type",
                    "type": "ReactionType",
                    "description": "Type of the reaction",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the chat member, applied the reaction",
                    "required": true
                },
                {
                    "name": "is_outgoing",
                    "type": "Bool",
                    "description": "True, if the reaction was added by the current user",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the reaction was added",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "addedReactions",
            "description": "Represents a list of reactions added to a message",
            "type": "AddedReactions",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "The total number of found reactions",
                    "required": true
                },
                {
                    "name": "reactions",
                    "type": "vector<addedReaction>",
                    "description": "The list of added reactions",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "availableReaction",
            "description": "Represents an available reaction",
            "type": "AvailableReaction",
            "annotations": [
                {
                    "name": "type",
                    "type": "ReactionType",
                    "description": "Type of the reaction",
                    "required": true
                },
                {
                    "name": "needs_premium",
                    "type": "Bool",
                    "description": "True, if Telegram Premium is needed to send the reaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "availableReactions",
            "description": "Represents a list of reactions that can be added to a message",
            "type": "AvailableReactions",
            "annotations": [
                {
                    "name": "top_reactions",
                    "type": "vector<availableReaction>",
                    "description": "List of reactions to be shown at the top",
                    "required": true
                },
                {
                    "name": "recent_reactions",
                    "type": "vector<availableReaction>",
                    "description": "List of recently used reactions",
                    "required": true
                },
                {
                    "name": "popular_reactions",
                    "type": "vector<availableReaction>",
                    "description": "List of popular reactions",
                    "required": true
                },
                {
                    "name": "allow_custom_emoji",
                    "type": "Bool",
                    "description": "True, if any custom emoji reaction can be added by Telegram Premium subscribers",
                    "required": true
                },
                {
                    "name": "are_tags",
                    "type": "Bool",
                    "description": "True, if the reactions will be tags and the message can be found by them",
                    "required": true
                },
                {
                    "name": "unavailability_reason",
                    "type": "ReactionUnavailabilityReason",
                    "description": "The reason why the current user can't add reactions to the message, despite some other users can; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "emojiReaction",
            "description": "Contains information about an emoji reaction",
            "type": "EmojiReaction",
            "annotations": [
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Text representation of the reaction",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Reaction title",
                    "required": true
                },
                {
                    "name": "is_active",
                    "type": "Bool",
                    "description": "True, if the reaction can be added to new messages and enabled in chats",
                    "required": true
                },
                {
                    "name": "static_icon",
                    "type": "sticker",
                    "description": "Static icon for the reaction",
                    "required": true
                },
                {
                    "name": "appear_animation",
                    "type": "sticker",
                    "description": "Appear animation for the reaction",
                    "required": true
                },
                {
                    "name": "select_animation",
                    "type": "sticker",
                    "description": "Select animation for the reaction",
                    "required": true
                },
                {
                    "name": "activate_animation",
                    "type": "sticker",
                    "description": "Activate animation for the reaction",
                    "required": true
                },
                {
                    "name": "effect_animation",
                    "type": "sticker",
                    "description": "Effect animation for the reaction",
                    "required": true
                },
                {
                    "name": "around_animation",
                    "type": "sticker",
                    "description": "Around animation for the reaction; may be null",
                    "required": false
                },
                {
                    "name": "center_animation",
                    "type": "sticker",
                    "description": "Center animation for the reaction; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionUnavailabilityReasonAnonymousAdministrator",
            "description": "The user is an anonymous administrator in the supergroup, but isn't a creator of it, so they can't vote on behalf of the supergroup",
            "type": "ReactionUnavailabilityReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reactionUnavailabilityReasonGuest",
            "description": "The user isn't a member of the supergroup and can't send messages and reactions there without joining",
            "type": "ReactionUnavailabilityReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "animations",
            "description": "Represents a list of animations",
            "type": "Animations",
            "annotations": [
                {
                    "name": "animations",
                    "type": "vector<animation>",
                    "description": "List of animations",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "diceStickersRegular",
            "description": "A regular animated sticker",
            "type": "DiceStickers",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "The animated sticker with the dice animation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "diceStickersSlotMachine",
            "description": "Animated stickers to be combined into a slot machine",
            "type": "DiceStickers",
            "annotations": [
                {
                    "name": "background",
                    "type": "sticker",
                    "description": "The animated sticker with the slot machine background. The background animation must start playing after all reel animations finish",
                    "required": true
                },
                {
                    "name": "lever",
                    "type": "sticker",
                    "description": "The animated sticker with the lever animation. The lever animation must play once in the initial dice state",
                    "required": true
                },
                {
                    "name": "left_reel",
                    "type": "sticker",
                    "description": "The animated sticker with the left reel",
                    "required": true
                },
                {
                    "name": "center_reel",
                    "type": "sticker",
                    "description": "The animated sticker with the center reel",
                    "required": true
                },
                {
                    "name": "right_reel",
                    "type": "sticker",
                    "description": "The animated sticker with the right reel",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "importedContacts",
            "description": "Represents the result of an importContacts request",
            "type": "ImportedContacts",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers of the imported contacts in the same order as they were specified in the request; 0 if the contact is not yet a registered user",
                    "required": true
                },
                {
                    "name": "importer_count",
                    "type": "vector<int32>",
                    "description": "The number of users that imported the corresponding contact; 0 for already registered users or if unavailable",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "speechRecognitionResultPending",
            "description": "The speech recognition is ongoing",
            "type": "SpeechRecognitionResult",
            "annotations": [
                {
                    "name": "partial_text",
                    "type": "string",
                    "description": "Partially recognized text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "speechRecognitionResultText",
            "description": "The speech recognition successfully finished",
            "type": "SpeechRecognitionResult",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Recognized text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "speechRecognitionResultError",
            "description": "The speech recognition failed",
            "type": "SpeechRecognitionResult",
            "annotations": [
                {
                    "name": "error",
                    "type": "error",
                    "description": "Recognition error. An error with a message 'MSG_VOICE_TOO_LONG' is returned when media duration is too big to be recognized",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessConnection",
            "description": "Describes a connection of the bot with a business account",
            "type": "BusinessConnection",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the connection",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the business user that created the connection",
                    "required": true
                },
                {
                    "name": "user_chat_id",
                    "type": "int53",
                    "description": "Chat identifier of the private chat with the user",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the connection was established",
                    "required": true
                },
                {
                    "name": "can_reply",
                    "type": "Bool",
                    "description": "True, if the bot can send messages to the connected user; false otherwise",
                    "required": true
                },
                {
                    "name": "is_enabled",
                    "type": "Bool",
                    "description": "True, if the connection is enabled; false otherwise",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "attachmentMenuBotColor",
            "description": "Describes a color to highlight a bot added to attachment menu",
            "type": "AttachmentMenuBotColor",
            "annotations": [
                {
                    "name": "light_color",
                    "type": "int32",
                    "description": "Color in the RGB24 format for light themes",
                    "required": true
                },
                {
                    "name": "dark_color",
                    "type": "int32",
                    "description": "Color in the RGB24 format for dark themes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "attachmentMenuBot",
            "description": "Represents a bot, which can be added to attachment or side menu",
            "type": "AttachmentMenuBot",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the bot",
                    "required": true
                },
                {
                    "name": "supports_self_chat",
                    "type": "Bool",
                    "description": "True, if the bot supports opening from attachment menu in the chat with the bot",
                    "required": true
                },
                {
                    "name": "supports_user_chats",
                    "type": "Bool",
                    "description": "True, if the bot supports opening from attachment menu in private chats with ordinary users",
                    "required": true
                },
                {
                    "name": "supports_bot_chats",
                    "type": "Bool",
                    "description": "True, if the bot supports opening from attachment menu in private chats with other bots",
                    "required": true
                },
                {
                    "name": "supports_group_chats",
                    "type": "Bool",
                    "description": "True, if the bot supports opening from attachment menu in basic group and supergroup chats",
                    "required": true
                },
                {
                    "name": "supports_channel_chats",
                    "type": "Bool",
                    "description": "True, if the bot supports opening from attachment menu in channel chats",
                    "required": true
                },
                {
                    "name": "request_write_access",
                    "type": "Bool",
                    "description": "True, if the user must be asked for the permission to send messages to the bot",
                    "required": true
                },
                {
                    "name": "is_added",
                    "type": "Bool",
                    "description": "True, if the bot was explicitly added by the user. If the bot isn't added, then on the first bot launch toggleBotIsAddedToAttachmentMenu must be called and the bot must be added or removed",
                    "required": true
                },
                {
                    "name": "show_in_attachment_menu",
                    "type": "Bool",
                    "description": "True, if the bot must be shown in the attachment menu",
                    "required": true
                },
                {
                    "name": "show_in_side_menu",
                    "type": "Bool",
                    "description": "True, if the bot must be shown in the side menu",
                    "required": true
                },
                {
                    "name": "show_disclaimer_in_side_menu",
                    "type": "Bool",
                    "description": "True, if a disclaimer, why the bot is shown in the side menu, is needed",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name for the bot in attachment menu",
                    "required": true
                },
                {
                    "name": "name_color",
                    "type": "attachmentMenuBotColor",
                    "description": "Color to highlight selected name of the bot if appropriate; may be null",
                    "required": false
                },
                {
                    "name": "default_icon",
                    "type": "file",
                    "description": "Default icon for the bot in SVG format; may be null",
                    "required": false
                },
                {
                    "name": "ios_static_icon",
                    "type": "file",
                    "description": "Icon for the bot in SVG format for the official iOS app; may be null",
                    "required": false
                },
                {
                    "name": "ios_animated_icon",
                    "type": "file",
                    "description": "Icon for the bot in TGS format for the official iOS app; may be null",
                    "required": false
                },
                {
                    "name": "ios_side_menu_icon",
                    "type": "file",
                    "description": "Icon for the bot in PNG format for the official iOS app side menu; may be null",
                    "required": false
                },
                {
                    "name": "android_icon",
                    "type": "file",
                    "description": "Icon for the bot in TGS format for the official Android app; may be null",
                    "required": false
                },
                {
                    "name": "android_side_menu_icon",
                    "type": "file",
                    "description": "Icon for the bot in SVG format for the official Android app side menu; may be null",
                    "required": false
                },
                {
                    "name": "macos_icon",
                    "type": "file",
                    "description": "Icon for the bot in TGS format for the official native macOS app; may be null",
                    "required": false
                },
                {
                    "name": "macos_side_menu_icon",
                    "type": "file",
                    "description": "Icon for the bot in PNG format for the official macOS app side menu; may be null",
                    "required": false
                },
                {
                    "name": "icon_color",
                    "type": "attachmentMenuBotColor",
                    "description": "Color to highlight selected icon of the bot if appropriate; may be null",
                    "required": false
                },
                {
                    "name": "web_app_placeholder",
                    "type": "file",
                    "description": "Default placeholder for opened Web Apps in SVG format; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sentWebAppMessage",
            "description": "Information about the message sent by answerWebAppQuery",
            "type": "SentWebAppMessage",
            "annotations": [
                {
                    "name": "inline_message_id",
                    "type": "string",
                    "description": "Identifier of the sent inline message, if known",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botWriteAccessAllowReasonConnectedWebsite",
            "description": "The user connected a website by logging in using Telegram Login Widget on it",
            "type": "BotWriteAccessAllowReason",
            "annotations": [
                {
                    "name": "domain_name",
                    "type": "string",
                    "description": "Domain name of the connected website",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botWriteAccessAllowReasonAddedToAttachmentMenu",
            "description": "The user added the bot to attachment or side menu using toggleBotIsAddedToAttachmentMenu",
            "type": "BotWriteAccessAllowReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botWriteAccessAllowReasonLaunchedWebApp",
            "description": "The user launched a Web App using getWebAppLinkUrl",
            "type": "BotWriteAccessAllowReason",
            "annotations": [
                {
                    "name": "web_app",
                    "type": "webApp",
                    "description": "Information about the Web App",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botWriteAccessAllowReasonAcceptedRequest",
            "description": "The user accepted bot's request to send messages with allowBotToSendMessages",
            "type": "BotWriteAccessAllowReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "httpUrl",
            "description": "Contains an HTTP URL",
            "type": "HttpUrl",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userLink",
            "description": "Contains an HTTPS URL, which can be used to get information about a user",
            "type": "UserLink",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL",
                    "required": true
                },
                {
                    "name": "expires_in",
                    "type": "int32",
                    "description": "Left time for which the link is valid, in seconds; 0 if the link is a public username link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultAnimation",
            "description": "Represents a link to an animated GIF or an animated (i.e., without sound) H.264/MPEG-4 AVC video",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the query result",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the result thumbnail (JPEG, GIF, or MPEG4), if it exists",
                    "required": true
                },
                {
                    "name": "thumbnail_mime_type",
                    "type": "string",
                    "description": "MIME type of the video thumbnail. If non-empty, must be one of 'image/jpeg', 'image/gif' and 'video/mp4'",
                    "required": false
                },
                {
                    "name": "video_url",
                    "type": "string",
                    "description": "The URL of the video file (file size must not exceed 1MB)",
                    "required": true
                },
                {
                    "name": "video_mime_type",
                    "type": "string",
                    "description": "MIME type of the video file. Must be one of 'image/gif' and 'video/mp4'",
                    "required": true
                },
                {
                    "name": "video_duration",
                    "type": "int32",
                    "description": "Duration of the video, in seconds",
                    "required": true
                },
                {
                    "name": "video_width",
                    "type": "int32",
                    "description": "Width of the video",
                    "required": true
                },
                {
                    "name": "video_height",
                    "type": "int32",
                    "description": "Height of the video",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageAnimation, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultArticle",
            "description": "Represents a link to an article or web page",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the result, if it exists",
                    "required": true
                },
                {
                    "name": "hide_url",
                    "type": "Bool",
                    "description": "True, if the URL must be not shown",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "A short description of the result",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the result thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "thumbnail_width",
                    "type": "int32",
                    "description": "Thumbnail width, if known",
                    "required": true
                },
                {
                    "name": "thumbnail_height",
                    "type": "int32",
                    "description": "Thumbnail height, if known",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultAudio",
            "description": "Represents a link to an MP3 audio file",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the audio file",
                    "required": true
                },
                {
                    "name": "performer",
                    "type": "string",
                    "description": "Performer of the audio file",
                    "required": true
                },
                {
                    "name": "audio_url",
                    "type": "string",
                    "description": "The URL of the audio file",
                    "required": true
                },
                {
                    "name": "audio_duration",
                    "type": "int32",
                    "description": "Audio file duration, in seconds",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageAudio, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultContact",
            "description": "Represents a user contact",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "contact",
                    "type": "contact",
                    "description": "User contact",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the result thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "thumbnail_width",
                    "type": "int32",
                    "description": "Thumbnail width, if known",
                    "required": true
                },
                {
                    "name": "thumbnail_height",
                    "type": "int32",
                    "description": "Thumbnail height, if known",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultDocument",
            "description": "Represents a link to a file",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the resulting file",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Short description of the result, if known",
                    "required": true
                },
                {
                    "name": "document_url",
                    "type": "string",
                    "description": "URL of the file",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the file content; only 'application/pdf' and 'application/zip' are currently allowed",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "The URL of the file thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "thumbnail_width",
                    "type": "int32",
                    "description": "Width of the thumbnail",
                    "required": true
                },
                {
                    "name": "thumbnail_height",
                    "type": "int32",
                    "description": "Height of the thumbnail",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageDocument, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultGame",
            "description": "Represents a game",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "game_short_name",
                    "type": "string",
                    "description": "Short name of the game",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultLocation",
            "description": "Represents a point on the map",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "location",
                    "description": "Location result",
                    "required": true
                },
                {
                    "name": "live_period",
                    "type": "int32",
                    "description": "Amount of time relative to the message sent time until the location can be updated, in seconds",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the result thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "thumbnail_width",
                    "type": "int32",
                    "description": "Thumbnail width, if known",
                    "required": true
                },
                {
                    "name": "thumbnail_height",
                    "type": "int32",
                    "description": "Thumbnail height, if known",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultPhoto",
            "description": "Represents link to a JPEG image",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result, if known",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "A short description of the result, if known",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the photo thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "photo_url",
                    "type": "string",
                    "description": "The URL of the JPEG photo (photo size must not exceed 5MB)",
                    "required": true
                },
                {
                    "name": "photo_width",
                    "type": "int32",
                    "description": "Width of the photo",
                    "required": true
                },
                {
                    "name": "photo_height",
                    "type": "int32",
                    "description": "Height of the photo",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessagePhoto, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultSticker",
            "description": "Represents a link to a WEBP, TGS, or WEBM sticker",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the sticker thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "sticker_url",
                    "type": "string",
                    "description": "The URL of the WEBP, TGS, or WEBM sticker (sticker file size must not exceed 5MB)",
                    "required": true
                },
                {
                    "name": "sticker_width",
                    "type": "int32",
                    "description": "Width of the sticker",
                    "required": true
                },
                {
                    "name": "sticker_height",
                    "type": "int32",
                    "description": "Height of the sticker",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageSticker, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultVenue",
            "description": "Represents information about a venue",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "venue",
                    "type": "venue",
                    "description": "Venue result",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "URL of the result thumbnail, if it exists",
                    "required": true
                },
                {
                    "name": "thumbnail_width",
                    "type": "int32",
                    "description": "Thumbnail width, if known",
                    "required": true
                },
                {
                    "name": "thumbnail_height",
                    "type": "int32",
                    "description": "Thumbnail height, if known",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultVideo",
            "description": "Represents a link to a page containing an embedded video player or a video file",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "A short description of the result, if known",
                    "required": true
                },
                {
                    "name": "thumbnail_url",
                    "type": "string",
                    "description": "The URL of the video thumbnail (JPEG), if it exists",
                    "required": true
                },
                {
                    "name": "video_url",
                    "type": "string",
                    "description": "URL of the embedded video player or video file",
                    "required": true
                },
                {
                    "name": "mime_type",
                    "type": "string",
                    "description": "MIME type of the content of the video URL, only 'text/html' or 'video/mp4' are currently supported",
                    "required": true
                },
                {
                    "name": "video_width",
                    "type": "int32",
                    "description": "Width of the video",
                    "required": true
                },
                {
                    "name": "video_height",
                    "type": "int32",
                    "description": "Height of the video",
                    "required": true
                },
                {
                    "name": "video_duration",
                    "type": "int32",
                    "description": "Video duration, in seconds",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageVideo, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputInlineQueryResultVoiceNote",
            "description": "Represents a link to an opus-encoded audio file within an OGG container, single channel audio",
            "type": "InputInlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the voice note",
                    "required": true
                },
                {
                    "name": "voice_note_url",
                    "type": "string",
                    "description": "The URL of the voice note file",
                    "required": true
                },
                {
                    "name": "voice_note_duration",
                    "type": "int32",
                    "description": "Duration of the voice note, in seconds",
                    "required": true
                },
                {
                    "name": "reply_markup",
                    "type": "ReplyMarkup",
                    "description": "The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null",
                    "required": false
                },
                {
                    "name": "input_message_content",
                    "type": "InputMessageContent",
                    "description": "The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageVoiceNote, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultArticle",
            "description": "Represents a link to an article or web page",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL of the result, if it exists",
                    "required": true
                },
                {
                    "name": "hide_url",
                    "type": "Bool",
                    "description": "True, if the URL must be not shown",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "A short description of the result",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Result thumbnail in JPEG format; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultContact",
            "description": "Represents a user contact",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "contact",
                    "type": "contact",
                    "description": "A user contact",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Result thumbnail in JPEG format; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultLocation",
            "description": "Represents a point on the map",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "location",
                    "description": "Location result",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Result thumbnail in JPEG format; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultVenue",
            "description": "Represents information about a venue",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "venue",
                    "type": "venue",
                    "description": "Venue result",
                    "required": true
                },
                {
                    "name": "thumbnail",
                    "type": "thumbnail",
                    "description": "Result thumbnail in JPEG format; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultGame",
            "description": "Represents information about a game",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "game",
                    "type": "game",
                    "description": "Game result",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultAnimation",
            "description": "Represents an animation file",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Animation file",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Animation title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultAudio",
            "description": "Represents an audio file",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "audio",
                    "type": "audio",
                    "description": "Audio file",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultDocument",
            "description": "Represents a document",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "document",
                    "type": "document",
                    "description": "Document",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Document title",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Document description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultPhoto",
            "description": "Represents a photo",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Photo",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the result, if known",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "A short description of the result, if known",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultSticker",
            "description": "Represents a sticker",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "Sticker",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultVideo",
            "description": "Represents a video",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "video",
                    "type": "video",
                    "description": "Video",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the video",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "Description of the video",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultVoiceNote",
            "description": "Represents a voice note",
            "type": "InlineQueryResult",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique identifier of the query result",
                    "required": true
                },
                {
                    "name": "voice_note",
                    "type": "voiceNote",
                    "description": "Voice note",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the voice note",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultsButtonTypeStartBot",
            "description": "Describes the button that opens a private chat with the bot and sends a start message to the bot with the given parameter",
            "type": "InlineQueryResultsButtonType",
            "annotations": [
                {
                    "name": "parameter",
                    "type": "string",
                    "description": "The parameter for the bot start message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultsButtonTypeWebApp",
            "description": "Describes the button that opens a Web App by calling getWebAppUrl",
            "type": "InlineQueryResultsButtonType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "An HTTP URL to pass to getWebAppUrl",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResultsButton",
            "description": "Represents a button to be shown above inline query results",
            "type": "InlineQueryResultsButton",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "The text of the button",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "InlineQueryResultsButtonType",
                    "description": "Type of the button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inlineQueryResults",
            "description": "Represents the results of the inline query. Use sendInlineQueryResultMessage to send the result of the query",
            "type": "InlineQueryResults",
            "annotations": [
                {
                    "name": "inline_query_id",
                    "type": "int64",
                    "description": "Unique identifier of the inline query",
                    "required": true
                },
                {
                    "name": "button",
                    "type": "inlineQueryResultsButton",
                    "description": "Button to be shown above inline query results; may be null",
                    "required": false
                },
                {
                    "name": "results",
                    "type": "vector<InlineQueryResult>",
                    "description": "Results of the query",
                    "required": true
                },
                {
                    "name": "next_offset",
                    "type": "string",
                    "description": "The offset for the next request. If empty, then there are no more results",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callbackQueryPayloadData",
            "description": "The payload for a general callback button",
            "type": "CallbackQueryPayload",
            "annotations": [
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "Data that was attached to the callback button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callbackQueryPayloadDataWithPassword",
            "description": "The payload for a callback button requiring password",
            "type": "CallbackQueryPayload",
            "annotations": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "The 2-step verification password for the current user",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "Data that was attached to the callback button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callbackQueryPayloadGame",
            "description": "The payload for a game callback button",
            "type": "CallbackQueryPayload",
            "annotations": [
                {
                    "name": "game_short_name",
                    "type": "string",
                    "description": "A short name of the game that was attached to the callback button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "callbackQueryAnswer",
            "description": "Contains a bot's answer to a callback query",
            "type": "CallbackQueryAnswer",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the answer",
                    "required": true
                },
                {
                    "name": "show_alert",
                    "type": "Bool",
                    "description": "True, if an alert must be shown to the user instead of a toast notification",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to be opened",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "customRequestResult",
            "description": "Contains the result of a custom request",
            "type": "CustomRequestResult",
            "annotations": [
                {
                    "name": "result",
                    "type": "string",
                    "description": "A JSON-serialized result",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "gameHighScore",
            "description": "Contains one row of the game high score table",
            "type": "GameHighScore",
            "annotations": [
                {
                    "name": "position",
                    "type": "int32",
                    "description": "Position in the high score table",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "score",
                    "type": "int32",
                    "description": "User score",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "gameHighScores",
            "description": "Contains a list of game high scores",
            "type": "GameHighScores",
            "annotations": [
                {
                    "name": "scores",
                    "type": "vector<gameHighScore>",
                    "description": "A list of game high scores",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMessageEdited",
            "description": "A message was edited",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_message",
                    "type": "message",
                    "description": "The original message before the edit",
                    "required": true
                },
                {
                    "name": "new_message",
                    "type": "message",
                    "description": "The message after it was edited",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMessageDeleted",
            "description": "A message was deleted",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "Deleted message",
                    "required": true
                },
                {
                    "name": "can_report_anti_spam_false_positive",
                    "type": "Bool",
                    "description": "True, if the message deletion can be reported via reportSupergroupAntiSpamFalsePositive",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMessagePinned",
            "description": "A message was pinned",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "Pinned message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMessageUnpinned",
            "description": "A message was unpinned",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "Unpinned message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventPollStopped",
            "description": "A poll in a message was stopped",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The message with the poll",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberJoined",
            "description": "A new member joined the chat",
            "type": "ChatEventAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberJoinedByInviteLink",
            "description": "A new member joined the chat via an invite link",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "Invite link used to join the chat",
                    "required": true
                },
                {
                    "name": "via_chat_folder_invite_link",
                    "type": "Bool",
                    "description": "True, if the user has joined the chat using an invite link for a chat folder",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberJoinedByRequest",
            "description": "A new member was accepted to the chat by an administrator",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "approver_user_id",
                    "type": "int53",
                    "description": "User identifier of the chat administrator, approved user join request",
                    "required": true
                },
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "Invite link used to join the chat; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberInvited",
            "description": "A new chat member was invited",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "New member user identifier",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "ChatMemberStatus",
                    "description": "New member status",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberLeft",
            "description": "A member left the chat",
            "type": "ChatEventAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberPromoted",
            "description": "A chat member has gained/lost administrator status, or the list of their administrator privileges has changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Affected chat member user identifier",
                    "required": true
                },
                {
                    "name": "old_status",
                    "type": "ChatMemberStatus",
                    "description": "Previous status of the chat member",
                    "required": true
                },
                {
                    "name": "new_status",
                    "type": "ChatMemberStatus",
                    "description": "New status of the chat member",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMemberRestricted",
            "description": "A chat member was restricted/unrestricted or banned/unbanned, or the list of their restrictions has changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "member_id",
                    "type": "MessageSender",
                    "description": "Affected chat member identifier",
                    "required": true
                },
                {
                    "name": "old_status",
                    "type": "ChatMemberStatus",
                    "description": "Previous status of the chat member",
                    "required": true
                },
                {
                    "name": "new_status",
                    "type": "ChatMemberStatus",
                    "description": "New status of the chat member",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventAvailableReactionsChanged",
            "description": "The chat available reactions were changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_available_reactions",
                    "type": "ChatAvailableReactions",
                    "description": "Previous chat available reactions",
                    "required": true
                },
                {
                    "name": "new_available_reactions",
                    "type": "ChatAvailableReactions",
                    "description": "New chat available reactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventBackgroundChanged",
            "description": "The chat background was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_background",
                    "type": "chatBackground",
                    "description": "Previous background; may be null if none",
                    "required": false
                },
                {
                    "name": "new_background",
                    "type": "chatBackground",
                    "description": "New background; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventDescriptionChanged",
            "description": "The chat description was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_description",
                    "type": "string",
                    "description": "Previous chat description",
                    "required": true
                },
                {
                    "name": "new_description",
                    "type": "string",
                    "description": "New chat description",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventEmojiStatusChanged",
            "description": "The chat emoji status was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_emoji_status",
                    "type": "emojiStatus",
                    "description": "Previous emoji status; may be null if none",
                    "required": false
                },
                {
                    "name": "new_emoji_status",
                    "type": "emojiStatus",
                    "description": "New emoji status; may be null if none",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventLinkedChatChanged",
            "description": "The linked chat of a supergroup was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_linked_chat_id",
                    "type": "int53",
                    "description": "Previous supergroup linked chat identifier",
                    "required": true
                },
                {
                    "name": "new_linked_chat_id",
                    "type": "int53",
                    "description": "New supergroup linked chat identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventLocationChanged",
            "description": "The supergroup location was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_location",
                    "type": "chatLocation",
                    "description": "Previous location; may be null",
                    "required": false
                },
                {
                    "name": "new_location",
                    "type": "chatLocation",
                    "description": "New location; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventMessageAutoDeleteTimeChanged",
            "description": "The message auto-delete timer was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_message_auto_delete_time",
                    "type": "int32",
                    "description": "Previous value of message_auto_delete_time",
                    "required": true
                },
                {
                    "name": "new_message_auto_delete_time",
                    "type": "int32",
                    "description": "New value of message_auto_delete_time",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventPermissionsChanged",
            "description": "The chat permissions were changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_permissions",
                    "type": "chatPermissions",
                    "description": "Previous chat permissions",
                    "required": true
                },
                {
                    "name": "new_permissions",
                    "type": "chatPermissions",
                    "description": "New chat permissions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventPhotoChanged",
            "description": "The chat photo was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_photo",
                    "type": "chatPhoto",
                    "description": "Previous chat photo value; may be null",
                    "required": false
                },
                {
                    "name": "new_photo",
                    "type": "chatPhoto",
                    "description": "New chat photo value; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventSlowModeDelayChanged",
            "description": "The slow_mode_delay setting of a supergroup was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_slow_mode_delay",
                    "type": "int32",
                    "description": "Previous value of slow_mode_delay, in seconds",
                    "required": true
                },
                {
                    "name": "new_slow_mode_delay",
                    "type": "int32",
                    "description": "New value of slow_mode_delay, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventStickerSetChanged",
            "description": "The supergroup sticker set was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_sticker_set_id",
                    "type": "int64",
                    "description": "Previous identifier of the chat sticker set; 0 if none",
                    "required": true
                },
                {
                    "name": "new_sticker_set_id",
                    "type": "int64",
                    "description": "New identifier of the chat sticker set; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventCustomEmojiStickerSetChanged",
            "description": "The supergroup sticker set with allowed custom emoji was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_sticker_set_id",
                    "type": "int64",
                    "description": "Previous identifier of the chat sticker set; 0 if none",
                    "required": true
                },
                {
                    "name": "new_sticker_set_id",
                    "type": "int64",
                    "description": "New identifier of the chat sticker set; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventTitleChanged",
            "description": "The chat title was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_title",
                    "type": "string",
                    "description": "Previous chat title",
                    "required": true
                },
                {
                    "name": "new_title",
                    "type": "string",
                    "description": "New chat title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventUsernameChanged",
            "description": "The chat editable username was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_username",
                    "type": "string",
                    "description": "Previous chat username",
                    "required": true
                },
                {
                    "name": "new_username",
                    "type": "string",
                    "description": "New chat username",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventActiveUsernamesChanged",
            "description": "The chat active usernames were changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_usernames",
                    "type": "vector<string>",
                    "description": "Previous list of active usernames",
                    "required": true
                },
                {
                    "name": "new_usernames",
                    "type": "vector<string>",
                    "description": "New list of active usernames",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventAccentColorChanged",
            "description": "The chat accent color or background custom emoji were changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_accent_color_id",
                    "type": "int32",
                    "description": "Previous identifier of chat accent color",
                    "required": true
                },
                {
                    "name": "old_background_custom_emoji_id",
                    "type": "int64",
                    "description": "Previous identifier of the custom emoji; 0 if none",
                    "required": true
                },
                {
                    "name": "new_accent_color_id",
                    "type": "int32",
                    "description": "New identifier of chat accent color",
                    "required": true
                },
                {
                    "name": "new_background_custom_emoji_id",
                    "type": "int64",
                    "description": "New identifier of the custom emoji; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventProfileAccentColorChanged",
            "description": "The chat's profile accent color or profile background custom emoji were changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_profile_accent_color_id",
                    "type": "int32",
                    "description": "Previous identifier of chat's profile accent color; -1 if none",
                    "required": true
                },
                {
                    "name": "old_profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "Previous identifier of the custom emoji; 0 if none",
                    "required": true
                },
                {
                    "name": "new_profile_accent_color_id",
                    "type": "int32",
                    "description": "New identifier of chat's profile accent color; -1 if none",
                    "required": true
                },
                {
                    "name": "new_profile_background_custom_emoji_id",
                    "type": "int64",
                    "description": "New identifier of the custom emoji; 0 if none",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventHasProtectedContentToggled",
            "description": "The has_protected_content setting of a channel was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "has_protected_content",
                    "type": "Bool",
                    "description": "New value of has_protected_content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventInvitesToggled",
            "description": "The can_invite_users permission of a supergroup chat was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "can_invite_users",
                    "type": "Bool",
                    "description": "New value of can_invite_users permission",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventIsAllHistoryAvailableToggled",
            "description": "The is_all_history_available setting of a supergroup was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "is_all_history_available",
                    "type": "Bool",
                    "description": "New value of is_all_history_available",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventHasAggressiveAntiSpamEnabledToggled",
            "description": "The has_aggressive_anti_spam_enabled setting of a supergroup was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "has_aggressive_anti_spam_enabled",
                    "type": "Bool",
                    "description": "New value of has_aggressive_anti_spam_enabled",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventSignMessagesToggled",
            "description": "The sign_messages setting of a channel was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "sign_messages",
                    "type": "Bool",
                    "description": "New value of sign_messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventShowMessageSenderToggled",
            "description": "The show_message_sender setting of a channel was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "show_message_sender",
                    "type": "Bool",
                    "description": "New value of show_message_sender",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventInviteLinkEdited",
            "description": "A chat invite link was edited",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_invite_link",
                    "type": "chatInviteLink",
                    "description": "Previous information about the invite link",
                    "required": true
                },
                {
                    "name": "new_invite_link",
                    "type": "chatInviteLink",
                    "description": "New information about the invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventInviteLinkRevoked",
            "description": "A chat invite link was revoked",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "The invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventInviteLinkDeleted",
            "description": "A revoked chat invite link was deleted",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "chatInviteLink",
                    "description": "The invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventVideoChatCreated",
            "description": "A video chat was created",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Identifier of the video chat. The video chat can be received through the method getGroupCall",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventVideoChatEnded",
            "description": "A video chat was ended",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "group_call_id",
                    "type": "int32",
                    "description": "Identifier of the video chat. The video chat can be received through the method getGroupCall",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventVideoChatMuteNewParticipantsToggled",
            "description": "The mute_new_participants setting of a video chat was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "mute_new_participants",
                    "type": "Bool",
                    "description": "New value of the mute_new_participants setting",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventVideoChatParticipantIsMutedToggled",
            "description": "A video chat participant was muted or unmuted",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Identifier of the affected group call participant",
                    "required": true
                },
                {
                    "name": "is_muted",
                    "type": "Bool",
                    "description": "New value of is_muted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventVideoChatParticipantVolumeLevelChanged",
            "description": "A video chat participant volume level was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "participant_id",
                    "type": "MessageSender",
                    "description": "Identifier of the affected group call participant",
                    "required": true
                },
                {
                    "name": "volume_level",
                    "type": "int32",
                    "description": "New value of volume_level; 1-20000 in hundreds of percents",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventIsForumToggled",
            "description": "The is_forum setting of a channel was toggled",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "is_forum",
                    "type": "Bool",
                    "description": "New value of is_forum",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventForumTopicCreated",
            "description": "A new forum topic was created",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "topic_info",
                    "type": "forumTopicInfo",
                    "description": "Information about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventForumTopicEdited",
            "description": "A forum topic was edited",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_topic_info",
                    "type": "forumTopicInfo",
                    "description": "Old information about the topic",
                    "required": true
                },
                {
                    "name": "new_topic_info",
                    "type": "forumTopicInfo",
                    "description": "New information about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventForumTopicToggleIsClosed",
            "description": "A forum topic was closed or reopened",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "topic_info",
                    "type": "forumTopicInfo",
                    "description": "New information about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventForumTopicToggleIsHidden",
            "description": "The General forum topic was hidden or unhidden",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "topic_info",
                    "type": "forumTopicInfo",
                    "description": "New information about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventForumTopicDeleted",
            "description": "A forum topic was deleted",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "topic_info",
                    "type": "forumTopicInfo",
                    "description": "Information about the topic",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventForumTopicPinned",
            "description": "A pinned forum topic was changed",
            "type": "ChatEventAction",
            "annotations": [
                {
                    "name": "old_topic_info",
                    "type": "forumTopicInfo",
                    "description": "Information about the old pinned topic; may be null",
                    "required": false
                },
                {
                    "name": "new_topic_info",
                    "type": "forumTopicInfo",
                    "description": "Information about the new pinned topic; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEvent",
            "description": "Represents a chat event",
            "type": "ChatEvent",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Chat event identifier",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the event happened",
                    "required": true
                },
                {
                    "name": "member_id",
                    "type": "MessageSender",
                    "description": "Identifier of the user or chat who performed the action",
                    "required": true
                },
                {
                    "name": "action",
                    "type": "ChatEventAction",
                    "description": "The action",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEvents",
            "description": "Contains a list of chat events",
            "type": "ChatEvents",
            "annotations": [
                {
                    "name": "events",
                    "type": "vector<chatEvent>",
                    "description": "List of events",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatEventLogFilters",
            "description": "Represents a set of filters used to obtain a chat event log",
            "type": "ChatEventLogFilters",
            "annotations": [
                {
                    "name": "message_edits",
                    "type": "Bool",
                    "description": "True, if message edits need to be returned",
                    "required": true
                },
                {
                    "name": "message_deletions",
                    "type": "Bool",
                    "description": "True, if message deletions need to be returned",
                    "required": true
                },
                {
                    "name": "message_pins",
                    "type": "Bool",
                    "description": "True, if pin/unpin events need to be returned",
                    "required": true
                },
                {
                    "name": "member_joins",
                    "type": "Bool",
                    "description": "True, if members joining events need to be returned",
                    "required": true
                },
                {
                    "name": "member_leaves",
                    "type": "Bool",
                    "description": "True, if members leaving events need to be returned",
                    "required": true
                },
                {
                    "name": "member_invites",
                    "type": "Bool",
                    "description": "True, if invited member events need to be returned",
                    "required": true
                },
                {
                    "name": "member_promotions",
                    "type": "Bool",
                    "description": "True, if member promotion/demotion events need to be returned",
                    "required": true
                },
                {
                    "name": "member_restrictions",
                    "type": "Bool",
                    "description": "True, if member restricted/unrestricted/banned/unbanned events need to be returned",
                    "required": true
                },
                {
                    "name": "info_changes",
                    "type": "Bool",
                    "description": "True, if changes in chat information need to be returned",
                    "required": true
                },
                {
                    "name": "setting_changes",
                    "type": "Bool",
                    "description": "True, if changes in chat settings need to be returned",
                    "required": true
                },
                {
                    "name": "invite_link_changes",
                    "type": "Bool",
                    "description": "True, if changes to invite links need to be returned",
                    "required": true
                },
                {
                    "name": "video_chat_changes",
                    "type": "Bool",
                    "description": "True, if video chat actions need to be returned",
                    "required": true
                },
                {
                    "name": "forum_changes",
                    "type": "Bool",
                    "description": "True, if forum-related actions need to be returned",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "languagePackStringValueOrdinary",
            "description": "An ordinary language pack string",
            "type": "LanguagePackStringValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "string",
                    "description": "String value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "languagePackStringValuePluralized",
            "description": "A language pack string which has different forms based on the number of some object it mentions. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more information",
            "type": "LanguagePackStringValue",
            "annotations": [
                {
                    "name": "zero_value",
                    "type": "string",
                    "description": "Value for zero objects",
                    "required": true
                },
                {
                    "name": "one_value",
                    "type": "string",
                    "description": "Value for one object",
                    "required": true
                },
                {
                    "name": "two_value",
                    "type": "string",
                    "description": "Value for two objects",
                    "required": true
                },
                {
                    "name": "few_value",
                    "type": "string",
                    "description": "Value for few objects",
                    "required": true
                },
                {
                    "name": "many_value",
                    "type": "string",
                    "description": "Value for many objects",
                    "required": true
                },
                {
                    "name": "other_value",
                    "type": "string",
                    "description": "Default value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "languagePackStringValueDeleted",
            "description": "A deleted language pack string, the value must be taken from the built-in English language pack",
            "type": "LanguagePackStringValue",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "languagePackString",
            "description": "Represents one language pack string",
            "type": "LanguagePackString",
            "annotations": [
                {
                    "name": "key",
                    "type": "string",
                    "description": "String key",
                    "required": true
                },
                {
                    "name": "value",
                    "type": "LanguagePackStringValue",
                    "description": "String value; pass null if the string needs to be taken from the built-in English language pack",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "languagePackStrings",
            "description": "Contains a list of language pack strings",
            "type": "LanguagePackStrings",
            "annotations": [
                {
                    "name": "strings",
                    "type": "vector<languagePackString>",
                    "description": "A list of language pack strings",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "languagePackInfo",
            "description": "Contains information about a language pack",
            "type": "LanguagePackInfo",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique language pack identifier",
                    "required": true
                },
                {
                    "name": "base_language_pack_id",
                    "type": "string",
                    "description": "Identifier of a base language pack; may be empty. If a string is missed in the language pack, then it must be fetched from base language pack. Unsupported in custom language packs",
                    "required": false
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Language name",
                    "required": true
                },
                {
                    "name": "native_name",
                    "type": "string",
                    "description": "Name of the language in that language",
                    "required": true
                },
                {
                    "name": "plural_code",
                    "type": "string",
                    "description": "A language code to be used to apply plural forms. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more information",
                    "required": true
                },
                {
                    "name": "is_official",
                    "type": "Bool",
                    "description": "True, if the language pack is official",
                    "required": true
                },
                {
                    "name": "is_rtl",
                    "type": "Bool",
                    "description": "True, if the language pack strings are RTL",
                    "required": true
                },
                {
                    "name": "is_beta",
                    "type": "Bool",
                    "description": "True, if the language pack is a beta language pack",
                    "required": true
                },
                {
                    "name": "is_installed",
                    "type": "Bool",
                    "description": "True, if the language pack is installed by the current user",
                    "required": true
                },
                {
                    "name": "total_string_count",
                    "type": "int32",
                    "description": "Total number of non-deleted strings from the language pack",
                    "required": true
                },
                {
                    "name": "translated_string_count",
                    "type": "int32",
                    "description": "Total number of translated strings from the language pack",
                    "required": true
                },
                {
                    "name": "local_string_count",
                    "type": "int32",
                    "description": "Total number of non-deleted strings from the language pack available locally",
                    "required": true
                },
                {
                    "name": "translation_url",
                    "type": "string",
                    "description": "Link to language translation interface; empty for custom local language packs",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "localizationTargetInfo",
            "description": "Contains information about the current localization target",
            "type": "LocalizationTargetInfo",
            "annotations": [
                {
                    "name": "language_packs",
                    "type": "vector<languagePackInfo>",
                    "description": "List of available language packs for this application",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeSupergroupCount",
            "description": "The maximum number of joined supergroups and channels",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypePinnedChatCount",
            "description": "The maximum number of pinned chats in the main chat list",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeCreatedPublicChatCount",
            "description": "The maximum number of created public chats",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeSavedAnimationCount",
            "description": "The maximum number of saved animations",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeFavoriteStickerCount",
            "description": "The maximum number of favorite stickers",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeChatFolderCount",
            "description": "The maximum number of chat folders",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeChatFolderChosenChatCount",
            "description": "The maximum number of pinned and always included, or always excluded chats in a chat folder",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypePinnedArchivedChatCount",
            "description": "The maximum number of pinned chats in the archive chat list",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypePinnedSavedMessagesTopicCount",
            "description": "The maximum number of pinned Saved Messages topics",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeCaptionLength",
            "description": "The maximum length of sent media caption",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeBioLength",
            "description": "The maximum length of the user's bio",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeChatFolderInviteLinkCount",
            "description": "The maximum number of invite links for a chat folder",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeShareableChatFolderCount",
            "description": "The maximum number of added shareable chat folders",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeActiveStoryCount",
            "description": "The maximum number of active stories",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeWeeklySentStoryCount",
            "description": "The maximum number of stories sent per week",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeMonthlySentStoryCount",
            "description": "The maximum number of stories sent per month",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeStoryCaptionLength",
            "description": "The maximum length of captions of sent stories",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeStorySuggestedReactionAreaCount",
            "description": "The maximum number of suggested reaction areas on a story",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimitTypeSimilarChatCount",
            "description": "The maximum number of received similar chats",
            "type": "PremiumLimitType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureIncreasedLimits",
            "description": "Increased limits",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureIncreasedUploadFileSize",
            "description": "Increased maximum upload file size",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureImprovedDownloadSpeed",
            "description": "Improved download speed",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureVoiceRecognition",
            "description": "The ability to convert voice notes to text",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureDisabledAds",
            "description": "Disabled ads",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureUniqueReactions",
            "description": "Allowed to use more reactions",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureUniqueStickers",
            "description": "Allowed to use premium stickers with unique effects",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureCustomEmoji",
            "description": "Allowed to use custom emoji stickers in message texts and captions",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureAdvancedChatManagement",
            "description": "Ability to change position of the main chat list, archive and mute all new chats from non-contacts, and completely disable notifications about the user's contacts joined Telegram",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureProfileBadge",
            "description": "A badge in the user's profile",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureEmojiStatus",
            "description": "The ability to show an emoji status along with the user's name",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureAnimatedProfilePhoto",
            "description": "Profile photo animation on message and chat screens",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureForumTopicIcon",
            "description": "The ability to set a custom emoji as a forum topic icon",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureAppIcons",
            "description": "Allowed to set a premium application icons",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureRealTimeChatTranslation",
            "description": "Allowed to translate chat messages real-time",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureUpgradedStories",
            "description": "Allowed to use many additional features for stories",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureChatBoost",
            "description": "The ability to boost chats",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureAccentColor",
            "description": "The ability to choose accent color for replies and user profile",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureBackgroundForBoth",
            "description": "The ability to set private chat background for both users",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureSavedMessagesTags",
            "description": "The ability to use tags in Saved Messages",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureMessagePrivacy",
            "description": "The ability to disallow incoming voice and video note messages in private chats using setUserPrivacySettingRules with userPrivacySettingAllowPrivateVoiceAndVideoNoteMessages",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureLastSeenTimes",
            "description": "The ability to view last seen and read times of other users even they can't view last seen or read time for the current user",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureBusiness",
            "description": "The ability to use Business features",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatureMessageEffects",
            "description": "The ability to use all available message effects",
            "type": "PremiumFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureLocation",
            "description": "The ability to set location",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureOpeningHours",
            "description": "The ability to set opening hours",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureQuickReplies",
            "description": "The ability to use quick replies",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureGreetingMessage",
            "description": "The ability to set up a greeting message",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureAwayMessage",
            "description": "The ability to set up an away message",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureAccountLinks",
            "description": "The ability to create links to the business account with predefined message text",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureStartPage",
            "description": "The ability to customize start page",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureBots",
            "description": "The ability to connect a bot to the account",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureEmojiStatus",
            "description": "The ability to show an emoji status along with the business name",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureChatFolderTags",
            "description": "The ability to display folder names for each chat in the chat list",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatureUpgradedStories",
            "description": "Allowed to use many additional features for stories",
            "type": "BusinessFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeaturePriorityOrder",
            "description": "Stories of the current user are displayed before stories of non-Premium contacts, supergroups, and channels",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeatureStealthMode",
            "description": "The ability to hide the fact that the user viewed other's stories",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeaturePermanentViewsHistory",
            "description": "The ability to check who opened the current user's stories after they expire",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeatureCustomExpirationDuration",
            "description": "The ability to set custom expiration duration for stories",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeatureSaveStories",
            "description": "The ability to save other's unprotected stories",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeatureLinksAndFormatting",
            "description": "The ability to use links and formatting in story caption, and use inputStoryAreaTypeLink areas",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumStoryFeatureVideoQuality",
            "description": "The ability to choose better quality for viewed stories",
            "type": "PremiumStoryFeature",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumLimit",
            "description": "Contains information about a limit, increased for Premium users",
            "type": "PremiumLimit",
            "annotations": [
                {
                    "name": "type",
                    "type": "PremiumLimitType",
                    "description": "The type of the limit",
                    "required": true
                },
                {
                    "name": "default_value",
                    "type": "int32",
                    "description": "Default value of the limit",
                    "required": true
                },
                {
                    "name": "premium_value",
                    "type": "int32",
                    "description": "Value of the limit for Premium users",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeatures",
            "description": "Contains information about features, available to Premium users",
            "type": "PremiumFeatures",
            "annotations": [
                {
                    "name": "features",
                    "type": "vector<PremiumFeature>",
                    "description": "The list of available features",
                    "required": true
                },
                {
                    "name": "limits",
                    "type": "vector<premiumLimit>",
                    "description": "The list of limits, increased for Premium users",
                    "required": true
                },
                {
                    "name": "payment_link",
                    "type": "InternalLinkType",
                    "description": "An internal link to be opened to pay for Telegram Premium if store payment isn't possible; may be null if direct payment isn't available",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeatures",
            "description": "Contains information about features, available to Business user accounts",
            "type": "BusinessFeatures",
            "annotations": [
                {
                    "name": "features",
                    "type": "vector<BusinessFeature>",
                    "description": "The list of available business features",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumSourceLimitExceeded",
            "description": "A limit was exceeded",
            "type": "PremiumSource",
            "annotations": [
                {
                    "name": "limit_type",
                    "type": "PremiumLimitType",
                    "description": "Type of the exceeded limit",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumSourceFeature",
            "description": "A user tried to use a Premium feature",
            "type": "PremiumSource",
            "annotations": [
                {
                    "name": "feature",
                    "type": "PremiumFeature",
                    "description": "The used feature",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumSourceBusinessFeature",
            "description": "A user tried to use a Business feature",
            "type": "PremiumSource",
            "annotations": [
                {
                    "name": "feature",
                    "type": "BusinessFeature",
                    "description": "The used feature; pass null if none specific feature was used",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumSourceStoryFeature",
            "description": "A user tried to use a Premium story feature",
            "type": "PremiumSource",
            "annotations": [
                {
                    "name": "feature",
                    "type": "PremiumStoryFeature",
                    "description": "The used feature",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumSourceLink",
            "description": "A user opened an internal link of the type internalLinkTypePremiumFeatures",
            "type": "PremiumSource",
            "annotations": [
                {
                    "name": "referrer",
                    "type": "string",
                    "description": "The referrer from the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumSourceSettings",
            "description": "A user opened the Premium features screen from settings",
            "type": "PremiumSource",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumFeaturePromotionAnimation",
            "description": "Describes a promotion animation for a Premium feature",
            "type": "PremiumFeaturePromotionAnimation",
            "annotations": [
                {
                    "name": "feature",
                    "type": "PremiumFeature",
                    "description": "Premium feature",
                    "required": true
                },
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Promotion animation for the feature",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "businessFeaturePromotionAnimation",
            "description": "Describes a promotion animation for a Business feature",
            "type": "BusinessFeaturePromotionAnimation",
            "annotations": [
                {
                    "name": "feature",
                    "type": "BusinessFeature",
                    "description": "Business feature",
                    "required": true
                },
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Promotion animation for the feature",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "premiumState",
            "description": "Contains state of Telegram Premium subscription and promotion videos for Premium features",
            "type": "PremiumState",
            "annotations": [
                {
                    "name": "state",
                    "type": "formattedText",
                    "description": "Text description of the state of the current Premium subscription; may be empty if the current user has no Telegram Premium subscription",
                    "required": false
                },
                {
                    "name": "payment_options",
                    "type": "vector<premiumStatePaymentOption>",
                    "description": "The list of available options for buying Telegram Premium",
                    "required": true
                },
                {
                    "name": "animations",
                    "type": "vector<premiumFeaturePromotionAnimation>",
                    "description": "The list of available promotion animations for Premium features",
                    "required": true
                },
                {
                    "name": "business_animations",
                    "type": "vector<businessFeaturePromotionAnimation>",
                    "description": "The list of available promotion animations for Business features",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storePaymentPurposePremiumSubscription",
            "description": "The user subscribing to Telegram Premium",
            "type": "StorePaymentPurpose",
            "annotations": [
                {
                    "name": "is_restore",
                    "type": "Bool",
                    "description": "Pass true if this is a restore of a Telegram Premium purchase; only for App Store",
                    "required": true
                },
                {
                    "name": "is_upgrade",
                    "type": "Bool",
                    "description": "Pass true if this is an upgrade from a monthly subscription to early subscription; only for App Store",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storePaymentPurposeGiftedPremium",
            "description": "The user gifting Telegram Premium to another user",
            "type": "StorePaymentPurpose",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user to which Telegram Premium is gifted",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storePaymentPurposePremiumGiftCodes",
            "description": "The user creating Telegram Premium gift codes for other users",
            "type": "StorePaymentPurpose",
            "annotations": [
                {
                    "name": "boosted_chat_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel chat, which will be automatically boosted by the users for duration of the Premium subscription and which is administered by the user; 0 if none",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the users which can activate the gift codes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storePaymentPurposePremiumGiveaway",
            "description": "The user creating a Telegram Premium giveaway",
            "type": "StorePaymentPurpose",
            "annotations": [
                {
                    "name": "parameters",
                    "type": "premiumGiveawayParameters",
                    "description": "Giveaway parameters",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storePaymentPurposeStars",
            "description": "The user buying Telegram Stars",
            "type": "StorePaymentPurpose",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of bought Telegram Stars",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storePaymentPurposeGiftedStars",
            "description": "The user buying Telegram Stars for other users",
            "type": "StorePaymentPurpose",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user to which Telegram Stars are gifted",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of bought Telegram Stars",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "telegramPaymentPurposePremiumGiftCodes",
            "description": "The user creating Telegram Premium gift codes for other users",
            "type": "TelegramPaymentPurpose",
            "annotations": [
                {
                    "name": "boosted_chat_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel chat, which will be automatically boosted by the users for duration of the Premium subscription and which is administered by the user; 0 if none",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the users which can activate the gift codes",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active for the users",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "telegramPaymentPurposePremiumGiveaway",
            "description": "The user creating a Telegram Premium giveaway",
            "type": "TelegramPaymentPurpose",
            "annotations": [
                {
                    "name": "parameters",
                    "type": "premiumGiveawayParameters",
                    "description": "Giveaway parameters",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Number of users which will be able to activate the gift codes",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active for the users",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "telegramPaymentPurposeStars",
            "description": "The user buying Telegram Stars",
            "type": "TelegramPaymentPurpose",
            "annotations": [
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of bought Telegram Stars",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "telegramPaymentPurposeGiftedStars",
            "description": "The user buying Telegram Stars for other users",
            "type": "TelegramPaymentPurpose",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user to which Telegram Stars are gifted",
                    "required": true
                },
                {
                    "name": "currency",
                    "type": "string",
                    "description": "ISO 4217 currency code of the payment currency",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "int53",
                    "description": "Paid amount, in the smallest units of the currency",
                    "required": true
                },
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of bought Telegram Stars",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "telegramPaymentPurposeJoinChat",
            "description": "The user joins a chat and subscribes to regular payments in Telegram Stars",
            "type": "TelegramPaymentPurpose",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Invite link to use",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenFirebaseCloudMessaging",
            "description": "A token for Firebase Cloud Messaging",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Device registration token; may be empty to deregister a device",
                    "required": false
                },
                {
                    "name": "encrypt",
                    "type": "Bool",
                    "description": "True, if push notifications must be additionally encrypted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenApplePush",
            "description": "A token for Apple Push Notification service",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "device_token",
                    "type": "string",
                    "description": "Device token; may be empty to deregister a device",
                    "required": false
                },
                {
                    "name": "is_app_sandbox",
                    "type": "Bool",
                    "description": "True, if App Sandbox is enabled",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenApplePushVoIP",
            "description": "A token for Apple Push Notification service VoIP notifications",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "device_token",
                    "type": "string",
                    "description": "Device token; may be empty to deregister a device",
                    "required": false
                },
                {
                    "name": "is_app_sandbox",
                    "type": "Bool",
                    "description": "True, if App Sandbox is enabled",
                    "required": true
                },
                {
                    "name": "encrypt",
                    "type": "Bool",
                    "description": "True, if push notifications must be additionally encrypted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenWindowsPush",
            "description": "A token for Windows Push Notification Services",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "access_token",
                    "type": "string",
                    "description": "The access token that will be used to send notifications; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenMicrosoftPush",
            "description": "A token for Microsoft Push Notification Service",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "channel_uri",
                    "type": "string",
                    "description": "Push notification channel URI; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenMicrosoftPushVoIP",
            "description": "A token for Microsoft Push Notification Service VoIP channel",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "channel_uri",
                    "type": "string",
                    "description": "Push notification channel URI; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenWebPush",
            "description": "A token for web Push API",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "endpoint",
                    "type": "string",
                    "description": "Absolute URL exposed by the push service where the application server can send push messages; may be empty to deregister a device",
                    "required": false
                },
                {
                    "name": "p256dh_base64url",
                    "type": "string",
                    "description": "Base64url-encoded P-256 elliptic curve Diffie-Hellman public key",
                    "required": true
                },
                {
                    "name": "auth_base64url",
                    "type": "string",
                    "description": "Base64url-encoded authentication secret",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenSimplePush",
            "description": "A token for Simple Push API for Firefox OS",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "endpoint",
                    "type": "string",
                    "description": "Absolute URL exposed by the push service where the application server can send push messages; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenUbuntuPush",
            "description": "A token for Ubuntu Push Client service",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Token; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenBlackBerryPush",
            "description": "A token for BlackBerry Push Service",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Token; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenTizenPush",
            "description": "A token for Tizen Push Service",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "reg_id",
                    "type": "string",
                    "description": "Push service registration identifier; may be empty to deregister a device",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deviceTokenHuaweiPush",
            "description": "A token for HUAWEI Push Service",
            "type": "DeviceToken",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "Device registration token; may be empty to deregister a device",
                    "required": false
                },
                {
                    "name": "encrypt",
                    "type": "Bool",
                    "description": "True, if push notifications must be additionally encrypted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushReceiverId",
            "description": "Contains a globally unique push receiver identifier, which can be used to identify which account has received a push notification",
            "type": "PushReceiverId",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "The globally unique identifier of push notification subscription",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundFillSolid",
            "description": "Describes a solid fill of a background",
            "type": "BackgroundFill",
            "annotations": [
                {
                    "name": "color",
                    "type": "int32",
                    "description": "A color of the background in the RGB24 format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundFillGradient",
            "description": "Describes a gradient fill of a background",
            "type": "BackgroundFill",
            "annotations": [
                {
                    "name": "top_color",
                    "type": "int32",
                    "description": "A top color of the background in the RGB24 format",
                    "required": true
                },
                {
                    "name": "bottom_color",
                    "type": "int32",
                    "description": "A bottom color of the background in the RGB24 format",
                    "required": true
                },
                {
                    "name": "rotation_angle",
                    "type": "int32",
                    "description": "Clockwise rotation angle of the gradient, in degrees; 0-359. Must always be divisible by 45",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundFillFreeformGradient",
            "description": "Describes a freeform gradient fill of a background",
            "type": "BackgroundFill",
            "annotations": [
                {
                    "name": "colors",
                    "type": "vector<int32>",
                    "description": "A list of 3 or 4 colors of the freeform gradient in the RGB24 format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundTypeWallpaper",
            "description": "A wallpaper in JPEG format",
            "type": "BackgroundType",
            "annotations": [
                {
                    "name": "is_blurred",
                    "type": "Bool",
                    "description": "True, if the wallpaper must be downscaled to fit in 450x450 square and then box-blurred with radius 12",
                    "required": true
                },
                {
                    "name": "is_moving",
                    "type": "Bool",
                    "description": "True, if the background needs to be slightly moved when device is tilted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundTypePattern",
            "description": "A PNG or TGV (gzipped subset of SVG with MIME type 'application/x-tgwallpattern') pattern to be combined with the background fill chosen by the user",
            "type": "BackgroundType",
            "annotations": [
                {
                    "name": "fill",
                    "type": "BackgroundFill",
                    "description": "Fill of the background",
                    "required": true
                },
                {
                    "name": "intensity",
                    "type": "int32",
                    "description": "Intensity of the pattern when it is shown above the filled background; 0-100",
                    "required": true
                },
                {
                    "name": "is_inverted",
                    "type": "Bool",
                    "description": "True, if the background fill must be applied only to the pattern itself. All other pixels are black in this case. For dark themes only",
                    "required": true
                },
                {
                    "name": "is_moving",
                    "type": "Bool",
                    "description": "True, if the background needs to be slightly moved when device is tilted",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundTypeFill",
            "description": "A filled background",
            "type": "BackgroundType",
            "annotations": [
                {
                    "name": "fill",
                    "type": "BackgroundFill",
                    "description": "The background fill",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "backgroundTypeChatTheme",
            "description": "A background from a chat theme; can be used only as a chat background in channels",
            "type": "BackgroundType",
            "annotations": [
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "Name of the chat theme",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputBackgroundLocal",
            "description": "A background from a local file",
            "type": "InputBackground",
            "annotations": [
                {
                    "name": "background",
                    "type": "InputFile",
                    "description": "Background file to use. Only inputFileLocal and inputFileGenerated are supported. The file must be in JPEG format for wallpapers and in PNG format for patterns",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputBackgroundRemote",
            "description": "A background from the server",
            "type": "InputBackground",
            "annotations": [
                {
                    "name": "background_id",
                    "type": "int64",
                    "description": "The background identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputBackgroundPrevious",
            "description": "A background previously set in the chat; for chat backgrounds only",
            "type": "InputBackground",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Identifier of the message with the background",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatTheme",
            "description": "Describes a chat theme",
            "type": "ChatTheme",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Theme name",
                    "required": true
                },
                {
                    "name": "light_settings",
                    "type": "themeSettings",
                    "description": "Theme settings for a light chat theme",
                    "required": true
                },
                {
                    "name": "dark_settings",
                    "type": "themeSettings",
                    "description": "Theme settings for a dark chat theme",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "timeZone",
            "description": "Describes a time zone",
            "type": "TimeZone",
            "annotations": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique time zone identifier",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Time zone name",
                    "required": true
                },
                {
                    "name": "utc_time_offset",
                    "type": "int32",
                    "description": "Current UTC time offset for the time zone",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "timeZones",
            "description": "Contains a list of time zones",
            "type": "TimeZones",
            "annotations": [
                {
                    "name": "time_zones",
                    "type": "vector<timeZone>",
                    "description": "A list of time zones",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "hashtags",
            "description": "Contains a list of hashtags",
            "type": "Hashtags",
            "annotations": [
                {
                    "name": "hashtags",
                    "type": "vector<string>",
                    "description": "A list of hashtags",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendStoryResultOk",
            "description": "A story can be sent",
            "type": "CanSendStoryResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendStoryResultPremiumNeeded",
            "description": "The user must subscribe to Telegram Premium to be able to post stories",
            "type": "CanSendStoryResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendStoryResultBoostNeeded",
            "description": "The chat must be boosted first by Telegram Premium subscribers to post more stories. Call getChatBoostStatus to get current boost status of the chat",
            "type": "CanSendStoryResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendStoryResultActiveStoryLimitExceeded",
            "description": "The limit for the number of active stories exceeded. The user can buy Telegram Premium, delete an active story, or wait for the oldest story to expire",
            "type": "CanSendStoryResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendStoryResultWeeklyLimitExceeded",
            "description": "The weekly limit for the number of posted stories exceeded. The user needs to buy Telegram Premium or wait specified time",
            "type": "CanSendStoryResult",
            "annotations": [
                {
                    "name": "retry_after",
                    "type": "int32",
                    "description": "Time left before the user can send the next story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendStoryResultMonthlyLimitExceeded",
            "description": "The monthly limit for the number of posted stories exceeded. The user needs to buy Telegram Premium or wait specified time",
            "type": "CanSendStoryResult",
            "annotations": [
                {
                    "name": "retry_after",
                    "type": "int32",
                    "description": "Time left before the user can send the next story",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canTransferOwnershipResultOk",
            "description": "The session can be used",
            "type": "CanTransferOwnershipResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canTransferOwnershipResultPasswordNeeded",
            "description": "The 2-step verification needs to be enabled first",
            "type": "CanTransferOwnershipResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canTransferOwnershipResultPasswordTooFresh",
            "description": "The 2-step verification was enabled recently, user needs to wait",
            "type": "CanTransferOwnershipResult",
            "annotations": [
                {
                    "name": "retry_after",
                    "type": "int32",
                    "description": "Time left before the session can be used to transfer ownership of a chat, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canTransferOwnershipResultSessionTooFresh",
            "description": "The session was created recently, user needs to wait",
            "type": "CanTransferOwnershipResult",
            "annotations": [
                {
                    "name": "retry_after",
                    "type": "int32",
                    "description": "Time left before the session can be used to transfer ownership of a chat, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkChatUsernameResultOk",
            "description": "The username can be set",
            "type": "CheckChatUsernameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkChatUsernameResultUsernameInvalid",
            "description": "The username is invalid",
            "type": "CheckChatUsernameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkChatUsernameResultUsernameOccupied",
            "description": "The username is occupied",
            "type": "CheckChatUsernameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkChatUsernameResultUsernamePurchasable",
            "description": "The username can be purchased at https://fragment.com. Information about the username can be received using getCollectibleItemInfo",
            "type": "CheckChatUsernameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkChatUsernameResultPublicChatsTooMany",
            "description": "The user has too many chats with username, one of them must be made private first",
            "type": "CheckChatUsernameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkChatUsernameResultPublicGroupsUnavailable",
            "description": "The user can't be a member of a public supergroup",
            "type": "CheckChatUsernameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkStickerSetNameResultOk",
            "description": "The name can be set",
            "type": "CheckStickerSetNameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkStickerSetNameResultNameInvalid",
            "description": "The name is invalid",
            "type": "CheckStickerSetNameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "checkStickerSetNameResultNameOccupied",
            "description": "The name is occupied",
            "type": "CheckStickerSetNameResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "resetPasswordResultOk",
            "description": "The password was reset",
            "type": "ResetPasswordResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "resetPasswordResultPending",
            "description": "The password reset request is pending",
            "type": "ResetPasswordResult",
            "annotations": [
                {
                    "name": "pending_reset_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) after which the password can be reset immediately using resetPassword",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "resetPasswordResultDeclined",
            "description": "The password reset request was declined",
            "type": "ResetPasswordResult",
            "annotations": [
                {
                    "name": "retry_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the password reset can be retried",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageFileTypePrivate",
            "description": "The messages were exported from a private chat",
            "type": "MessageFileType",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the other party; may be empty if unrecognized",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageFileTypeGroup",
            "description": "The messages were exported from a group chat",
            "type": "MessageFileType",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the group chat; may be empty if unrecognized",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageFileTypeUnknown",
            "description": "The messages were exported from a chat of unknown type",
            "type": "MessageFileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentHidden",
            "description": "A general message with hidden content",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentAnimation",
            "description": "An animation message (GIF-style).",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "animation",
                    "type": "animation",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "string",
                    "description": "Animation caption",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentAudio",
            "description": "An audio message",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "audio",
                    "type": "audio",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentContact",
            "description": "A message with a user contact",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Contact's name",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentContactRegistered",
            "description": "A contact has registered with Telegram",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentDocument",
            "description": "A document message (a general file)",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "document",
                    "type": "document",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentGame",
            "description": "A message with a game",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Game title, empty for pinned game message",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentGameScore",
            "description": "A new high score was achieved in a game",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "Game title, empty for pinned message",
                    "required": true
                },
                {
                    "name": "score",
                    "type": "int32",
                    "description": "New score, 0 for pinned message",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentInvoice",
            "description": "A message with an invoice from a bot",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "price",
                    "type": "string",
                    "description": "Product price",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentLocation",
            "description": "A message with a location",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "is_live",
                    "type": "Bool",
                    "description": "True, if the location is live",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentPaidMedia",
            "description": "A message with paid media",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "Number of Telegram Stars needed to buy access to the media in the message; 0 for pinned message",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentPhoto",
            "description": "A photo message",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "photo",
                    "type": "photo",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "string",
                    "description": "Photo caption",
                    "required": true
                },
                {
                    "name": "is_secret",
                    "type": "Bool",
                    "description": "True, if the photo is secret",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentPoll",
            "description": "A message with a poll",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "question",
                    "type": "string",
                    "description": "Poll question",
                    "required": true
                },
                {
                    "name": "is_regular",
                    "type": "Bool",
                    "description": "True, if the poll is regular and not in quiz mode",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentPremiumGiftCode",
            "description": "A message with a Telegram Premium gift code created for the user",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentPremiumGiveaway",
            "description": "A message with a Telegram Premium giveaway",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "winner_count",
                    "type": "int32",
                    "description": "Number of users which will receive Telegram Premium subscription gift codes; 0 for pinned message",
                    "required": true
                },
                {
                    "name": "month_count",
                    "type": "int32",
                    "description": "Number of months the Telegram Premium subscription will be active after code activation; 0 for pinned message",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentScreenshotTaken",
            "description": "A screenshot of a message in the chat has been taken",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentSticker",
            "description": "A message with a sticker",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "sticker",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "emoji",
                    "type": "string",
                    "description": "Emoji corresponding to the sticker; may be empty",
                    "required": false
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentStory",
            "description": "A message with a story",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentText",
            "description": "A text message",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Message text",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentVideo",
            "description": "A video message",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "video",
                    "type": "video",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "caption",
                    "type": "string",
                    "description": "Video caption",
                    "required": true
                },
                {
                    "name": "is_secret",
                    "type": "Bool",
                    "description": "True, if the video is secret",
                    "required": true
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentVideoNote",
            "description": "A video note message",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "video_note",
                    "type": "videoNote",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentVoiceNote",
            "description": "A voice note message",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "voice_note",
                    "type": "voiceNote",
                    "description": "Message content; may be null",
                    "required": false
                },
                {
                    "name": "is_pinned",
                    "type": "Bool",
                    "description": "True, if the message is a pinned message with the specified content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentBasicGroupChatCreate",
            "description": "A newly created basic group",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatAddMembers",
            "description": "New chat members were invited to a group",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "member_name",
                    "type": "string",
                    "description": "Name of the added member",
                    "required": true
                },
                {
                    "name": "is_current_user",
                    "type": "Bool",
                    "description": "True, if the current user was added to the group",
                    "required": true
                },
                {
                    "name": "is_returned",
                    "type": "Bool",
                    "description": "True, if the user has returned to the group themselves",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatChangePhoto",
            "description": "A chat photo was edited",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatChangeTitle",
            "description": "A chat title was edited",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "New chat title",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatSetBackground",
            "description": "A chat background was edited",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "is_same",
                    "type": "Bool",
                    "description": "True, if the set background is the same as the background of the current user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatSetTheme",
            "description": "A chat theme was edited",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "If non-empty, name of a new theme, set for the chat. Otherwise, the chat theme was reset to the default one",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatDeleteMember",
            "description": "A chat member was deleted",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "member_name",
                    "type": "string",
                    "description": "Name of the deleted member",
                    "required": true
                },
                {
                    "name": "is_current_user",
                    "type": "Bool",
                    "description": "True, if the current user was deleted from the group",
                    "required": true
                },
                {
                    "name": "is_left",
                    "type": "Bool",
                    "description": "True, if the user has left the group themselves",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatJoinByLink",
            "description": "A new member joined the chat via an invite link",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentChatJoinByRequest",
            "description": "A new member was accepted to the chat by an administrator",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentRecurringPayment",
            "description": "A new recurring payment was made by the current user",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "amount",
                    "type": "string",
                    "description": "The paid amount",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentSuggestProfilePhoto",
            "description": "A profile photo was suggested to the user",
            "type": "PushMessageContent",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentMessageForwards",
            "description": "A forwarded messages",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Number of forwarded messages",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "pushMessageContentMediaAlbum",
            "description": "A media album",
            "type": "PushMessageContent",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Number of messages in the album",
                    "required": true
                },
                {
                    "name": "has_photos",
                    "type": "Bool",
                    "description": "True, if the album has at least one photo",
                    "required": true
                },
                {
                    "name": "has_videos",
                    "type": "Bool",
                    "description": "True, if the album has at least one video file",
                    "required": true
                },
                {
                    "name": "has_audios",
                    "type": "Bool",
                    "description": "True, if the album has at least one audio file",
                    "required": true
                },
                {
                    "name": "has_documents",
                    "type": "Bool",
                    "description": "True, if the album has at least one document",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationTypeNewMessage",
            "description": "New message was received",
            "type": "NotificationType",
            "annotations": [
                {
                    "name": "message",
                    "type": "message",
                    "description": "The message",
                    "required": true
                },
                {
                    "name": "show_preview",
                    "type": "Bool",
                    "description": "True, if message content must be displayed in notifications",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationTypeNewSecretChat",
            "description": "New secret chat was created",
            "type": "NotificationType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationTypeNewCall",
            "description": "New call was received",
            "type": "NotificationType",
            "annotations": [
                {
                    "name": "call_id",
                    "type": "int32",
                    "description": "Call identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationTypeNewPushMessage",
            "description": "New message was received through a push notification",
            "type": "NotificationType",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "The message identifier. The message will not be available in the chat history, but the identifier can be used in viewMessages, or as a message to be replied in the same chat",
                    "required": true
                },
                {
                    "name": "sender_id",
                    "type": "MessageSender",
                    "description": "Identifier of the sender of the message. Corresponding user or chat may be inaccessible",
                    "required": true
                },
                {
                    "name": "sender_name",
                    "type": "string",
                    "description": "Name of the sender",
                    "required": true
                },
                {
                    "name": "is_outgoing",
                    "type": "Bool",
                    "description": "True, if the message is outgoing",
                    "required": true
                },
                {
                    "name": "content",
                    "type": "PushMessageContent",
                    "description": "Push message content",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationGroupTypeMessages",
            "description": "A group containing notifications of type notificationTypeNewMessage and notificationTypeNewPushMessage with ordinary unread messages",
            "type": "NotificationGroupType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationGroupTypeMentions",
            "description": "A group containing notifications of type notificationTypeNewMessage and notificationTypeNewPushMessage with unread mentions of the current user, replies to their messages, or a pinned message",
            "type": "NotificationGroupType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationGroupTypeSecretChat",
            "description": "A group containing a notification of type notificationTypeNewSecretChat",
            "type": "NotificationGroupType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationGroupTypeCalls",
            "description": "A group containing notifications of type notificationTypeNewCall",
            "type": "NotificationGroupType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationSound",
            "description": "Describes a notification sound in MP3 format",
            "type": "NotificationSound",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Unique identifier of the notification sound",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "int32",
                    "description": "Duration of the sound, in seconds",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the sound was created",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "Title of the notification sound",
                    "required": true
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "Arbitrary data, defined while the sound was uploaded",
                    "required": true
                },
                {
                    "name": "sound",
                    "type": "file",
                    "description": "File containing the sound",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationSounds",
            "description": "Contains a list of notification sounds",
            "type": "NotificationSounds",
            "annotations": [
                {
                    "name": "notification_sounds",
                    "type": "vector<notificationSound>",
                    "description": "A list of notification sounds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notification",
            "description": "Contains information about a notification",
            "type": "Notification",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique persistent identifier of this notification",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Notification date",
                    "required": true
                },
                {
                    "name": "is_silent",
                    "type": "Bool",
                    "description": "True, if the notification was explicitly sent without sound",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "NotificationType",
                    "description": "Notification type",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "notificationGroup",
            "description": "Describes a group of notifications",
            "type": "NotificationGroup",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique persistent auto-incremented from 1 identifier of the notification group",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "NotificationGroupType",
                    "description": "Type of the group",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of a chat to which all notifications in the group belong",
                    "required": true
                },
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of active notifications in the group",
                    "required": true
                },
                {
                    "name": "notifications",
                    "type": "vector<notification>",
                    "description": "The list of active notifications",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "optionValueBoolean",
            "description": "Represents a boolean option",
            "type": "OptionValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "Bool",
                    "description": "The value of the option",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "optionValueEmpty",
            "description": "Represents an unknown option or an option which has a default value",
            "type": "OptionValue",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "optionValueInteger",
            "description": "Represents an integer option",
            "type": "OptionValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "int64",
                    "description": "The value of the option",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "optionValueString",
            "description": "Represents a string option",
            "type": "OptionValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "string",
                    "description": "The value of the option",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonObjectMember",
            "description": "Represents one member of a JSON object",
            "type": "JsonObjectMember",
            "annotations": [
                {
                    "name": "key",
                    "type": "string",
                    "description": "Member's key",
                    "required": true
                },
                {
                    "name": "value",
                    "type": "JsonValue",
                    "description": "Member's value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonValueNull",
            "description": "Represents a null JSON value",
            "type": "JsonValue",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonValueBoolean",
            "description": "Represents a boolean JSON value",
            "type": "JsonValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "Bool",
                    "description": "The value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonValueNumber",
            "description": "Represents a numeric JSON value",
            "type": "JsonValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "double",
                    "description": "The value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonValueString",
            "description": "Represents a string JSON value",
            "type": "JsonValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "string",
                    "description": "The value",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonValueArray",
            "description": "Represents a JSON array",
            "type": "JsonValue",
            "annotations": [
                {
                    "name": "values",
                    "type": "vector<JsonValue>",
                    "description": "The list of array elements",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "jsonValueObject",
            "description": "Represents a JSON object",
            "type": "JsonValue",
            "annotations": [
                {
                    "name": "members",
                    "type": "vector<jsonObjectMember>",
                    "description": "The list of object members",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyPrivacySettingsEveryone",
            "description": "The story can be viewed by everyone",
            "type": "StoryPrivacySettings",
            "annotations": [
                {
                    "name": "except_user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the users that can't see the story; always unknown and empty for non-owned stories",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyPrivacySettingsContacts",
            "description": "The story can be viewed by all contacts except chosen users",
            "type": "StoryPrivacySettings",
            "annotations": [
                {
                    "name": "except_user_ids",
                    "type": "vector<int53>",
                    "description": "User identifiers of the contacts that can't see the story; always unknown and empty for non-owned stories",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyPrivacySettingsCloseFriends",
            "description": "The story can be viewed by all close friends",
            "type": "StoryPrivacySettings",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyPrivacySettingsSelectedUsers",
            "description": "The story can be viewed by certain specified users",
            "type": "StoryPrivacySettings",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "Identifiers of the users; always unknown and empty for non-owned stories",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleAllowAll",
            "description": "A rule to allow all users to do something",
            "type": "UserPrivacySettingRule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleAllowContacts",
            "description": "A rule to allow all contacts of the user to do something",
            "type": "UserPrivacySettingRule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleAllowPremiumUsers",
            "description": "A rule to allow all Premium Users to do something; currently, allowed only for userPrivacySettingAllowChatInvites",
            "type": "UserPrivacySettingRule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleAllowUsers",
            "description": "A rule to allow certain specified users to do something",
            "type": "UserPrivacySettingRule",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "The user identifiers, total number of users in all rules must not exceed 1000",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleAllowChatMembers",
            "description": "A rule to allow all members of certain specified basic groups and supergroups to doing something",
            "type": "UserPrivacySettingRule",
            "annotations": [
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "The chat identifiers, total number of chats in all rules must not exceed 20",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleRestrictAll",
            "description": "A rule to restrict all users from doing something",
            "type": "UserPrivacySettingRule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleRestrictContacts",
            "description": "A rule to restrict all contacts of the user from doing something",
            "type": "UserPrivacySettingRule",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleRestrictUsers",
            "description": "A rule to restrict all specified users from doing something",
            "type": "UserPrivacySettingRule",
            "annotations": [
                {
                    "name": "user_ids",
                    "type": "vector<int53>",
                    "description": "The user identifiers, total number of users in all rules must not exceed 1000",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRuleRestrictChatMembers",
            "description": "A rule to restrict all members of specified basic groups and supergroups from doing something",
            "type": "UserPrivacySettingRule",
            "annotations": [
                {
                    "name": "chat_ids",
                    "type": "vector<int53>",
                    "description": "The chat identifiers, total number of chats in all rules must not exceed 20",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingRules",
            "description": "A list of privacy rules. Rules are matched in the specified order. The first matched rule defines the privacy setting for a given user. If no rule matches, the action is not allowed",
            "type": "UserPrivacySettingRules",
            "annotations": [
                {
                    "name": "rules",
                    "type": "vector<UserPrivacySettingRule>",
                    "description": "A list of rules",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingShowStatus",
            "description": "A privacy setting for managing whether the user's online status is visible",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingShowProfilePhoto",
            "description": "A privacy setting for managing whether the user's profile photo is visible",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingShowLinkInForwardedMessages",
            "description": "A privacy setting for managing whether a link to the user's account is included in forwarded messages",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingShowPhoneNumber",
            "description": "A privacy setting for managing whether the user's phone number is visible",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingShowBio",
            "description": "A privacy setting for managing whether the user's bio is visible",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingShowBirthdate",
            "description": "A privacy setting for managing whether the user's birthdate is visible",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingAllowChatInvites",
            "description": "A privacy setting for managing whether the user can be invited to chats",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingAllowCalls",
            "description": "A privacy setting for managing whether the user can be called",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingAllowPeerToPeerCalls",
            "description": "A privacy setting for managing whether peer-to-peer connections can be used for calls",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingAllowFindingByPhoneNumber",
            "description": "A privacy setting for managing whether the user can be found by their phone number. Checked only if the phone number is not known to the other user. Can be set only to 'Allow contacts' or 'Allow all'",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userPrivacySettingAllowPrivateVoiceAndVideoNoteMessages",
            "description": "A privacy setting for managing whether the user can receive voice and video messages in private chats; for Telegram Premium users only",
            "type": "UserPrivacySetting",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "readDatePrivacySettings",
            "description": "Contains privacy settings for message read date in private chats. Read dates are always shown to the users that can see online status of the current user regardless of this setting",
            "type": "ReadDatePrivacySettings",
            "annotations": [
                {
                    "name": "show_read_date",
                    "type": "Bool",
                    "description": "True, if message read date is shown to other users in private chats. If false and the current user isn't a Telegram Premium user, then they will not be able to see other's message read date",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "newChatPrivacySettings",
            "description": "Contains privacy settings for new chats with non-contacts",
            "type": "NewChatPrivacySettings",
            "annotations": [
                {
                    "name": "allow_new_chats_from_unknown_users",
                    "type": "Bool",
                    "description": "True, if non-contacts users are able to write first to the current user. Telegram Premium subscribers are able to write first regardless of this setting",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendMessageToUserResultOk",
            "description": "The user can be messaged",
            "type": "CanSendMessageToUserResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendMessageToUserResultUserIsDeleted",
            "description": "The user can't be messaged, because they are deleted or unknown",
            "type": "CanSendMessageToUserResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "canSendMessageToUserResultUserRestrictsNewChats",
            "description": "The user can't be messaged, because they restrict new chats with non-contacts",
            "type": "CanSendMessageToUserResult",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "accountTtl",
            "description": "Contains information about the period of inactivity after which the current user's account will automatically be deleted",
            "type": "AccountTtl",
            "annotations": [
                {
                    "name": "days",
                    "type": "int32",
                    "description": "Number of days of inactivity before the account will be flagged for deletion; 30-366 days",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageAutoDeleteTime",
            "description": "Contains default auto-delete timer setting for new chats",
            "type": "MessageAutoDeleteTime",
            "annotations": [
                {
                    "name": "time",
                    "type": "int32",
                    "description": "Message auto-delete time, in seconds. If 0, then messages aren't deleted automatically",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeAndroid",
            "description": "The session is running on an Android device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeApple",
            "description": "The session is running on a generic Apple device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeBrave",
            "description": "The session is running on the Brave browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeChrome",
            "description": "The session is running on the Chrome browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeEdge",
            "description": "The session is running on the Edge browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeFirefox",
            "description": "The session is running on the Firefox browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeIpad",
            "description": "The session is running on an iPad device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeIphone",
            "description": "The session is running on an iPhone device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeLinux",
            "description": "The session is running on a Linux device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeMac",
            "description": "The session is running on a Mac device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeOpera",
            "description": "The session is running on the Opera browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeSafari",
            "description": "The session is running on the Safari browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeUbuntu",
            "description": "The session is running on an Ubuntu device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeUnknown",
            "description": "The session is running on an unknown type of device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeVivaldi",
            "description": "The session is running on the Vivaldi browser",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeWindows",
            "description": "The session is running on a Windows device",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessionTypeXbox",
            "description": "The session is running on an Xbox console",
            "type": "SessionType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "session",
            "description": "Contains information about one session in a Telegram application used by the current user. Sessions must be shown to the user in the returned order",
            "type": "Session",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Session identifier",
                    "required": true
                },
                {
                    "name": "is_current",
                    "type": "Bool",
                    "description": "True, if this session is the current session",
                    "required": true
                },
                {
                    "name": "is_password_pending",
                    "type": "Bool",
                    "description": "True, if a 2-step verification password is needed to complete authorization of the session",
                    "required": true
                },
                {
                    "name": "is_unconfirmed",
                    "type": "Bool",
                    "description": "True, if the session wasn't confirmed from another session",
                    "required": true
                },
                {
                    "name": "can_accept_secret_chats",
                    "type": "Bool",
                    "description": "True, if incoming secret chats can be accepted by the session",
                    "required": true
                },
                {
                    "name": "can_accept_calls",
                    "type": "Bool",
                    "description": "True, if incoming calls can be accepted by the session",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "SessionType",
                    "description": "Session type based on the system and application version, which can be used to display a corresponding icon",
                    "required": true
                },
                {
                    "name": "api_id",
                    "type": "int32",
                    "description": "Telegram API identifier, as provided by the application",
                    "required": true
                },
                {
                    "name": "application_name",
                    "type": "string",
                    "description": "Name of the application, as provided by the application",
                    "required": true
                },
                {
                    "name": "application_version",
                    "type": "string",
                    "description": "The version of the application, as provided by the application",
                    "required": true
                },
                {
                    "name": "is_official_application",
                    "type": "Bool",
                    "description": "True, if the application is an official application or uses the api_id of an official application",
                    "required": true
                },
                {
                    "name": "device_model",
                    "type": "string",
                    "description": "Model of the device the application has been run or is running on, as provided by the application",
                    "required": true
                },
                {
                    "name": "platform",
                    "type": "string",
                    "description": "Operating system the application has been run or is running on, as provided by the application",
                    "required": true
                },
                {
                    "name": "system_version",
                    "type": "string",
                    "description": "Version of the operating system the application has been run or is running on, as provided by the application",
                    "required": true
                },
                {
                    "name": "log_in_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user has logged in",
                    "required": true
                },
                {
                    "name": "last_active_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the session was last used",
                    "required": true
                },
                {
                    "name": "ip_address",
                    "type": "string",
                    "description": "IP address from which the session was created, in human-readable format",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "string",
                    "description": "A human-readable description of the location from which the session was created, based on the IP address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "sessions",
            "description": "Contains a list of sessions",
            "type": "Sessions",
            "annotations": [
                {
                    "name": "sessions",
                    "type": "vector<session>",
                    "description": "List of sessions",
                    "required": true
                },
                {
                    "name": "inactive_session_ttl_days",
                    "type": "int32",
                    "description": "Number of days of inactivity before sessions will automatically be terminated; 1-366 days",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "unconfirmedSession",
            "description": "Contains information about an unconfirmed session",
            "type": "UnconfirmedSession",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Session identifier",
                    "required": true
                },
                {
                    "name": "log_in_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user has logged in",
                    "required": true
                },
                {
                    "name": "device_model",
                    "type": "string",
                    "description": "Model of the device that was used for the session creation, as provided by the application",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "string",
                    "description": "A human-readable description of the location from which the session was created, based on the IP address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectedWebsite",
            "description": "Contains information about one website the current user is logged in with Telegram",
            "type": "ConnectedWebsite",
            "annotations": [
                {
                    "name": "id",
                    "type": "int64",
                    "description": "Website identifier",
                    "required": true
                },
                {
                    "name": "domain_name",
                    "type": "string",
                    "description": "The domain name of the website",
                    "required": true
                },
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of a bot linked with the website",
                    "required": true
                },
                {
                    "name": "browser",
                    "type": "string",
                    "description": "The version of a browser used to log in",
                    "required": true
                },
                {
                    "name": "platform",
                    "type": "string",
                    "description": "Operating system the browser is running on",
                    "required": true
                },
                {
                    "name": "log_in_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the user was logged in",
                    "required": true
                },
                {
                    "name": "last_active_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when obtained authorization was last used",
                    "required": true
                },
                {
                    "name": "ip_address",
                    "type": "string",
                    "description": "IP address from which the user was logged in, in human-readable format",
                    "required": true
                },
                {
                    "name": "location",
                    "type": "string",
                    "description": "Human-readable description of a country and a region from which the user was logged in, based on the IP address",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectedWebsites",
            "description": "Contains a list of websites the current user is logged in with Telegram",
            "type": "ConnectedWebsites",
            "annotations": [
                {
                    "name": "websites",
                    "type": "vector<connectedWebsite>",
                    "description": "List of connected websites",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonSpam",
            "description": "The chat contains spam messages",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonViolence",
            "description": "The chat promotes violence",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonPornography",
            "description": "The chat contains pornographic messages",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonChildAbuse",
            "description": "The chat has child abuse related content",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonCopyright",
            "description": "The chat contains copyrighted content",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonUnrelatedLocation",
            "description": "The location-based chat is unrelated to its stated location",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonFake",
            "description": "The chat represents a fake account",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonIllegalDrugs",
            "description": "The chat has illegal drugs related content",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonPersonalDetails",
            "description": "The chat contains messages with personal details",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "reportReasonCustom",
            "description": "A custom reason provided by the user",
            "type": "ReportReason",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "targetChatCurrent",
            "description": "The currently opened chat needs to be kept",
            "type": "TargetChat",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "targetChatChosen",
            "description": "The chat needs to be chosen by the user among chats of the specified types",
            "type": "TargetChat",
            "annotations": [
                {
                    "name": "allow_user_chats",
                    "type": "Bool",
                    "description": "True, if private chats with ordinary users are allowed",
                    "required": true
                },
                {
                    "name": "allow_bot_chats",
                    "type": "Bool",
                    "description": "True, if private chats with other bots are allowed",
                    "required": true
                },
                {
                    "name": "allow_group_chats",
                    "type": "Bool",
                    "description": "True, if basic group and supergroup chats are allowed",
                    "required": true
                },
                {
                    "name": "allow_channel_chats",
                    "type": "Bool",
                    "description": "True, if channel chats are allowed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "targetChatInternalLink",
            "description": "The chat needs to be open with the provided internal link",
            "type": "TargetChat",
            "annotations": [
                {
                    "name": "link",
                    "type": "InternalLinkType",
                    "description": "An internal link pointing to the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeActiveSessions",
            "description": "The link is a link to the Devices section of the application. Use getActiveSessions to get the list of active sessions and show them to the user",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeAttachmentMenuBot",
            "description": "The link is a link to an attachment menu bot to be opened in the specified or a chosen chat. Process given target_chat to open the chat.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "target_chat",
                    "type": "TargetChat",
                    "description": "Target chat to be opened",
                    "required": true
                },
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to be passed to openWebApp",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeAuthenticationCode",
            "description": "The link contains an authentication code. Call checkAuthenticationCode with the code if the current authorization state is authorizationStateWaitCode",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "The authentication code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeBackground",
            "description": "The link is a link to a background. Call searchBackground with the given background name to process the link",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "background_name",
                    "type": "string",
                    "description": "Name of the background",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeBotAddToChannel",
            "description": "The link is a link to a Telegram bot, which is supposed to be added to a channel chat as an administrator. Call searchPublicChat with the given bot username and check that the user is a bot,",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot",
                    "required": true
                },
                {
                    "name": "administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Expected administrator rights for the bot",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeBotStart",
            "description": "The link is a link to a chat with a Telegram bot. Call searchPublicChat with the given bot username, check that the user is a bot, show START button in the chat with the bot,",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "The parameter to be passed to sendBotStartMessage",
                    "required": true
                },
                {
                    "name": "autostart",
                    "type": "Bool",
                    "description": "True, if sendBotStartMessage must be called automatically without showing the START button",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeBotStartInGroup",
            "description": "The link is a link to a Telegram bot, which is supposed to be added to a group chat. Call searchPublicChat with the given bot username, check that the user is a bot and can be added to groups,",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "The parameter to be passed to sendBotStartMessage",
                    "required": true
                },
                {
                    "name": "administrator_rights",
                    "type": "chatAdministratorRights",
                    "description": "Expected administrator rights for the bot; may be null",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeBusinessChat",
            "description": "The link is a link to a business chat. Use getBusinessChatLinkInfo with the provided link name to get information about the link,",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "link_name",
                    "type": "string",
                    "description": "Name of the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeBuyStars",
            "description": "The link is a link to the Telegram Star purchase section of the application",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "star_count",
                    "type": "int53",
                    "description": "The number of Telegram Stars that must be owned by the user",
                    "required": true
                },
                {
                    "name": "purpose",
                    "type": "string",
                    "description": "Purpose of Telegram Star purchase. Arbitrary string specified by the server, for example, 'subs' if the Telegram Stars are required to extend channel subscriptions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeChangePhoneNumber",
            "description": "The link is a link to the change phone number section of the application",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeChatBoost",
            "description": "The link is a link to boost a Telegram chat. Call getChatBoostLinkInfo with the given URL to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to be passed to getChatBoostLinkInfo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeChatFolderInvite",
            "description": "The link is an invite link to a chat folder. Call checkChatFolderInviteLink with the given invite link to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Internal representation of the invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeChatFolderSettings",
            "description": "The link is a link to the folder section of the application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeChatInvite",
            "description": "The link is a chat invite link. Call checkChatInviteLink with the given invite link to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "invite_link",
                    "type": "string",
                    "description": "Internal representation of the invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeDefaultMessageAutoDeleteTimerSettings",
            "description": "The link is a link to the default message auto-delete timer settings section of the application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeEditProfileSettings",
            "description": "The link is a link to the edit profile section of the application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeGame",
            "description": "The link is a link to a game. Call searchPublicChat with the given bot username, check that the user is a bot,",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot that owns the game",
                    "required": true
                },
                {
                    "name": "game_short_name",
                    "type": "string",
                    "description": "Short name of the game",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeInstantView",
            "description": "The link must be opened in an Instant View. Call getWebPageInstantView with the given URL to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to be passed to getWebPageInstantView",
                    "required": true
                },
                {
                    "name": "fallback_url",
                    "type": "string",
                    "description": "An URL to open if getWebPageInstantView fails",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeInvoice",
            "description": "The link is a link to an invoice. Call getPaymentForm with the given invoice name to process the link",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "invoice_name",
                    "type": "string",
                    "description": "Name of the invoice",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeLanguagePack",
            "description": "The link is a link to a language pack. Call getLanguagePackInfo with the given language pack identifier to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "language_pack_id",
                    "type": "string",
                    "description": "Language pack identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeLanguageSettings",
            "description": "The link is a link to the language section of the application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeMainWebApp",
            "description": "The link is a link to the main Web App of a bot. Call searchPublicChat with the given bot username, check that the user is a bot and has the main Web App.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "Start parameter to be passed to getMainWebApp",
                    "required": true
                },
                {
                    "name": "is_compact",
                    "type": "Bool",
                    "description": "True, if the Web App must be opened in the compact mode instead of the full-size mode",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeMessage",
            "description": "The link is a link to a Telegram message or a forum topic. Call getMessageLinkInfo with the given URL to process the link,",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL to be passed to getMessageLinkInfo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeMessageDraft",
            "description": "The link contains a message draft text. A share screen needs to be shown to the user, then the chosen chat must be opened and the text is added to the input field",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Message draft text",
                    "required": true
                },
                {
                    "name": "contains_link",
                    "type": "Bool",
                    "description": "True, if the first line of the text contains a link. If true, the input field needs to be focused and the text after the link must be selected",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePassportDataRequest",
            "description": "The link contains a request of Telegram passport data. Call getPassportAuthorizationForm with the given parameters to process the link if the link was received from outside of the application; otherwise, ignore it",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_user_id",
                    "type": "int53",
                    "description": "User identifier of the service's bot; the corresponding user may be unknown yet",
                    "required": true
                },
                {
                    "name": "scope",
                    "type": "string",
                    "description": "Telegram Passport element types requested by the service",
                    "required": true
                },
                {
                    "name": "public_key",
                    "type": "string",
                    "description": "Service's public key",
                    "required": true
                },
                {
                    "name": "nonce",
                    "type": "string",
                    "description": "Unique request identifier provided by the service",
                    "required": true
                },
                {
                    "name": "callback_url",
                    "type": "string",
                    "description": "An HTTP URL to open once the request is finished, canceled, or failed with the parameters tg_passport=success, tg_passport=cancel, or tg_passport=error&error=... respectively.",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePhoneNumberConfirmation",
            "description": "The link can be used to confirm ownership of a phone number to prevent account deletion. Call sendPhoneNumberCode with the given phone number and with phoneNumberCodeTypeConfirmOwnership with the given hash to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "hash",
                    "type": "string",
                    "description": "Hash value from the link",
                    "required": true
                },
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number value from the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePremiumFeatures",
            "description": "The link is a link to the Premium features screen of the application from which the user can subscribe to Telegram Premium. Call getPremiumFeatures with the given referrer to process the link",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "referrer",
                    "type": "string",
                    "description": "Referrer specified in the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePremiumGift",
            "description": "The link is a link to the screen for gifting Telegram Premium subscriptions to friends via inputInvoiceTelegram payments or in-store purchases",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "referrer",
                    "type": "string",
                    "description": "Referrer specified in the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePremiumGiftCode",
            "description": "The link is a link with a Telegram Premium gift code. Call checkPremiumGiftCode with the given code to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "The Telegram Premium gift code",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePrivacyAndSecuritySettings",
            "description": "The link is a link to the privacy and security section of the application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeProxy",
            "description": "The link is a link to a proxy. Call addProxy with the given parameters to process the link and add the proxy",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "server",
                    "type": "string",
                    "description": "Proxy server domain or IP address",
                    "required": true
                },
                {
                    "name": "port",
                    "type": "int32",
                    "description": "Proxy server port",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ProxyType",
                    "description": "Type of the proxy",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypePublicChat",
            "description": "The link is a link to a chat by its username. Call searchPublicChat with the given chat username to process the link",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "chat_username",
                    "type": "string",
                    "description": "Username of the chat",
                    "required": true
                },
                {
                    "name": "draft_text",
                    "type": "string",
                    "description": "Draft text for message to send in the chat",
                    "required": true
                },
                {
                    "name": "open_profile",
                    "type": "Bool",
                    "description": "True, if chat profile information screen must be opened; otherwise, the chat itself must be opened",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeQrCodeAuthentication",
            "description": "The link can be used to login the current user on another device, but it must be scanned from QR-code using in-app camera. An alert similar to",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeRestorePurchases",
            "description": "The link forces restore of App Store purchases when opened. For official iOS application only",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeSettings",
            "description": "The link is a link to application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeStickerSet",
            "description": "The link is a link to a sticker set. Call searchStickerSet with the given sticker set name to process the link and show the sticker set.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "sticker_set_name",
                    "type": "string",
                    "description": "Name of the sticker set",
                    "required": true
                },
                {
                    "name": "expect_custom_emoji",
                    "type": "Bool",
                    "description": "True, if the sticker set is expected to contain custom emoji",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeStory",
            "description": "The link is a link to a story. Call searchPublicChat with the given sender username, then call getStory with the received chat identifier and the given story identifier, then show the story if received",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "story_sender_username",
                    "type": "string",
                    "description": "Username of the sender of the story",
                    "required": true
                },
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeTheme",
            "description": "The link is a link to a cloud theme. TDLib has no theme support yet",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "theme_name",
                    "type": "string",
                    "description": "Name of the theme",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeThemeSettings",
            "description": "The link is a link to the theme section of the application settings",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeUnknownDeepLink",
            "description": "The link is an unknown tg: link. Call getDeepLinkInfo to process the link",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "Link to be passed to getDeepLinkInfo",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeUnsupportedProxy",
            "description": "The link is a link to an unsupported proxy. An alert can be shown to the user",
            "type": "InternalLinkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeUserPhoneNumber",
            "description": "The link is a link to a user by its phone number. Call searchUserByPhoneNumber with the given phone number to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "phone_number",
                    "type": "string",
                    "description": "Phone number of the user",
                    "required": true
                },
                {
                    "name": "draft_text",
                    "type": "string",
                    "description": "Draft text for message to send in the chat",
                    "required": true
                },
                {
                    "name": "open_profile",
                    "type": "Bool",
                    "description": "True, if user's profile information screen must be opened; otherwise, the chat itself must be opened",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeUserToken",
            "description": "The link is a link to a user by a temporary token. Call searchUserByToken with the given token to process the link.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "The token",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeVideoChat",
            "description": "The link is a link to a video chat. Call searchPublicChat with the given chat username, and then joinGroupCall with the given invite hash to process the link",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "chat_username",
                    "type": "string",
                    "description": "Username of the chat with the video chat",
                    "required": true
                },
                {
                    "name": "invite_hash",
                    "type": "string",
                    "description": "If non-empty, invite hash to be used to join the video chat without being muted by administrators",
                    "required": false
                },
                {
                    "name": "is_live_stream",
                    "type": "Bool",
                    "description": "True, if the video chat is expected to be a live stream in a channel or a broadcast group",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "internalLinkTypeWebApp",
            "description": "The link is a link to a Web App. Call searchPublicChat with the given bot username, check that the user is a bot, then call searchWebApp with the received bot and the given web_app_short_name.",
            "type": "InternalLinkType",
            "annotations": [
                {
                    "name": "bot_username",
                    "type": "string",
                    "description": "Username of the bot that owns the Web App",
                    "required": true
                },
                {
                    "name": "web_app_short_name",
                    "type": "string",
                    "description": "Short name of the Web App",
                    "required": true
                },
                {
                    "name": "start_parameter",
                    "type": "string",
                    "description": "Start parameter to be passed to getWebAppLinkUrl",
                    "required": true
                },
                {
                    "name": "is_compact",
                    "type": "Bool",
                    "description": "True, if the Web App must be opened in the compact mode instead of the full-size mode",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageLink",
            "description": "Contains an HTTPS link to a message in a supergroup or channel, or a forum topic",
            "type": "MessageLink",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link",
                    "required": true
                },
                {
                    "name": "is_public",
                    "type": "Bool",
                    "description": "True, if the link will work for non-members of the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageLinkInfo",
            "description": "Contains information about a link to a message or a forum topic in a chat",
            "type": "MessageLinkInfo",
            "annotations": [
                {
                    "name": "is_public",
                    "type": "Bool",
                    "description": "True, if the link is a public link for a message or a forum topic in a chat",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "If found, identifier of the chat to which the link points, 0 otherwise",
                    "required": true
                },
                {
                    "name": "message_thread_id",
                    "type": "int53",
                    "description": "If found, identifier of the message thread in which to open the message, or a forum topic to open if the message is missing",
                    "required": true
                },
                {
                    "name": "message",
                    "type": "message",
                    "description": "If found, the linked message; may be null",
                    "required": false
                },
                {
                    "name": "media_timestamp",
                    "type": "int32",
                    "description": "Timestamp from which the video/audio/video note/voice note/story playing must start, in seconds; 0 if not specified. The media can be in the message content or in its link preview",
                    "required": true
                },
                {
                    "name": "for_album",
                    "type": "Bool",
                    "description": "True, if the whole media album to which the message belongs is linked",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostLink",
            "description": "Contains an HTTPS link to boost a chat",
            "type": "ChatBoostLink",
            "annotations": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "The link",
                    "required": true
                },
                {
                    "name": "is_public",
                    "type": "Bool",
                    "description": "True, if the link will work for non-members of the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatBoostLinkInfo",
            "description": "Contains information about a link to boost a chat",
            "type": "ChatBoostLinkInfo",
            "annotations": [
                {
                    "name": "is_public",
                    "type": "Bool",
                    "description": "True, if the link will work for non-members of the chat",
                    "required": true
                },
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Identifier of the chat to which the link points; 0 if the chat isn't found",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "blockListMain",
            "description": "The main block list that disallows writing messages to the current user, receiving their status and photo, viewing of stories, and some other actions",
            "type": "BlockList",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "blockListStories",
            "description": "The block list that disallows viewing of stories of the current user",
            "type": "BlockList",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "filePart",
            "description": "Contains a part of a file",
            "type": "FilePart",
            "annotations": [
                {
                    "name": "data",
                    "type": "bytes",
                    "description": "File bytes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeNone",
            "description": "The data is not a file",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeAnimation",
            "description": "The file is an animation",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeAudio",
            "description": "The file is an audio file",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeDocument",
            "description": "The file is a document",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeNotificationSound",
            "description": "The file is a notification sound",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypePhoto",
            "description": "The file is a photo",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypePhotoStory",
            "description": "The file is a photo published as a story",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeProfilePhoto",
            "description": "The file is a profile photo",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeSecret",
            "description": "The file was sent to a secret chat (the file type is not known to the server)",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeSecretThumbnail",
            "description": "The file is a thumbnail of a file from a secret chat",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeSecure",
            "description": "The file is a file from Secure storage used for storing Telegram Passport files",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeSticker",
            "description": "The file is a sticker",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeThumbnail",
            "description": "The file is a thumbnail of another file",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeUnknown",
            "description": "The file type is not yet known",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeVideo",
            "description": "The file is a video",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeVideoNote",
            "description": "The file is a video note",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeVideoStory",
            "description": "The file is a video published as a story",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeVoiceNote",
            "description": "The file is a voice note",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileTypeWallpaper",
            "description": "The file is a wallpaper or a background pattern",
            "type": "FileType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storageStatisticsByFileType",
            "description": "Contains the storage usage statistics for a specific file type",
            "type": "StorageStatisticsByFileType",
            "annotations": [
                {
                    "name": "file_type",
                    "type": "FileType",
                    "description": "File type",
                    "required": true
                },
                {
                    "name": "size",
                    "type": "int53",
                    "description": "Total size of the files, in bytes",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int32",
                    "description": "Total number of files",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storageStatisticsByChat",
            "description": "Contains the storage usage statistics for a specific chat",
            "type": "StorageStatisticsByChat",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier; 0 if none",
                    "required": true
                },
                {
                    "name": "size",
                    "type": "int53",
                    "description": "Total size of the files in the chat, in bytes",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int32",
                    "description": "Total number of files in the chat",
                    "required": true
                },
                {
                    "name": "by_file_type",
                    "type": "vector<storageStatisticsByFileType>",
                    "description": "Statistics split by file types",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storageStatistics",
            "description": "Contains the exact storage usage statistics split by chats and file type",
            "type": "StorageStatistics",
            "annotations": [
                {
                    "name": "size",
                    "type": "int53",
                    "description": "Total size of files, in bytes",
                    "required": true
                },
                {
                    "name": "count",
                    "type": "int32",
                    "description": "Total number of files",
                    "required": true
                },
                {
                    "name": "by_chat",
                    "type": "vector<storageStatisticsByChat>",
                    "description": "Statistics split by chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storageStatisticsFast",
            "description": "Contains approximate storage usage statistics, excluding files of unknown file type",
            "type": "StorageStatisticsFast",
            "annotations": [
                {
                    "name": "files_size",
                    "type": "int53",
                    "description": "Approximate total size of files, in bytes",
                    "required": true
                },
                {
                    "name": "file_count",
                    "type": "int32",
                    "description": "Approximate number of files",
                    "required": true
                },
                {
                    "name": "database_size",
                    "type": "int53",
                    "description": "Size of the database",
                    "required": true
                },
                {
                    "name": "language_pack_database_size",
                    "type": "int53",
                    "description": "Size of the language pack database",
                    "required": true
                },
                {
                    "name": "log_size",
                    "type": "int53",
                    "description": "Size of the TDLib internal log",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "databaseStatistics",
            "description": "Contains database statistics",
            "type": "DatabaseStatistics",
            "annotations": [
                {
                    "name": "statistics",
                    "type": "string",
                    "description": "Database statistics in an unspecified human-readable format",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkTypeNone",
            "description": "The network is not available",
            "type": "NetworkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkTypeMobile",
            "description": "A mobile network",
            "type": "NetworkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkTypeMobileRoaming",
            "description": "A mobile roaming network",
            "type": "NetworkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkTypeWiFi",
            "description": "A Wi-Fi network",
            "type": "NetworkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkTypeOther",
            "description": "A different network type (e.g., Ethernet network)",
            "type": "NetworkType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkStatisticsEntryFile",
            "description": "Contains information about the total amount of data that was used to send and receive files",
            "type": "NetworkStatisticsEntry",
            "annotations": [
                {
                    "name": "file_type",
                    "type": "FileType",
                    "description": "Type of the file the data is part of; pass null if the data isn't related to files",
                    "required": false
                },
                {
                    "name": "network_type",
                    "type": "NetworkType",
                    "description": "Type of the network the data was sent through. Call setNetworkType to maintain the actual network type",
                    "required": true
                },
                {
                    "name": "sent_bytes",
                    "type": "int53",
                    "description": "Total number of bytes sent",
                    "required": true
                },
                {
                    "name": "received_bytes",
                    "type": "int53",
                    "description": "Total number of bytes received",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkStatisticsEntryCall",
            "description": "Contains information about the total amount of data that was used for calls",
            "type": "NetworkStatisticsEntry",
            "annotations": [
                {
                    "name": "network_type",
                    "type": "NetworkType",
                    "description": "Type of the network the data was sent through. Call setNetworkType to maintain the actual network type",
                    "required": true
                },
                {
                    "name": "sent_bytes",
                    "type": "int53",
                    "description": "Total number of bytes sent",
                    "required": true
                },
                {
                    "name": "received_bytes",
                    "type": "int53",
                    "description": "Total number of bytes received",
                    "required": true
                },
                {
                    "name": "duration",
                    "type": "double",
                    "description": "Total call duration, in seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "networkStatistics",
            "description": "A full list of available network statistic entries",
            "type": "NetworkStatistics",
            "annotations": [
                {
                    "name": "since_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) from which the statistics are collected",
                    "required": true
                },
                {
                    "name": "entries",
                    "type": "vector<NetworkStatisticsEntry>",
                    "description": "Network statistics entries",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autoDownloadSettings",
            "description": "Contains auto-download settings",
            "type": "AutoDownloadSettings",
            "annotations": [
                {
                    "name": "is_auto_download_enabled",
                    "type": "Bool",
                    "description": "True, if the auto-download is enabled",
                    "required": true
                },
                {
                    "name": "max_photo_file_size",
                    "type": "int32",
                    "description": "The maximum size of a photo file to be auto-downloaded, in bytes",
                    "required": true
                },
                {
                    "name": "max_video_file_size",
                    "type": "int53",
                    "description": "The maximum size of a video file to be auto-downloaded, in bytes",
                    "required": true
                },
                {
                    "name": "max_other_file_size",
                    "type": "int53",
                    "description": "The maximum size of other file types to be auto-downloaded, in bytes",
                    "required": true
                },
                {
                    "name": "video_upload_bitrate",
                    "type": "int32",
                    "description": "The maximum suggested bitrate for uploaded videos, in kbit/s",
                    "required": true
                },
                {
                    "name": "preload_large_videos",
                    "type": "Bool",
                    "description": "True, if the beginning of video files needs to be preloaded for instant playback",
                    "required": true
                },
                {
                    "name": "preload_next_audio",
                    "type": "Bool",
                    "description": "True, if the next audio track needs to be preloaded while the user is listening to an audio file",
                    "required": true
                },
                {
                    "name": "preload_stories",
                    "type": "Bool",
                    "description": "True, if stories needs to be preloaded",
                    "required": true
                },
                {
                    "name": "use_less_data_for_calls",
                    "type": "Bool",
                    "description": "True, if 'use less data for calls' option needs to be enabled",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autoDownloadSettingsPresets",
            "description": "Contains auto-download settings presets for the current user",
            "type": "AutoDownloadSettingsPresets",
            "annotations": [
                {
                    "name": "low",
                    "type": "autoDownloadSettings",
                    "description": "Preset with lowest settings; supposed to be used by default when roaming",
                    "required": true
                },
                {
                    "name": "medium",
                    "type": "autoDownloadSettings",
                    "description": "Preset with medium settings; supposed to be used by default when using mobile data",
                    "required": true
                },
                {
                    "name": "high",
                    "type": "autoDownloadSettings",
                    "description": "Preset with highest settings; supposed to be used by default when connected on Wi-Fi",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autosaveSettingsScopePrivateChats",
            "description": "Autosave settings applied to all private chats without chat-specific settings",
            "type": "AutosaveSettingsScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autosaveSettingsScopeGroupChats",
            "description": "Autosave settings applied to all basic group and supergroup chats without chat-specific settings",
            "type": "AutosaveSettingsScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autosaveSettingsScopeChannelChats",
            "description": "Autosave settings applied to all channel chats without chat-specific settings",
            "type": "AutosaveSettingsScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autosaveSettingsScopeChat",
            "description": "Autosave settings applied to a chat",
            "type": "AutosaveSettingsScope",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "scopeAutosaveSettings",
            "description": "Contains autosave settings for an autosave settings scope",
            "type": "ScopeAutosaveSettings",
            "annotations": [
                {
                    "name": "autosave_photos",
                    "type": "Bool",
                    "description": "True, if photo autosave is enabled",
                    "required": true
                },
                {
                    "name": "autosave_videos",
                    "type": "Bool",
                    "description": "True, if video autosave is enabled",
                    "required": true
                },
                {
                    "name": "max_video_file_size",
                    "type": "int53",
                    "description": "The maximum size of a video file to be autosaved, in bytes; 512 KB - 4000 MB",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autosaveSettingsException",
            "description": "Contains autosave settings for a chat, which overrides default settings for the corresponding scope",
            "type": "AutosaveSettingsException",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "settings",
                    "type": "scopeAutosaveSettings",
                    "description": "Autosave settings for the chat",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "autosaveSettings",
            "description": "Describes autosave settings",
            "type": "AutosaveSettings",
            "annotations": [
                {
                    "name": "private_chat_settings",
                    "type": "scopeAutosaveSettings",
                    "description": "Default autosave settings for private chats",
                    "required": true
                },
                {
                    "name": "group_settings",
                    "type": "scopeAutosaveSettings",
                    "description": "Default autosave settings for basic group and supergroup chats",
                    "required": true
                },
                {
                    "name": "channel_settings",
                    "type": "scopeAutosaveSettings",
                    "description": "Default autosave settings for channel chats",
                    "required": true
                },
                {
                    "name": "exceptions",
                    "type": "vector<autosaveSettingsException>",
                    "description": "Autosave settings for specific chats",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectionStateWaitingForNetwork",
            "description": "Waiting for the network to become available. Use setNetworkType to change the available network type",
            "type": "ConnectionState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectionStateConnectingToProxy",
            "description": "Establishing a connection with a proxy server",
            "type": "ConnectionState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectionStateConnecting",
            "description": "Establishing a connection to the Telegram servers",
            "type": "ConnectionState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectionStateUpdating",
            "description": "Downloading data supposed to be received while the application was offline",
            "type": "ConnectionState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "connectionStateReady",
            "description": "There is a working connection to the Telegram servers",
            "type": "ConnectionState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryUsers",
            "description": "A category containing frequently used private chats with non-bot users",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryBots",
            "description": "A category containing frequently used private chats with bot users",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryGroups",
            "description": "A category containing frequently used basic groups and supergroups",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryChannels",
            "description": "A category containing frequently used channels",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryInlineBots",
            "description": "A category containing frequently used chats with inline bots sorted by their usage in inline mode",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryWebAppBots",
            "description": "A category containing frequently used chats with bots, which Web Apps were opened",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryCalls",
            "description": "A category containing frequently used chats used for calls",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "topChatCategoryForwardChats",
            "description": "A category containing frequently used chats used to forward messages",
            "type": "TopChatCategory",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundPosition",
            "description": "Contains 0-based match position",
            "type": "FoundPosition",
            "annotations": [
                {
                    "name": "position",
                    "type": "int32",
                    "description": "The position of the match",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "foundPositions",
            "description": "Contains 0-based positions of matched objects",
            "type": "FoundPositions",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of matched objects",
                    "required": true
                },
                {
                    "name": "positions",
                    "type": "vector<int32>",
                    "description": "The positions of the matched objects",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "tMeUrlTypeUser",
            "description": "A URL linking to a user",
            "type": "TMeUrlType",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Identifier of the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "tMeUrlTypeSupergroup",
            "description": "A URL linking to a public supergroup or channel",
            "type": "TMeUrlType",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Identifier of the supergroup or channel",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "tMeUrlTypeChatInvite",
            "description": "A chat invite link",
            "type": "TMeUrlType",
            "annotations": [
                {
                    "name": "info",
                    "type": "chatInviteLinkInfo",
                    "description": "Information about the chat invite link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "tMeUrlTypeStickerSet",
            "description": "A URL linking to a sticker set",
            "type": "TMeUrlType",
            "annotations": [
                {
                    "name": "sticker_set_id",
                    "type": "int64",
                    "description": "Identifier of the sticker set",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "tMeUrl",
            "description": "Represents a URL linking to an internal Telegram entity",
            "type": "TMeUrl",
            "annotations": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "URL",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "TMeUrlType",
                    "description": "Type of the URL",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "tMeUrls",
            "description": "Contains a list of t.me URLs",
            "type": "TMeUrls",
            "annotations": [
                {
                    "name": "urls",
                    "type": "vector<tMeUrl>",
                    "description": "List of URLs",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionEnableArchiveAndMuteNewChats",
            "description": "Suggests the user to enable archive_and_mute_new_chats_from_unknown_users setting in archiveChatListSettings",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionCheckPassword",
            "description": "Suggests the user to check whether they still remember their 2-step verification password",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionCheckPhoneNumber",
            "description": "Suggests the user to check whether authorization phone number is correct and change the phone number if it is inaccessible",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionViewChecksHint",
            "description": "Suggests the user to view a hint about the meaning of one and two check marks on sent messages",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionConvertToBroadcastGroup",
            "description": "Suggests the user to convert specified supergroup to a broadcast group",
            "type": "SuggestedAction",
            "annotations": [
                {
                    "name": "supergroup_id",
                    "type": "int53",
                    "description": "Supergroup identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionSetPassword",
            "description": "Suggests the user to set a 2-step verification password to be able to log in again",
            "type": "SuggestedAction",
            "annotations": [
                {
                    "name": "authorization_delay",
                    "type": "int32",
                    "description": "The number of days to pass between consecutive authorizations if the user declines to set password; if 0, then the user is advised to set the password for security reasons",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionUpgradePremium",
            "description": "Suggests the user to upgrade the Premium subscription from monthly payments to annual payments",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionRestorePremium",
            "description": "Suggests the user to restore a recently expired Premium subscription",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionSubscribeToAnnualPremium",
            "description": "Suggests the user to subscribe to the Premium subscription with annual payments",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionGiftPremiumForChristmas",
            "description": "Suggests the user to gift Telegram Premium to friends for Christmas",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionSetBirthdate",
            "description": "Suggests the user to set birthdate",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionExtendPremium",
            "description": "Suggests the user to extend their expiring Telegram Premium subscription",
            "type": "SuggestedAction",
            "annotations": [
                {
                    "name": "manage_premium_subscription_url",
                    "type": "string",
                    "description": "A URL for managing Telegram Premium subscription",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "suggestedActionExtendStarSubscriptions",
            "description": "Suggests the user to extend their expiring Telegram Star subscriptions. Call getStarSubscriptions with only_expiring == true",
            "type": "SuggestedAction",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "count",
            "description": "Contains a counter",
            "type": "Count",
            "annotations": [
                {
                    "name": "count",
                    "type": "int32",
                    "description": "Count",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "text",
            "description": "Contains some text",
            "type": "Text",
            "annotations": [
                {
                    "name": "text",
                    "type": "string",
                    "description": "Text",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "seconds",
            "description": "Contains a value representing a number of seconds",
            "type": "Seconds",
            "annotations": [
                {
                    "name": "seconds",
                    "type": "double",
                    "description": "Number of seconds",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "fileDownloadedPrefixSize",
            "description": "Contains size of downloaded prefix of a file",
            "type": "FileDownloadedPrefixSize",
            "annotations": [
                {
                    "name": "size",
                    "type": "int53",
                    "description": "The prefix size, in bytes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "deepLinkInfo",
            "description": "Contains information about a tg: deep link",
            "type": "DeepLinkInfo",
            "annotations": [
                {
                    "name": "text",
                    "type": "formattedText",
                    "description": "Text to be shown to the user",
                    "required": true
                },
                {
                    "name": "need_update_application",
                    "type": "Bool",
                    "description": "True, if the user must be asked to update the application",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textParseModeMarkdown",
            "description": "The text uses Markdown-style formatting",
            "type": "TextParseMode",
            "annotations": [
                {
                    "name": "version",
                    "type": "int32",
                    "description": "Version of the parser: 0 or 1 - Telegram Bot API 'Markdown' parse mode, 2 - Telegram Bot API 'MarkdownV2' parse mode",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "textParseModeHTML",
            "description": "The text uses HTML-style formatting. The same as Telegram Bot API 'HTML' parse mode",
            "type": "TextParseMode",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "proxyTypeSocks5",
            "description": "A SOCKS5 proxy server",
            "type": "ProxyType",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username for logging in; may be empty",
                    "required": false
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "Password for logging in; may be empty",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "proxyTypeHttp",
            "description": "A HTTP transparent proxy server",
            "type": "ProxyType",
            "annotations": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "Username for logging in; may be empty",
                    "required": false
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "Password for logging in; may be empty",
                    "required": false
                },
                {
                    "name": "http_only",
                    "type": "Bool",
                    "description": "Pass true if the proxy supports only HTTP requests and doesn't support transparent TCP connections via HTTP CONNECT method",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "proxyTypeMtproto",
            "description": "An MTProto proxy server",
            "type": "ProxyType",
            "annotations": [
                {
                    "name": "secret",
                    "type": "string",
                    "description": "The proxy's secret in hexadecimal encoding",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "proxy",
            "description": "Contains information about a proxy server",
            "type": "Proxy",
            "annotations": [
                {
                    "name": "id",
                    "type": "int32",
                    "description": "Unique identifier of the proxy",
                    "required": true
                },
                {
                    "name": "server",
                    "type": "string",
                    "description": "Proxy server domain or IP address",
                    "required": true
                },
                {
                    "name": "port",
                    "type": "int32",
                    "description": "Proxy server port",
                    "required": true
                },
                {
                    "name": "last_used_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the proxy was last used; 0 if never",
                    "required": true
                },
                {
                    "name": "is_enabled",
                    "type": "Bool",
                    "description": "True, if the proxy is enabled now",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ProxyType",
                    "description": "Type of the proxy",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "proxies",
            "description": "Represents a list of proxy servers",
            "type": "Proxies",
            "annotations": [
                {
                    "name": "proxies",
                    "type": "vector<proxy>",
                    "description": "List of proxy servers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "inputSticker",
            "description": "A sticker to be added to a sticker set",
            "type": "InputSticker",
            "annotations": [
                {
                    "name": "sticker",
                    "type": "InputFile",
                    "description": "File with the sticker; must fit in a 512x512 square. For WEBP stickers the file must be in WEBP or PNG format, which will be converted to WEBP server-side.",
                    "required": true
                },
                {
                    "name": "format",
                    "type": "StickerFormat",
                    "description": "Format of the sticker",
                    "required": true
                },
                {
                    "name": "emojis",
                    "type": "string",
                    "description": "String with 1-20 emoji corresponding to the sticker",
                    "required": true
                },
                {
                    "name": "mask_position",
                    "type": "maskPosition",
                    "description": "Position where the mask is placed; pass null if not specified",
                    "required": false
                },
                {
                    "name": "keywords",
                    "type": "vector<string>",
                    "description": "List of up to 20 keywords with total length up to 64 characters, which can be used to find the sticker",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "dateRange",
            "description": "Represents a date range",
            "type": "DateRange",
            "annotations": [
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) at which the date range begins",
                    "required": true
                },
                {
                    "name": "end_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) at which the date range ends",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "statisticalValue",
            "description": "A value with information about its recent changes",
            "type": "StatisticalValue",
            "annotations": [
                {
                    "name": "value",
                    "type": "double",
                    "description": "The current value",
                    "required": true
                },
                {
                    "name": "previous_value",
                    "type": "double",
                    "description": "The value for the previous day",
                    "required": true
                },
                {
                    "name": "growth_rate_percentage",
                    "type": "double",
                    "description": "The growth rate of the value, as a percentage",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "statisticalGraphData",
            "description": "A graph data",
            "type": "StatisticalGraph",
            "annotations": [
                {
                    "name": "json_data",
                    "type": "string",
                    "description": "Graph data in JSON format",
                    "required": true
                },
                {
                    "name": "zoom_token",
                    "type": "string",
                    "description": "If non-empty, a token which can be used to receive a zoomed in graph",
                    "required": false
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "statisticalGraphAsync",
            "description": "The graph data to be asynchronously loaded through getStatisticalGraph",
            "type": "StatisticalGraph",
            "annotations": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "The token to use for data loading",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "statisticalGraphError",
            "description": "An error message to be shown to the user instead of the graph",
            "type": "StatisticalGraph",
            "annotations": [
                {
                    "name": "error_message",
                    "type": "string",
                    "description": "The error message",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsObjectTypeMessage",
            "description": "Describes a message sent in the chat",
            "type": "ChatStatisticsObjectType",
            "annotations": [
                {
                    "name": "message_id",
                    "type": "int53",
                    "description": "Message identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsObjectTypeStory",
            "description": "Describes a story sent by the chat",
            "type": "ChatStatisticsObjectType",
            "annotations": [
                {
                    "name": "story_id",
                    "type": "int32",
                    "description": "Story identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsInteractionInfo",
            "description": "Contains statistics about interactions with a message sent in the chat or a story sent by the chat",
            "type": "ChatStatisticsInteractionInfo",
            "annotations": [
                {
                    "name": "object_type",
                    "type": "ChatStatisticsObjectType",
                    "description": "Type of the object",
                    "required": true
                },
                {
                    "name": "view_count",
                    "type": "int32",
                    "description": "Number of times the object was viewed",
                    "required": true
                },
                {
                    "name": "forward_count",
                    "type": "int32",
                    "description": "Number of times the object was forwarded",
                    "required": true
                },
                {
                    "name": "reaction_count",
                    "type": "int32",
                    "description": "Number of times reactions were added to the object",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsMessageSenderInfo",
            "description": "Contains statistics about messages sent by a user",
            "type": "ChatStatisticsMessageSenderInfo",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "sent_message_count",
                    "type": "int32",
                    "description": "Number of sent messages",
                    "required": true
                },
                {
                    "name": "average_character_count",
                    "type": "int32",
                    "description": "Average number of characters in sent messages; 0 if unknown",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsAdministratorActionsInfo",
            "description": "Contains statistics about administrator actions done by a user",
            "type": "ChatStatisticsAdministratorActionsInfo",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "Administrator user identifier",
                    "required": true
                },
                {
                    "name": "deleted_message_count",
                    "type": "int32",
                    "description": "Number of messages deleted by the administrator",
                    "required": true
                },
                {
                    "name": "banned_user_count",
                    "type": "int32",
                    "description": "Number of users banned by the administrator",
                    "required": true
                },
                {
                    "name": "restricted_user_count",
                    "type": "int32",
                    "description": "Number of users restricted by the administrator",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsInviterInfo",
            "description": "Contains statistics about number of new members invited by a user",
            "type": "ChatStatisticsInviterInfo",
            "annotations": [
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                },
                {
                    "name": "added_member_count",
                    "type": "int32",
                    "description": "Number of new members invited by the user",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsSupergroup",
            "description": "A detailed statistics about a supergroup chat",
            "type": "ChatStatistics",
            "annotations": [
                {
                    "name": "period",
                    "type": "dateRange",
                    "description": "A period to which the statistics applies",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "statisticalValue",
                    "description": "Number of members in the chat",
                    "required": true
                },
                {
                    "name": "message_count",
                    "type": "statisticalValue",
                    "description": "Number of messages sent to the chat",
                    "required": true
                },
                {
                    "name": "viewer_count",
                    "type": "statisticalValue",
                    "description": "Number of users who viewed messages in the chat",
                    "required": true
                },
                {
                    "name": "sender_count",
                    "type": "statisticalValue",
                    "description": "Number of users who sent messages to the chat",
                    "required": true
                },
                {
                    "name": "member_count_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of members in the chat",
                    "required": true
                },
                {
                    "name": "join_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of members joined and left the chat",
                    "required": true
                },
                {
                    "name": "join_by_source_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of new member joins per source",
                    "required": true
                },
                {
                    "name": "language_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing distribution of active users per language",
                    "required": true
                },
                {
                    "name": "message_content_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing distribution of sent messages by content type",
                    "required": true
                },
                {
                    "name": "action_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of different actions in the chat",
                    "required": true
                },
                {
                    "name": "day_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing distribution of message views per hour",
                    "required": true
                },
                {
                    "name": "week_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing distribution of message views per day of week",
                    "required": true
                },
                {
                    "name": "top_senders",
                    "type": "vector<chatStatisticsMessageSenderInfo>",
                    "description": "List of users sent most messages in the last week",
                    "required": true
                },
                {
                    "name": "top_administrators",
                    "type": "vector<chatStatisticsAdministratorActionsInfo>",
                    "description": "List of most active administrators in the last week",
                    "required": true
                },
                {
                    "name": "top_inviters",
                    "type": "vector<chatStatisticsInviterInfo>",
                    "description": "List of most active inviters of new members in the last week",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatStatisticsChannel",
            "description": "A detailed statistics about a channel chat",
            "type": "ChatStatistics",
            "annotations": [
                {
                    "name": "period",
                    "type": "dateRange",
                    "description": "A period to which the statistics applies",
                    "required": true
                },
                {
                    "name": "member_count",
                    "type": "statisticalValue",
                    "description": "Number of members in the chat",
                    "required": true
                },
                {
                    "name": "mean_message_view_count",
                    "type": "statisticalValue",
                    "description": "Mean number of times the recently sent messages were viewed",
                    "required": true
                },
                {
                    "name": "mean_message_share_count",
                    "type": "statisticalValue",
                    "description": "Mean number of times the recently sent messages were shared",
                    "required": true
                },
                {
                    "name": "mean_message_reaction_count",
                    "type": "statisticalValue",
                    "description": "Mean number of times reactions were added to the recently sent messages",
                    "required": true
                },
                {
                    "name": "mean_story_view_count",
                    "type": "statisticalValue",
                    "description": "Mean number of times the recently sent stories were viewed",
                    "required": true
                },
                {
                    "name": "mean_story_share_count",
                    "type": "statisticalValue",
                    "description": "Mean number of times the recently sent stories were shared",
                    "required": true
                },
                {
                    "name": "mean_story_reaction_count",
                    "type": "statisticalValue",
                    "description": "Mean number of times reactions were added to the recently sent stories",
                    "required": true
                },
                {
                    "name": "enabled_notifications_percentage",
                    "type": "double",
                    "description": "A percentage of users with enabled notifications for the chat; 0-100",
                    "required": true
                },
                {
                    "name": "member_count_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of members in the chat",
                    "required": true
                },
                {
                    "name": "join_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of members joined and left the chat",
                    "required": true
                },
                {
                    "name": "mute_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of members muted and unmuted the chat",
                    "required": true
                },
                {
                    "name": "view_count_by_hour_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of message views in a given hour in the last two weeks",
                    "required": true
                },
                {
                    "name": "view_count_by_source_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of message views per source",
                    "required": true
                },
                {
                    "name": "join_by_source_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of new member joins per source",
                    "required": true
                },
                {
                    "name": "language_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of users viewed chat messages per language",
                    "required": true
                },
                {
                    "name": "message_interaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of chat message views and shares",
                    "required": true
                },
                {
                    "name": "message_reaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of reactions on messages",
                    "required": true
                },
                {
                    "name": "story_interaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of story views and shares",
                    "required": true
                },
                {
                    "name": "story_reaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of reactions on stories",
                    "required": true
                },
                {
                    "name": "instant_view_interaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of views of associated with the chat instant views",
                    "required": true
                },
                {
                    "name": "recent_interactions",
                    "type": "vector<chatStatisticsInteractionInfo>",
                    "description": "Detailed statistics about number of views and shares of recently sent messages and stories",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueAmount",
            "description": "Contains information about revenue earned from sponsored messages in a chat",
            "type": "ChatRevenueAmount",
            "annotations": [
                {
                    "name": "cryptocurrency",
                    "type": "string",
                    "description": "Cryptocurrency in which revenue is calculated",
                    "required": true
                },
                {
                    "name": "total_amount",
                    "type": "int64",
                    "description": "Total amount of the cryptocurrency earned, in the smallest units of the cryptocurrency",
                    "required": true
                },
                {
                    "name": "balance_amount",
                    "type": "int64",
                    "description": "Amount of the cryptocurrency that isn't withdrawn yet, in the smallest units of the cryptocurrency",
                    "required": true
                },
                {
                    "name": "available_amount",
                    "type": "int64",
                    "description": "Amount of the cryptocurrency available for withdrawal, in the smallest units of the cryptocurrency",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueStatistics",
            "description": "A detailed statistics about revenue earned from sponsored messages in a chat",
            "type": "ChatRevenueStatistics",
            "annotations": [
                {
                    "name": "revenue_by_hour_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing amount of revenue in a given hour",
                    "required": true
                },
                {
                    "name": "revenue_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing amount of revenue",
                    "required": true
                },
                {
                    "name": "revenue_amount",
                    "type": "chatRevenueAmount",
                    "description": "Amount of earned revenue",
                    "required": true
                },
                {
                    "name": "usd_rate",
                    "type": "double",
                    "description": "Current conversion rate of the cryptocurrency in which revenue is calculated to USD",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "messageStatistics",
            "description": "A detailed statistics about a message",
            "type": "MessageStatistics",
            "annotations": [
                {
                    "name": "message_interaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of message views and shares",
                    "required": true
                },
                {
                    "name": "message_reaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of message reactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "storyStatistics",
            "description": "A detailed statistics about a story",
            "type": "StoryStatistics",
            "annotations": [
                {
                    "name": "story_interaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of story views and shares",
                    "required": true
                },
                {
                    "name": "story_reaction_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing number of story reactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "revenueWithdrawalStatePending",
            "description": "Withdrawal is pending",
            "type": "RevenueWithdrawalState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "revenueWithdrawalStateSucceeded",
            "description": "Withdrawal succeeded",
            "type": "RevenueWithdrawalState",
            "annotations": [
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the withdrawal was completed",
                    "required": true
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "The URL where the withdrawal transaction can be viewed",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "revenueWithdrawalStateFailed",
            "description": "Withdrawal failed",
            "type": "RevenueWithdrawalState",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueTransactionTypeEarnings",
            "description": "Describes earnings from sponsored messages in a chat in some time frame",
            "type": "ChatRevenueTransactionType",
            "annotations": [
                {
                    "name": "start_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the earnings started",
                    "required": true
                },
                {
                    "name": "end_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the earnings ended",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueTransactionTypeWithdrawal",
            "description": "Describes a withdrawal of earnings",
            "type": "ChatRevenueTransactionType",
            "annotations": [
                {
                    "name": "withdrawal_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the earnings withdrawal started",
                    "required": true
                },
                {
                    "name": "provider",
                    "type": "string",
                    "description": "Name of the payment provider",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "RevenueWithdrawalState",
                    "description": "State of the withdrawal",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueTransactionTypeRefund",
            "description": "Describes a refund for failed withdrawal of earnings",
            "type": "ChatRevenueTransactionType",
            "annotations": [
                {
                    "name": "refund_date",
                    "type": "int32",
                    "description": "Point in time (Unix timestamp) when the transaction was refunded",
                    "required": true
                },
                {
                    "name": "provider",
                    "type": "string",
                    "description": "Name of the payment provider",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueTransaction",
            "description": "Contains a chat revenue transactions",
            "type": "ChatRevenueTransaction",
            "annotations": [
                {
                    "name": "cryptocurrency",
                    "type": "string",
                    "description": "Cryptocurrency in which revenue is calculated",
                    "required": true
                },
                {
                    "name": "cryptocurrency_amount",
                    "type": "int64",
                    "description": "The withdrawn amount, in the smallest units of the cryptocurrency",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "ChatRevenueTransactionType",
                    "description": "Type of the transaction",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "chatRevenueTransactions",
            "description": "Contains a list of chat revenue transactions",
            "type": "ChatRevenueTransactions",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int32",
                    "description": "Total number of transactions",
                    "required": true
                },
                {
                    "name": "transactions",
                    "type": "vector<chatRevenueTransaction>",
                    "description": "List of transactions",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starRevenueStatus",
            "description": "Contains information about Telegram Stars earned by a bot or a chat",
            "type": "StarRevenueStatus",
            "annotations": [
                {
                    "name": "total_count",
                    "type": "int53",
                    "description": "Total number of Telegram Stars earned",
                    "required": true
                },
                {
                    "name": "current_count",
                    "type": "int53",
                    "description": "The number of Telegram Stars that aren't withdrawn yet",
                    "required": true
                },
                {
                    "name": "available_count",
                    "type": "int53",
                    "description": "The number of Telegram Stars that are available for withdrawal",
                    "required": true
                },
                {
                    "name": "withdrawal_enabled",
                    "type": "Bool",
                    "description": "True, if Telegram Stars can be withdrawn now or later",
                    "required": true
                },
                {
                    "name": "next_withdrawal_in",
                    "type": "int32",
                    "description": "Time left before the next withdrawal can be started, in seconds; 0 if withdrawal can be started now",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "starRevenueStatistics",
            "description": "A detailed statistics about Telegram Stars earned by a bot or a chat",
            "type": "StarRevenueStatistics",
            "annotations": [
                {
                    "name": "revenue_by_day_graph",
                    "type": "StatisticalGraph",
                    "description": "A graph containing amount of revenue in a given day",
                    "required": true
                },
                {
                    "name": "status",
                    "type": "starRevenueStatus",
                    "description": "Telegram Star revenue status",
                    "required": true
                },
                {
                    "name": "usd_rate",
                    "type": "double",
                    "description": "Current conversion rate of a Telegram Star to USD",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "point",
            "description": "A point on a Cartesian plane",
            "type": "Point",
            "annotations": [
                {
                    "name": "x",
                    "type": "double",
                    "description": "The point's first coordinate",
                    "required": true
                },
                {
                    "name": "y",
                    "type": "double",
                    "description": "The point's second coordinate",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "vectorPathCommandLine",
            "description": "A straight line to a given point",
            "type": "VectorPathCommand",
            "annotations": [
                {
                    "name": "end_point",
                    "type": "point",
                    "description": "The end point of the straight line",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "vectorPathCommandCubicBezierCurve",
            "description": "A cubic B\u00e9zier curve to a given point",
            "type": "VectorPathCommand",
            "annotations": [
                {
                    "name": "start_control_point",
                    "type": "point",
                    "description": "The start control point of the curve",
                    "required": true
                },
                {
                    "name": "end_control_point",
                    "type": "point",
                    "description": "The end control point of the curve",
                    "required": true
                },
                {
                    "name": "end_point",
                    "type": "point",
                    "description": "The end point of the curve",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeDefault",
            "description": "A scope covering all users",
            "type": "BotCommandScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeAllPrivateChats",
            "description": "A scope covering all private chats",
            "type": "BotCommandScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeAllGroupChats",
            "description": "A scope covering all group and supergroup chats",
            "type": "BotCommandScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeAllChatAdministrators",
            "description": "A scope covering all group and supergroup chat administrators",
            "type": "BotCommandScope",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeChat",
            "description": "A scope covering all members of a chat",
            "type": "BotCommandScope",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeChatAdministrators",
            "description": "A scope covering all administrators of a chat",
            "type": "BotCommandScope",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "botCommandScopeChatMember",
            "description": "A scope covering a member of a chat",
            "type": "BotCommandScope",
            "annotations": [
                {
                    "name": "chat_id",
                    "type": "int53",
                    "description": "Chat identifier",
                    "required": true
                },
                {
                    "name": "user_id",
                    "type": "int53",
                    "description": "User identifier",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "phoneNumberCodeTypeChange",
            "description": "Checks ownership of a new phone number to change the user's authentication phone number; for official Android and iOS applications only",
            "type": "PhoneNumberCodeType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "phoneNumberCodeTypeVerify",
            "description": "Verifies ownership of a phone number to be added to the user's Telegram Passport",
            "type": "PhoneNumberCodeType",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "phoneNumberCodeTypeConfirmOwnership",
            "description": "Confirms ownership of a phone number to prevent account deletion while handling links of the type internalLinkTypePhoneNumberConfirmation",
            "type": "PhoneNumberCodeType",
            "annotations": [
                {
                    "name": "hash",
                    "type": "string",
                    "description": "Hash value from the link",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "logStreamDefault",
            "description": "The log is written to stderr or an OS specific log",
            "type": "LogStream",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "logStreamFile",
            "description": "The log is written to a file",
            "type": "LogStream",
            "annotations": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "Path to the file to where the internal TDLib log will be written",
                    "required": true
                },
                {
                    "name": "max_file_size",
                    "type": "int53",
                    "description": "The maximum size of the file to where the internal TDLib log is written before the file will automatically be rotated, in bytes",
                    "required": true
                },
                {
                    "name": "redirect_stderr",
                    "type": "Bool",
                    "description": "Pass true to additionally redirect stderr to the log file. Ignored on Windows",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "logStreamEmpty",
            "description": "The log is written nowhere",
            "type": "LogStream",
            "annotations": [],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "logVerbosityLevel",
            "description": "Contains a TDLib internal log verbosity level",
            "type": "LogVerbosityLevel",
            "annotations": [
                {
                    "name": "verbosity_level",
                    "type": "int32",
                    "description": "Log verbosity level",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "logTags",
            "description": "Contains a list of available TDLib internal log tags",
            "type": "LogTags",
            "annotations": [
                {
                    "name": "tags",
                    "type": "vector<string>",
                    "description": "List of log tags",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "userSupportInfo",
            "description": "Contains custom information about the user",
            "type": "UserSupportInfo",
            "annotations": [
                {
                    "name": "message",
                    "type": "formattedText",
                    "description": "Information message",
                    "required": true
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Information author",
                    "required": true
                },
                {
                    "name": "date",
                    "type": "int32",
                    "description": "Information change date",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testInt",
            "description": "A simple object containing a number; for testing only",
            "type": "TestInt",
            "annotations": [
                {
                    "name": "value",
                    "type": "int32",
                    "description": "Number",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testString",
            "description": "A simple object containing a string; for testing only",
            "type": "TestString",
            "annotations": [
                {
                    "name": "value",
                    "type": "string",
                    "description": "String",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testBytes",
            "description": "A simple object containing a sequence of bytes; for testing only",
            "type": "TestBytes",
            "annotations": [
                {
                    "name": "value",
                    "type": "bytes",
                    "description": "Bytes",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testVectorInt",
            "description": "A simple object containing a vector of numbers; for testing only",
            "type": "TestVectorInt",
            "annotations": [
                {
                    "name": "value",
                    "type": "vector<int32>",
                    "description": "Vector of numbers",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testVectorIntObject",
            "description": "A simple object containing a vector of objects that hold a number; for testing only",
            "type": "TestVectorIntObject",
            "annotations": [
                {
                    "name": "value",
                    "type": "vector<testInt>",
                    "description": "Vector of objects",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testVectorString",
            "description": "A simple object containing a vector of strings; for testing only",
            "type": "TestVectorString",
            "annotations": [
                {
                    "name": "value",
                    "type": "vector<string>",
                    "description": "Vector of strings",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        },
        {
            "name": "testVectorStringObject",
            "description": "A simple object containing a vector of objects that hold a string; for testing only",
            "type": "TestVectorStringObject",
            "annotations": [
                {
                    "name": "value",
                    "type": "vector<testString>",
                    "description": "Vector of objects",
                    "required": true
                }
            ],
            "is_method": false,
            "is_type": true,
            "is_update": false
        }
    ],
    "unions": {
        "AuthenticationCodeType": [
            "AuthenticationCodeTypeTelegramMessage",
            "AuthenticationCodeTypeSms",
            "AuthenticationCodeTypeSmsWord",
            "AuthenticationCodeTypeSmsPhrase",
            "AuthenticationCodeTypeCall",
            "AuthenticationCodeTypeFlashCall",
            "AuthenticationCodeTypeMissedCall",
            "AuthenticationCodeTypeFragment",
            "AuthenticationCodeTypeFirebaseAndroid",
            "AuthenticationCodeTypeFirebaseIos"
        ],
        "EmailAddressAuthentication": [
            "EmailAddressAuthenticationCode",
            "EmailAddressAuthenticationAppleId",
            "EmailAddressAuthenticationGoogleId"
        ],
        "EmailAddressResetState": [
            "EmailAddressResetStateAvailable",
            "EmailAddressResetStatePending"
        ],
        "AuthorizationState": [
            "AuthorizationStateWaitTdlibParameters",
            "AuthorizationStateWaitPhoneNumber",
            "AuthorizationStateWaitEmailAddress",
            "AuthorizationStateWaitEmailCode",
            "AuthorizationStateWaitCode",
            "AuthorizationStateWaitOtherDeviceConfirmation",
            "AuthorizationStateWaitRegistration",
            "AuthorizationStateWaitPassword",
            "AuthorizationStateReady",
            "AuthorizationStateLoggingOut",
            "AuthorizationStateClosing",
            "AuthorizationStateClosed"
        ],
        "FirebaseDeviceVerificationParameters": [
            "FirebaseDeviceVerificationParametersSafetyNet",
            "FirebaseDeviceVerificationParametersPlayIntegrity"
        ],
        "InputFile": [
            "InputFileId",
            "InputFileRemote",
            "InputFileLocal",
            "InputFileGenerated"
        ],
        "ThumbnailFormat": [
            "ThumbnailFormatJpeg",
            "ThumbnailFormatGif",
            "ThumbnailFormatMpeg4",
            "ThumbnailFormatPng",
            "ThumbnailFormatTgs",
            "ThumbnailFormatWebm",
            "ThumbnailFormatWebp"
        ],
        "MaskPoint": [
            "MaskPointForehead",
            "MaskPointEyes",
            "MaskPointMouth",
            "MaskPointChin"
        ],
        "StickerFormat": [
            "StickerFormatWebp",
            "StickerFormatTgs",
            "StickerFormatWebm"
        ],
        "StickerType": [
            "StickerTypeRegular",
            "StickerTypeMask",
            "StickerTypeCustomEmoji"
        ],
        "StickerFullType": [
            "StickerFullTypeRegular",
            "StickerFullTypeMask",
            "StickerFullTypeCustomEmoji"
        ],
        "PollType": [
            "PollTypeRegular",
            "PollTypeQuiz"
        ],
        "UserType": [
            "UserTypeRegular",
            "UserTypeDeleted",
            "UserTypeBot",
            "UserTypeUnknown"
        ],
        "BusinessAwayMessageSchedule": [
            "BusinessAwayMessageScheduleAlways",
            "BusinessAwayMessageScheduleOutsideOfOpeningHours",
            "BusinessAwayMessageScheduleCustom"
        ],
        "ChatPhotoStickerType": [
            "ChatPhotoStickerTypeRegularOrMask",
            "ChatPhotoStickerTypeCustomEmoji"
        ],
        "InputChatPhoto": [
            "InputChatPhotoPrevious",
            "InputChatPhotoStatic",
            "InputChatPhotoAnimation",
            "InputChatPhotoSticker"
        ],
        "StarTransactionDirection": [
            "StarTransactionDirectionIncoming",
            "StarTransactionDirectionOutgoing"
        ],
        "BotTransactionPurpose": [
            "BotTransactionPurposePaidMedia",
            "BotTransactionPurposeInvoicePayment"
        ],
        "ChannelTransactionPurpose": [
            "ChannelTransactionPurposePaidMedia",
            "ChannelTransactionPurposeJoin",
            "ChannelTransactionPurposeReaction"
        ],
        "StarTransactionPartner": [
            "StarTransactionPartnerTelegram",
            "StarTransactionPartnerAppStore",
            "StarTransactionPartnerGooglePlay",
            "StarTransactionPartnerFragment",
            "StarTransactionPartnerTelegramAds",
            "StarTransactionPartnerBot",
            "StarTransactionPartnerBusiness",
            "StarTransactionPartnerChannel",
            "StarTransactionPartnerUser",
            "StarTransactionPartnerUnsupported"
        ],
        "PremiumGiveawayParticipantStatus": [
            "PremiumGiveawayParticipantStatusEligible",
            "PremiumGiveawayParticipantStatusParticipating",
            "PremiumGiveawayParticipantStatusAlreadyWasMember",
            "PremiumGiveawayParticipantStatusAdministrator",
            "PremiumGiveawayParticipantStatusDisallowedCountry"
        ],
        "PremiumGiveawayInfo": [
            "PremiumGiveawayInfoOngoing",
            "PremiumGiveawayInfoCompleted"
        ],
        "ChatMemberStatus": [
            "ChatMemberStatusCreator",
            "ChatMemberStatusAdministrator",
            "ChatMemberStatusMember",
            "ChatMemberStatusRestricted",
            "ChatMemberStatusLeft",
            "ChatMemberStatusBanned"
        ],
        "ChatMembersFilter": [
            "ChatMembersFilterContacts",
            "ChatMembersFilterAdministrators",
            "ChatMembersFilterMembers",
            "ChatMembersFilterMention",
            "ChatMembersFilterRestricted",
            "ChatMembersFilterBanned",
            "ChatMembersFilterBots"
        ],
        "SupergroupMembersFilter": [
            "SupergroupMembersFilterRecent",
            "SupergroupMembersFilterContacts",
            "SupergroupMembersFilterAdministrators",
            "SupergroupMembersFilterSearch",
            "SupergroupMembersFilterRestricted",
            "SupergroupMembersFilterBanned",
            "SupergroupMembersFilterMention",
            "SupergroupMembersFilterBots"
        ],
        "InviteLinkChatType": [
            "InviteLinkChatTypeBasicGroup",
            "InviteLinkChatTypeSupergroup",
            "InviteLinkChatTypeChannel"
        ],
        "SecretChatState": [
            "SecretChatStatePending",
            "SecretChatStateReady",
            "SecretChatStateClosed"
        ],
        "MessageSender": [
            "MessageSenderUser",
            "MessageSenderChat"
        ],
        "MessageReadDate": [
            "MessageReadDateRead",
            "MessageReadDateUnread",
            "MessageReadDateTooOld",
            "MessageReadDateUserPrivacyRestricted",
            "MessageReadDateMyPrivacyRestricted"
        ],
        "MessageOrigin": [
            "MessageOriginUser",
            "MessageOriginHiddenUser",
            "MessageOriginChat",
            "MessageOriginChannel"
        ],
        "ReactionType": [
            "ReactionTypeEmoji",
            "ReactionTypeCustomEmoji",
            "ReactionTypePaid"
        ],
        "MessageEffectType": [
            "MessageEffectTypeEmojiReaction",
            "MessageEffectTypePremiumSticker"
        ],
        "MessageSendingState": [
            "MessageSendingStatePending",
            "MessageSendingStateFailed"
        ],
        "MessageReplyTo": [
            "MessageReplyToMessage",
            "MessageReplyToStory"
        ],
        "InputMessageReplyTo": [
            "InputMessageReplyToMessage",
            "InputMessageReplyToExternalMessage",
            "InputMessageReplyToStory"
        ],
        "MessageSource": [
            "MessageSourceChatHistory",
            "MessageSourceMessageThreadHistory",
            "MessageSourceForumTopicHistory",
            "MessageSourceHistoryPreview",
            "MessageSourceChatList",
            "MessageSourceSearch",
            "MessageSourceChatEventLog",
            "MessageSourceNotification",
            "MessageSourceScreenshot",
            "MessageSourceOther"
        ],
        "ReportChatSponsoredMessageResult": [
            "ReportChatSponsoredMessageResultOk",
            "ReportChatSponsoredMessageResultFailed",
            "ReportChatSponsoredMessageResultOptionRequired",
            "ReportChatSponsoredMessageResultAdsHidden",
            "ReportChatSponsoredMessageResultPremiumRequired"
        ],
        "NotificationSettingsScope": [
            "NotificationSettingsScopePrivateChats",
            "NotificationSettingsScopeGroupChats",
            "NotificationSettingsScopeChannelChats"
        ],
        "ReactionNotificationSource": [
            "ReactionNotificationSourceNone",
            "ReactionNotificationSourceContacts",
            "ReactionNotificationSourceAll"
        ],
        "ChatType": [
            "ChatTypePrivate",
            "ChatTypeBasicGroup",
            "ChatTypeSupergroup",
            "ChatTypeSecret"
        ],
        "ChatList": [
            "ChatListMain",
            "ChatListArchive",
            "ChatListFolder"
        ],
        "ChatSource": [
            "ChatSourceMtprotoProxy",
            "ChatSourcePublicServiceAnnouncement"
        ],
        "ChatAvailableReactions": [
            "ChatAvailableReactionsAll",
            "ChatAvailableReactionsSome"
        ],
        "PublicChatType": [
            "PublicChatTypeHasUsername",
            "PublicChatTypeIsLocationBased"
        ],
        "ChatActionBar": [
            "ChatActionBarReportSpam",
            "ChatActionBarReportUnrelatedLocation",
            "ChatActionBarInviteMembers",
            "ChatActionBarReportAddBlock",
            "ChatActionBarAddContact",
            "ChatActionBarSharePhoneNumber",
            "ChatActionBarJoinRequest"
        ],
        "KeyboardButtonType": [
            "KeyboardButtonTypeText",
            "KeyboardButtonTypeRequestPhoneNumber",
            "KeyboardButtonTypeRequestLocation",
            "KeyboardButtonTypeRequestPoll",
            "KeyboardButtonTypeRequestUsers",
            "KeyboardButtonTypeRequestChat",
            "KeyboardButtonTypeWebApp"
        ],
        "InlineKeyboardButtonType": [
            "InlineKeyboardButtonTypeUrl",
            "InlineKeyboardButtonTypeLoginUrl",
            "InlineKeyboardButtonTypeWebApp",
            "InlineKeyboardButtonTypeCallback",
            "InlineKeyboardButtonTypeCallbackWithPassword",
            "InlineKeyboardButtonTypeCallbackGame",
            "InlineKeyboardButtonTypeSwitchInline",
            "InlineKeyboardButtonTypeBuy",
            "InlineKeyboardButtonTypeUser"
        ],
        "ReplyMarkup": [
            "ReplyMarkupRemoveKeyboard",
            "ReplyMarkupForceReply",
            "ReplyMarkupShowKeyboard",
            "ReplyMarkupInlineKeyboard"
        ],
        "LoginUrlInfo": [
            "LoginUrlInfoOpen",
            "LoginUrlInfoRequestConfirmation"
        ],
        "SavedMessagesTopicType": [
            "SavedMessagesTopicTypeMyNotes",
            "SavedMessagesTopicTypeAuthorHidden",
            "SavedMessagesTopicTypeSavedFromChat"
        ],
        "RichText": [
            "RichTextPlain",
            "RichTextBold",
            "RichTextItalic",
            "RichTextUnderline",
            "RichTextStrikethrough",
            "RichTextFixed",
            "RichTextUrl",
            "RichTextEmailAddress",
            "RichTextSubscript",
            "RichTextSuperscript",
            "RichTextMarked",
            "RichTextPhoneNumber",
            "RichTextIcon",
            "RichTextReference",
            "RichTextAnchor",
            "RichTextAnchorLink",
            "RichTexts"
        ],
        "PageBlockHorizontalAlignment": [
            "PageBlockHorizontalAlignmentLeft",
            "PageBlockHorizontalAlignmentCenter",
            "PageBlockHorizontalAlignmentRight"
        ],
        "PageBlockVerticalAlignment": [
            "PageBlockVerticalAlignmentTop",
            "PageBlockVerticalAlignmentMiddle",
            "PageBlockVerticalAlignmentBottom"
        ],
        "PageBlock": [
            "PageBlockTitle",
            "PageBlockSubtitle",
            "PageBlockAuthorDate",
            "PageBlockHeader",
            "PageBlockSubheader",
            "PageBlockKicker",
            "PageBlockParagraph",
            "PageBlockPreformatted",
            "PageBlockFooter",
            "PageBlockDivider",
            "PageBlockAnchor",
            "PageBlockList",
            "PageBlockBlockQuote",
            "PageBlockPullQuote",
            "PageBlockAnimation",
            "PageBlockAudio",
            "PageBlockPhoto",
            "PageBlockVideo",
            "PageBlockVoiceNote",
            "PageBlockCover",
            "PageBlockEmbedded",
            "PageBlockEmbeddedPost",
            "PageBlockCollage",
            "PageBlockSlideshow",
            "PageBlockChatLink",
            "PageBlockTable",
            "PageBlockDetails",
            "PageBlockRelatedArticles",
            "PageBlockMap"
        ],
        "LinkPreviewAlbumMedia": [
            "LinkPreviewAlbumMediaPhoto",
            "LinkPreviewAlbumMediaVideo"
        ],
        "LinkPreviewType": [
            "LinkPreviewTypeAlbum",
            "LinkPreviewTypeAnimation",
            "LinkPreviewTypeApp",
            "LinkPreviewTypeArticle",
            "LinkPreviewTypeAudio",
            "LinkPreviewTypeBackground",
            "LinkPreviewTypeChannelBoost",
            "LinkPreviewTypeChat",
            "LinkPreviewTypeDocument",
            "LinkPreviewTypeEmbeddedAnimationPlayer",
            "LinkPreviewTypeEmbeddedAudioPlayer",
            "LinkPreviewTypeEmbeddedVideoPlayer",
            "LinkPreviewTypeInvoice",
            "LinkPreviewTypeMessage",
            "LinkPreviewTypePhoto",
            "LinkPreviewTypePremiumGiftCode",
            "LinkPreviewTypeShareableChatFolder",
            "LinkPreviewTypeSticker",
            "LinkPreviewTypeStickerSet",
            "LinkPreviewTypeStory",
            "LinkPreviewTypeSupergroupBoost",
            "LinkPreviewTypeTheme",
            "LinkPreviewTypeUnsupported",
            "LinkPreviewTypeUser",
            "LinkPreviewTypeVideo",
            "LinkPreviewTypeVideoChat",
            "LinkPreviewTypeVideoNote",
            "LinkPreviewTypeVoiceNote",
            "LinkPreviewTypeWebApp"
        ],
        "CollectibleItemType": [
            "CollectibleItemTypeUsername",
            "CollectibleItemTypePhoneNumber"
        ],
        "InputCredentials": [
            "InputCredentialsSaved",
            "InputCredentialsNew",
            "InputCredentialsApplePay",
            "InputCredentialsGooglePay"
        ],
        "PaymentProvider": [
            "PaymentProviderSmartGlocal",
            "PaymentProviderStripe",
            "PaymentProviderOther"
        ],
        "PaymentFormType": [
            "PaymentFormTypeRegular",
            "PaymentFormTypeStars"
        ],
        "PaymentReceiptType": [
            "PaymentReceiptTypeRegular",
            "PaymentReceiptTypeStars"
        ],
        "InputInvoice": [
            "InputInvoiceMessage",
            "InputInvoiceName",
            "InputInvoiceTelegram"
        ],
        "PaidMedia": [
            "PaidMediaPreview",
            "PaidMediaPhoto",
            "PaidMediaVideo",
            "PaidMediaUnsupported"
        ],
        "PassportElementType": [
            "PassportElementTypePersonalDetails",
            "PassportElementTypePassport",
            "PassportElementTypeDriverLicense",
            "PassportElementTypeIdentityCard",
            "PassportElementTypeInternalPassport",
            "PassportElementTypeAddress",
            "PassportElementTypeUtilityBill",
            "PassportElementTypeBankStatement",
            "PassportElementTypeRentalAgreement",
            "PassportElementTypePassportRegistration",
            "PassportElementTypeTemporaryRegistration",
            "PassportElementTypePhoneNumber",
            "PassportElementTypeEmailAddress"
        ],
        "PassportElement": [
            "PassportElementPersonalDetails",
            "PassportElementPassport",
            "PassportElementDriverLicense",
            "PassportElementIdentityCard",
            "PassportElementInternalPassport",
            "PassportElementAddress",
            "PassportElementUtilityBill",
            "PassportElementBankStatement",
            "PassportElementRentalAgreement",
            "PassportElementPassportRegistration",
            "PassportElementTemporaryRegistration",
            "PassportElementPhoneNumber",
            "PassportElementEmailAddress"
        ],
        "InputPassportElement": [
            "InputPassportElementPersonalDetails",
            "InputPassportElementPassport",
            "InputPassportElementDriverLicense",
            "InputPassportElementIdentityCard",
            "InputPassportElementInternalPassport",
            "InputPassportElementAddress",
            "InputPassportElementUtilityBill",
            "InputPassportElementBankStatement",
            "InputPassportElementRentalAgreement",
            "InputPassportElementPassportRegistration",
            "InputPassportElementTemporaryRegistration",
            "InputPassportElementPhoneNumber",
            "InputPassportElementEmailAddress"
        ],
        "PassportElementErrorSource": [
            "PassportElementErrorSourceUnspecified",
            "PassportElementErrorSourceDataField",
            "PassportElementErrorSourceFrontSide",
            "PassportElementErrorSourceReverseSide",
            "PassportElementErrorSourceSelfie",
            "PassportElementErrorSourceTranslationFile",
            "PassportElementErrorSourceTranslationFiles",
            "PassportElementErrorSourceFile",
            "PassportElementErrorSourceFiles"
        ],
        "InputPassportElementErrorSource": [
            "InputPassportElementErrorSourceUnspecified",
            "InputPassportElementErrorSourceDataField",
            "InputPassportElementErrorSourceFrontSide",
            "InputPassportElementErrorSourceReverseSide",
            "InputPassportElementErrorSourceSelfie",
            "InputPassportElementErrorSourceTranslationFile",
            "InputPassportElementErrorSourceTranslationFiles",
            "InputPassportElementErrorSourceFile",
            "InputPassportElementErrorSourceFiles"
        ],
        "MessageContent": [
            "MessageText",
            "MessageAnimation",
            "MessageAudio",
            "MessageDocument",
            "MessagePaidMedia",
            "MessagePhoto",
            "MessageSticker",
            "MessageVideo",
            "MessageVideoNote",
            "MessageVoiceNote",
            "MessageExpiredPhoto",
            "MessageExpiredVideo",
            "MessageExpiredVideoNote",
            "MessageExpiredVoiceNote",
            "MessageLocation",
            "MessageVenue",
            "MessageContact",
            "MessageAnimatedEmoji",
            "MessageDice",
            "MessageGame",
            "MessagePoll",
            "MessageStory",
            "MessageInvoice",
            "MessageCall",
            "MessageVideoChatScheduled",
            "MessageVideoChatStarted",
            "MessageVideoChatEnded",
            "MessageInviteVideoChatParticipants",
            "MessageBasicGroupChatCreate",
            "MessageSupergroupChatCreate",
            "MessageChatChangeTitle",
            "MessageChatChangePhoto",
            "MessageChatDeletePhoto",
            "MessageChatAddMembers",
            "MessageChatJoinByLink",
            "MessageChatJoinByRequest",
            "MessageChatDeleteMember",
            "MessageChatUpgradeTo",
            "MessageChatUpgradeFrom",
            "MessagePinMessage",
            "MessageScreenshotTaken",
            "MessageChatSetBackground",
            "MessageChatSetTheme",
            "MessageChatSetMessageAutoDeleteTime",
            "MessageChatBoost",
            "MessageForumTopicCreated",
            "MessageForumTopicEdited",
            "MessageForumTopicIsClosedToggled",
            "MessageForumTopicIsHiddenToggled",
            "MessageSuggestProfilePhoto",
            "MessageCustomServiceAction",
            "MessageGameScore",
            "MessagePaymentSuccessful",
            "MessagePaymentSuccessfulBot",
            "MessagePaymentRefunded",
            "MessageGiftedPremium",
            "MessagePremiumGiftCode",
            "MessagePremiumGiveawayCreated",
            "MessagePremiumGiveaway",
            "MessagePremiumGiveawayCompleted",
            "MessagePremiumGiveawayWinners",
            "MessageGiftedStars",
            "MessageContactRegistered",
            "MessageUsersShared",
            "MessageChatShared",
            "MessageBotWriteAccessAllowed",
            "MessageWebAppDataSent",
            "MessageWebAppDataReceived",
            "MessagePassportDataSent",
            "MessagePassportDataReceived",
            "MessageProximityAlertTriggered",
            "MessageUnsupported"
        ],
        "TextEntityType": [
            "TextEntityTypeMention",
            "TextEntityTypeHashtag",
            "TextEntityTypeCashtag",
            "TextEntityTypeBotCommand",
            "TextEntityTypeUrl",
            "TextEntityTypeEmailAddress",
            "TextEntityTypePhoneNumber",
            "TextEntityTypeBankCardNumber",
            "TextEntityTypeBold",
            "TextEntityTypeItalic",
            "TextEntityTypeUnderline",
            "TextEntityTypeStrikethrough",
            "TextEntityTypeSpoiler",
            "TextEntityTypeCode",
            "TextEntityTypePre",
            "TextEntityTypePreCode",
            "TextEntityTypeBlockQuote",
            "TextEntityTypeExpandableBlockQuote",
            "TextEntityTypeTextUrl",
            "TextEntityTypeMentionName",
            "TextEntityTypeCustomEmoji",
            "TextEntityTypeMediaTimestamp"
        ],
        "InputPaidMediaType": [
            "InputPaidMediaTypePhoto",
            "InputPaidMediaTypeVideo"
        ],
        "MessageSchedulingState": [
            "MessageSchedulingStateSendAtDate",
            "MessageSchedulingStateSendWhenOnline"
        ],
        "MessageSelfDestructType": [
            "MessageSelfDestructTypeTimer",
            "MessageSelfDestructTypeImmediately"
        ],
        "InputMessageContent": [
            "InputMessageText",
            "InputMessageAnimation",
            "InputMessageAudio",
            "InputMessageDocument",
            "InputMessagePaidMedia",
            "InputMessagePhoto",
            "InputMessageSticker",
            "InputMessageVideo",
            "InputMessageVideoNote",
            "InputMessageVoiceNote",
            "InputMessageLocation",
            "InputMessageVenue",
            "InputMessageContact",
            "InputMessageDice",
            "InputMessageGame",
            "InputMessageInvoice",
            "InputMessagePoll",
            "InputMessageStory",
            "InputMessageForwarded"
        ],
        "SearchMessagesFilter": [
            "SearchMessagesFilterEmpty",
            "SearchMessagesFilterAnimation",
            "SearchMessagesFilterAudio",
            "SearchMessagesFilterDocument",
            "SearchMessagesFilterPhoto",
            "SearchMessagesFilterVideo",
            "SearchMessagesFilterVoiceNote",
            "SearchMessagesFilterPhotoAndVideo",
            "SearchMessagesFilterUrl",
            "SearchMessagesFilterChatPhoto",
            "SearchMessagesFilterVideoNote",
            "SearchMessagesFilterVoiceAndVideoNote",
            "SearchMessagesFilterMention",
            "SearchMessagesFilterUnreadMention",
            "SearchMessagesFilterUnreadReaction",
            "SearchMessagesFilterFailedToSend",
            "SearchMessagesFilterPinned"
        ],
        "ChatAction": [
            "ChatActionTyping",
            "ChatActionRecordingVideo",
            "ChatActionUploadingVideo",
            "ChatActionRecordingVoiceNote",
            "ChatActionUploadingVoiceNote",
            "ChatActionUploadingPhoto",
            "ChatActionUploadingDocument",
            "ChatActionChoosingSticker",
            "ChatActionChoosingLocation",
            "ChatActionChoosingContact",
            "ChatActionStartPlayingGame",
            "ChatActionRecordingVideoNote",
            "ChatActionUploadingVideoNote",
            "ChatActionWatchingAnimations",
            "ChatActionCancel"
        ],
        "UserStatus": [
            "UserStatusEmpty",
            "UserStatusOnline",
            "UserStatusOffline",
            "UserStatusRecently",
            "UserStatusLastWeek",
            "UserStatusLastMonth"
        ],
        "EmojiCategorySource": [
            "EmojiCategorySourceSearch",
            "EmojiCategorySourcePremium"
        ],
        "EmojiCategoryType": [
            "EmojiCategoryTypeDefault",
            "EmojiCategoryTypeRegularStickers",
            "EmojiCategoryTypeEmojiStatus",
            "EmojiCategoryTypeChatPhoto"
        ],
        "StoryAreaType": [
            "StoryAreaTypeLocation",
            "StoryAreaTypeVenue",
            "StoryAreaTypeSuggestedReaction",
            "StoryAreaTypeMessage",
            "StoryAreaTypeLink",
            "StoryAreaTypeWeather"
        ],
        "InputStoryAreaType": [
            "InputStoryAreaTypeLocation",
            "InputStoryAreaTypeFoundVenue",
            "InputStoryAreaTypePreviousVenue",
            "InputStoryAreaTypeSuggestedReaction",
            "InputStoryAreaTypeMessage",
            "InputStoryAreaTypeLink",
            "InputStoryAreaTypeWeather"
        ],
        "StoryContent": [
            "StoryContentPhoto",
            "StoryContentVideo",
            "StoryContentUnsupported"
        ],
        "InputStoryContent": [
            "InputStoryContentPhoto",
            "InputStoryContentVideo"
        ],
        "StoryList": [
            "StoryListMain",
            "StoryListArchive"
        ],
        "StoryOrigin": [
            "StoryOriginPublicStory",
            "StoryOriginHiddenUser"
        ],
        "StoryInteractionType": [
            "StoryInteractionTypeView",
            "StoryInteractionTypeForward",
            "StoryInteractionTypeRepost"
        ],
        "PublicForward": [
            "PublicForwardMessage",
            "PublicForwardStory"
        ],
        "ChatBoostSource": [
            "ChatBoostSourceGiftCode",
            "ChatBoostSourceGiveaway",
            "ChatBoostSourcePremium"
        ],
        "ResendCodeReason": [
            "ResendCodeReasonUserRequest",
            "ResendCodeReasonVerificationFailed"
        ],
        "CallDiscardReason": [
            "CallDiscardReasonEmpty",
            "CallDiscardReasonMissed",
            "CallDiscardReasonDeclined",
            "CallDiscardReasonDisconnected",
            "CallDiscardReasonHungUp"
        ],
        "CallServerType": [
            "CallServerTypeTelegramReflector",
            "CallServerTypeWebrtc"
        ],
        "CallState": [
            "CallStatePending",
            "CallStateExchangingKeys",
            "CallStateReady",
            "CallStateHangingUp",
            "CallStateDiscarded",
            "CallStateError"
        ],
        "GroupCallVideoQuality": [
            "GroupCallVideoQualityThumbnail",
            "GroupCallVideoQualityMedium",
            "GroupCallVideoQualityFull"
        ],
        "CallProblem": [
            "CallProblemEcho",
            "CallProblemNoise",
            "CallProblemInterruptions",
            "CallProblemDistortedSpeech",
            "CallProblemSilentLocal",
            "CallProblemSilentRemote",
            "CallProblemDropped",
            "CallProblemDistortedVideo",
            "CallProblemPixelatedVideo"
        ],
        "FirebaseAuthenticationSettings": [
            "FirebaseAuthenticationSettingsAndroid",
            "FirebaseAuthenticationSettingsIos"
        ],
        "ReactionUnavailabilityReason": [
            "ReactionUnavailabilityReasonAnonymousAdministrator",
            "ReactionUnavailabilityReasonGuest"
        ],
        "DiceStickers": [
            "DiceStickersRegular",
            "DiceStickersSlotMachine"
        ],
        "SpeechRecognitionResult": [
            "SpeechRecognitionResultPending",
            "SpeechRecognitionResultText",
            "SpeechRecognitionResultError"
        ],
        "BotWriteAccessAllowReason": [
            "BotWriteAccessAllowReasonConnectedWebsite",
            "BotWriteAccessAllowReasonAddedToAttachmentMenu",
            "BotWriteAccessAllowReasonLaunchedWebApp",
            "BotWriteAccessAllowReasonAcceptedRequest"
        ],
        "InputInlineQueryResult": [
            "InputInlineQueryResultAnimation",
            "InputInlineQueryResultArticle",
            "InputInlineQueryResultAudio",
            "InputInlineQueryResultContact",
            "InputInlineQueryResultDocument",
            "InputInlineQueryResultGame",
            "InputInlineQueryResultLocation",
            "InputInlineQueryResultPhoto",
            "InputInlineQueryResultSticker",
            "InputInlineQueryResultVenue",
            "InputInlineQueryResultVideo",
            "InputInlineQueryResultVoiceNote"
        ],
        "InlineQueryResult": [
            "InlineQueryResultArticle",
            "InlineQueryResultContact",
            "InlineQueryResultLocation",
            "InlineQueryResultVenue",
            "InlineQueryResultGame",
            "InlineQueryResultAnimation",
            "InlineQueryResultAudio",
            "InlineQueryResultDocument",
            "InlineQueryResultPhoto",
            "InlineQueryResultSticker",
            "InlineQueryResultVideo",
            "InlineQueryResultVoiceNote"
        ],
        "InlineQueryResultsButtonType": [
            "InlineQueryResultsButtonTypeStartBot",
            "InlineQueryResultsButtonTypeWebApp"
        ],
        "CallbackQueryPayload": [
            "CallbackQueryPayloadData",
            "CallbackQueryPayloadDataWithPassword",
            "CallbackQueryPayloadGame"
        ],
        "ChatEventAction": [
            "ChatEventMessageEdited",
            "ChatEventMessageDeleted",
            "ChatEventMessagePinned",
            "ChatEventMessageUnpinned",
            "ChatEventPollStopped",
            "ChatEventMemberJoined",
            "ChatEventMemberJoinedByInviteLink",
            "ChatEventMemberJoinedByRequest",
            "ChatEventMemberInvited",
            "ChatEventMemberLeft",
            "ChatEventMemberPromoted",
            "ChatEventMemberRestricted",
            "ChatEventAvailableReactionsChanged",
            "ChatEventBackgroundChanged",
            "ChatEventDescriptionChanged",
            "ChatEventEmojiStatusChanged",
            "ChatEventLinkedChatChanged",
            "ChatEventLocationChanged",
            "ChatEventMessageAutoDeleteTimeChanged",
            "ChatEventPermissionsChanged",
            "ChatEventPhotoChanged",
            "ChatEventSlowModeDelayChanged",
            "ChatEventStickerSetChanged",
            "ChatEventCustomEmojiStickerSetChanged",
            "ChatEventTitleChanged",
            "ChatEventUsernameChanged",
            "ChatEventActiveUsernamesChanged",
            "ChatEventAccentColorChanged",
            "ChatEventProfileAccentColorChanged",
            "ChatEventHasProtectedContentToggled",
            "ChatEventInvitesToggled",
            "ChatEventIsAllHistoryAvailableToggled",
            "ChatEventHasAggressiveAntiSpamEnabledToggled",
            "ChatEventSignMessagesToggled",
            "ChatEventShowMessageSenderToggled",
            "ChatEventInviteLinkEdited",
            "ChatEventInviteLinkRevoked",
            "ChatEventInviteLinkDeleted",
            "ChatEventVideoChatCreated",
            "ChatEventVideoChatEnded",
            "ChatEventVideoChatMuteNewParticipantsToggled",
            "ChatEventVideoChatParticipantIsMutedToggled",
            "ChatEventVideoChatParticipantVolumeLevelChanged",
            "ChatEventIsForumToggled",
            "ChatEventForumTopicCreated",
            "ChatEventForumTopicEdited",
            "ChatEventForumTopicToggleIsClosed",
            "ChatEventForumTopicToggleIsHidden",
            "ChatEventForumTopicDeleted",
            "ChatEventForumTopicPinned"
        ],
        "LanguagePackStringValue": [
            "LanguagePackStringValueOrdinary",
            "LanguagePackStringValuePluralized",
            "LanguagePackStringValueDeleted"
        ],
        "PremiumLimitType": [
            "PremiumLimitTypeSupergroupCount",
            "PremiumLimitTypePinnedChatCount",
            "PremiumLimitTypeCreatedPublicChatCount",
            "PremiumLimitTypeSavedAnimationCount",
            "PremiumLimitTypeFavoriteStickerCount",
            "PremiumLimitTypeChatFolderCount",
            "PremiumLimitTypeChatFolderChosenChatCount",
            "PremiumLimitTypePinnedArchivedChatCount",
            "PremiumLimitTypePinnedSavedMessagesTopicCount",
            "PremiumLimitTypeCaptionLength",
            "PremiumLimitTypeBioLength",
            "PremiumLimitTypeChatFolderInviteLinkCount",
            "PremiumLimitTypeShareableChatFolderCount",
            "PremiumLimitTypeActiveStoryCount",
            "PremiumLimitTypeWeeklySentStoryCount",
            "PremiumLimitTypeMonthlySentStoryCount",
            "PremiumLimitTypeStoryCaptionLength",
            "PremiumLimitTypeStorySuggestedReactionAreaCount",
            "PremiumLimitTypeSimilarChatCount"
        ],
        "PremiumFeature": [
            "PremiumFeatureIncreasedLimits",
            "PremiumFeatureIncreasedUploadFileSize",
            "PremiumFeatureImprovedDownloadSpeed",
            "PremiumFeatureVoiceRecognition",
            "PremiumFeatureDisabledAds",
            "PremiumFeatureUniqueReactions",
            "PremiumFeatureUniqueStickers",
            "PremiumFeatureCustomEmoji",
            "PremiumFeatureAdvancedChatManagement",
            "PremiumFeatureProfileBadge",
            "PremiumFeatureEmojiStatus",
            "PremiumFeatureAnimatedProfilePhoto",
            "PremiumFeatureForumTopicIcon",
            "PremiumFeatureAppIcons",
            "PremiumFeatureRealTimeChatTranslation",
            "PremiumFeatureUpgradedStories",
            "PremiumFeatureChatBoost",
            "PremiumFeatureAccentColor",
            "PremiumFeatureBackgroundForBoth",
            "PremiumFeatureSavedMessagesTags",
            "PremiumFeatureMessagePrivacy",
            "PremiumFeatureLastSeenTimes",
            "PremiumFeatureBusiness",
            "PremiumFeatureMessageEffects"
        ],
        "BusinessFeature": [
            "BusinessFeatureLocation",
            "BusinessFeatureOpeningHours",
            "BusinessFeatureQuickReplies",
            "BusinessFeatureGreetingMessage",
            "BusinessFeatureAwayMessage",
            "BusinessFeatureAccountLinks",
            "BusinessFeatureStartPage",
            "BusinessFeatureBots",
            "BusinessFeatureEmojiStatus",
            "BusinessFeatureChatFolderTags",
            "BusinessFeatureUpgradedStories"
        ],
        "PremiumStoryFeature": [
            "PremiumStoryFeaturePriorityOrder",
            "PremiumStoryFeatureStealthMode",
            "PremiumStoryFeaturePermanentViewsHistory",
            "PremiumStoryFeatureCustomExpirationDuration",
            "PremiumStoryFeatureSaveStories",
            "PremiumStoryFeatureLinksAndFormatting",
            "PremiumStoryFeatureVideoQuality"
        ],
        "PremiumSource": [
            "PremiumSourceLimitExceeded",
            "PremiumSourceFeature",
            "PremiumSourceBusinessFeature",
            "PremiumSourceStoryFeature",
            "PremiumSourceLink",
            "PremiumSourceSettings"
        ],
        "StorePaymentPurpose": [
            "StorePaymentPurposePremiumSubscription",
            "StorePaymentPurposeGiftedPremium",
            "StorePaymentPurposePremiumGiftCodes",
            "StorePaymentPurposePremiumGiveaway",
            "StorePaymentPurposeStars",
            "StorePaymentPurposeGiftedStars"
        ],
        "TelegramPaymentPurpose": [
            "TelegramPaymentPurposePremiumGiftCodes",
            "TelegramPaymentPurposePremiumGiveaway",
            "TelegramPaymentPurposeStars",
            "TelegramPaymentPurposeGiftedStars",
            "TelegramPaymentPurposeJoinChat"
        ],
        "DeviceToken": [
            "DeviceTokenFirebaseCloudMessaging",
            "DeviceTokenApplePush",
            "DeviceTokenApplePushVoIP",
            "DeviceTokenWindowsPush",
            "DeviceTokenMicrosoftPush",
            "DeviceTokenMicrosoftPushVoIP",
            "DeviceTokenWebPush",
            "DeviceTokenSimplePush",
            "DeviceTokenUbuntuPush",
            "DeviceTokenBlackBerryPush",
            "DeviceTokenTizenPush",
            "DeviceTokenHuaweiPush"
        ],
        "BackgroundFill": [
            "BackgroundFillSolid",
            "BackgroundFillGradient",
            "BackgroundFillFreeformGradient"
        ],
        "BackgroundType": [
            "BackgroundTypeWallpaper",
            "BackgroundTypePattern",
            "BackgroundTypeFill",
            "BackgroundTypeChatTheme"
        ],
        "InputBackground": [
            "InputBackgroundLocal",
            "InputBackgroundRemote",
            "InputBackgroundPrevious"
        ],
        "CanSendStoryResult": [
            "CanSendStoryResultOk",
            "CanSendStoryResultPremiumNeeded",
            "CanSendStoryResultBoostNeeded",
            "CanSendStoryResultActiveStoryLimitExceeded",
            "CanSendStoryResultWeeklyLimitExceeded",
            "CanSendStoryResultMonthlyLimitExceeded"
        ],
        "CanTransferOwnershipResult": [
            "CanTransferOwnershipResultOk",
            "CanTransferOwnershipResultPasswordNeeded",
            "CanTransferOwnershipResultPasswordTooFresh",
            "CanTransferOwnershipResultSessionTooFresh"
        ],
        "CheckChatUsernameResult": [
            "CheckChatUsernameResultOk",
            "CheckChatUsernameResultUsernameInvalid",
            "CheckChatUsernameResultUsernameOccupied",
            "CheckChatUsernameResultUsernamePurchasable",
            "CheckChatUsernameResultPublicChatsTooMany",
            "CheckChatUsernameResultPublicGroupsUnavailable"
        ],
        "CheckStickerSetNameResult": [
            "CheckStickerSetNameResultOk",
            "CheckStickerSetNameResultNameInvalid",
            "CheckStickerSetNameResultNameOccupied"
        ],
        "ResetPasswordResult": [
            "ResetPasswordResultOk",
            "ResetPasswordResultPending",
            "ResetPasswordResultDeclined"
        ],
        "MessageFileType": [
            "MessageFileTypePrivate",
            "MessageFileTypeGroup",
            "MessageFileTypeUnknown"
        ],
        "PushMessageContent": [
            "PushMessageContentHidden",
            "PushMessageContentAnimation",
            "PushMessageContentAudio",
            "PushMessageContentContact",
            "PushMessageContentContactRegistered",
            "PushMessageContentDocument",
            "PushMessageContentGame",
            "PushMessageContentGameScore",
            "PushMessageContentInvoice",
            "PushMessageContentLocation",
            "PushMessageContentPaidMedia",
            "PushMessageContentPhoto",
            "PushMessageContentPoll",
            "PushMessageContentPremiumGiftCode",
            "PushMessageContentPremiumGiveaway",
            "PushMessageContentScreenshotTaken",
            "PushMessageContentSticker",
            "PushMessageContentStory",
            "PushMessageContentText",
            "PushMessageContentVideo",
            "PushMessageContentVideoNote",
            "PushMessageContentVoiceNote",
            "PushMessageContentBasicGroupChatCreate",
            "PushMessageContentChatAddMembers",
            "PushMessageContentChatChangePhoto",
            "PushMessageContentChatChangeTitle",
            "PushMessageContentChatSetBackground",
            "PushMessageContentChatSetTheme",
            "PushMessageContentChatDeleteMember",
            "PushMessageContentChatJoinByLink",
            "PushMessageContentChatJoinByRequest",
            "PushMessageContentRecurringPayment",
            "PushMessageContentSuggestProfilePhoto",
            "PushMessageContentMessageForwards",
            "PushMessageContentMediaAlbum"
        ],
        "NotificationType": [
            "NotificationTypeNewMessage",
            "NotificationTypeNewSecretChat",
            "NotificationTypeNewCall",
            "NotificationTypeNewPushMessage"
        ],
        "NotificationGroupType": [
            "NotificationGroupTypeMessages",
            "NotificationGroupTypeMentions",
            "NotificationGroupTypeSecretChat",
            "NotificationGroupTypeCalls"
        ],
        "OptionValue": [
            "OptionValueBoolean",
            "OptionValueEmpty",
            "OptionValueInteger",
            "OptionValueString"
        ],
        "JsonValue": [
            "JsonValueNull",
            "JsonValueBoolean",
            "JsonValueNumber",
            "JsonValueString",
            "JsonValueArray",
            "JsonValueObject"
        ],
        "StoryPrivacySettings": [
            "StoryPrivacySettingsEveryone",
            "StoryPrivacySettingsContacts",
            "StoryPrivacySettingsCloseFriends",
            "StoryPrivacySettingsSelectedUsers"
        ],
        "UserPrivacySettingRule": [
            "UserPrivacySettingRuleAllowAll",
            "UserPrivacySettingRuleAllowContacts",
            "UserPrivacySettingRuleAllowPremiumUsers",
            "UserPrivacySettingRuleAllowUsers",
            "UserPrivacySettingRuleAllowChatMembers",
            "UserPrivacySettingRuleRestrictAll",
            "UserPrivacySettingRuleRestrictContacts",
            "UserPrivacySettingRuleRestrictUsers",
            "UserPrivacySettingRuleRestrictChatMembers"
        ],
        "UserPrivacySetting": [
            "UserPrivacySettingShowStatus",
            "UserPrivacySettingShowProfilePhoto",
            "UserPrivacySettingShowLinkInForwardedMessages",
            "UserPrivacySettingShowPhoneNumber",
            "UserPrivacySettingShowBio",
            "UserPrivacySettingShowBirthdate",
            "UserPrivacySettingAllowChatInvites",
            "UserPrivacySettingAllowCalls",
            "UserPrivacySettingAllowPeerToPeerCalls",
            "UserPrivacySettingAllowFindingByPhoneNumber",
            "UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages"
        ],
        "CanSendMessageToUserResult": [
            "CanSendMessageToUserResultOk",
            "CanSendMessageToUserResultUserIsDeleted",
            "CanSendMessageToUserResultUserRestrictsNewChats"
        ],
        "SessionType": [
            "SessionTypeAndroid",
            "SessionTypeApple",
            "SessionTypeBrave",
            "SessionTypeChrome",
            "SessionTypeEdge",
            "SessionTypeFirefox",
            "SessionTypeIpad",
            "SessionTypeIphone",
            "SessionTypeLinux",
            "SessionTypeMac",
            "SessionTypeOpera",
            "SessionTypeSafari",
            "SessionTypeUbuntu",
            "SessionTypeUnknown",
            "SessionTypeVivaldi",
            "SessionTypeWindows",
            "SessionTypeXbox"
        ],
        "ReportReason": [
            "ReportReasonSpam",
            "ReportReasonViolence",
            "ReportReasonPornography",
            "ReportReasonChildAbuse",
            "ReportReasonCopyright",
            "ReportReasonUnrelatedLocation",
            "ReportReasonFake",
            "ReportReasonIllegalDrugs",
            "ReportReasonPersonalDetails",
            "ReportReasonCustom"
        ],
        "TargetChat": [
            "TargetChatCurrent",
            "TargetChatChosen",
            "TargetChatInternalLink"
        ],
        "InternalLinkType": [
            "InternalLinkTypeActiveSessions",
            "InternalLinkTypeAttachmentMenuBot",
            "InternalLinkTypeAuthenticationCode",
            "InternalLinkTypeBackground",
            "InternalLinkTypeBotAddToChannel",
            "InternalLinkTypeBotStart",
            "InternalLinkTypeBotStartInGroup",
            "InternalLinkTypeBusinessChat",
            "InternalLinkTypeBuyStars",
            "InternalLinkTypeChangePhoneNumber",
            "InternalLinkTypeChatBoost",
            "InternalLinkTypeChatFolderInvite",
            "InternalLinkTypeChatFolderSettings",
            "InternalLinkTypeChatInvite",
            "InternalLinkTypeDefaultMessageAutoDeleteTimerSettings",
            "InternalLinkTypeEditProfileSettings",
            "InternalLinkTypeGame",
            "InternalLinkTypeInstantView",
            "InternalLinkTypeInvoice",
            "InternalLinkTypeLanguagePack",
            "InternalLinkTypeLanguageSettings",
            "InternalLinkTypeMainWebApp",
            "InternalLinkTypeMessage",
            "InternalLinkTypeMessageDraft",
            "InternalLinkTypePassportDataRequest",
            "InternalLinkTypePhoneNumberConfirmation",
            "InternalLinkTypePremiumFeatures",
            "InternalLinkTypePremiumGift",
            "InternalLinkTypePremiumGiftCode",
            "InternalLinkTypePrivacyAndSecuritySettings",
            "InternalLinkTypeProxy",
            "InternalLinkTypePublicChat",
            "InternalLinkTypeQrCodeAuthentication",
            "InternalLinkTypeRestorePurchases",
            "InternalLinkTypeSettings",
            "InternalLinkTypeStickerSet",
            "InternalLinkTypeStory",
            "InternalLinkTypeTheme",
            "InternalLinkTypeThemeSettings",
            "InternalLinkTypeUnknownDeepLink",
            "InternalLinkTypeUnsupportedProxy",
            "InternalLinkTypeUserPhoneNumber",
            "InternalLinkTypeUserToken",
            "InternalLinkTypeVideoChat",
            "InternalLinkTypeWebApp"
        ],
        "BlockList": [
            "BlockListMain",
            "BlockListStories"
        ],
        "FileType": [
            "FileTypeNone",
            "FileTypeAnimation",
            "FileTypeAudio",
            "FileTypeDocument",
            "FileTypeNotificationSound",
            "FileTypePhoto",
            "FileTypePhotoStory",
            "FileTypeProfilePhoto",
            "FileTypeSecret",
            "FileTypeSecretThumbnail",
            "FileTypeSecure",
            "FileTypeSticker",
            "FileTypeThumbnail",
            "FileTypeUnknown",
            "FileTypeVideo",
            "FileTypeVideoNote",
            "FileTypeVideoStory",
            "FileTypeVoiceNote",
            "FileTypeWallpaper"
        ],
        "NetworkType": [
            "NetworkTypeNone",
            "NetworkTypeMobile",
            "NetworkTypeMobileRoaming",
            "NetworkTypeWiFi",
            "NetworkTypeOther"
        ],
        "NetworkStatisticsEntry": [
            "NetworkStatisticsEntryFile",
            "NetworkStatisticsEntryCall"
        ],
        "AutosaveSettingsScope": [
            "AutosaveSettingsScopePrivateChats",
            "AutosaveSettingsScopeGroupChats",
            "AutosaveSettingsScopeChannelChats",
            "AutosaveSettingsScopeChat"
        ],
        "ConnectionState": [
            "ConnectionStateWaitingForNetwork",
            "ConnectionStateConnectingToProxy",
            "ConnectionStateConnecting",
            "ConnectionStateUpdating",
            "ConnectionStateReady"
        ],
        "TopChatCategory": [
            "TopChatCategoryUsers",
            "TopChatCategoryBots",
            "TopChatCategoryGroups",
            "TopChatCategoryChannels",
            "TopChatCategoryInlineBots",
            "TopChatCategoryWebAppBots",
            "TopChatCategoryCalls",
            "TopChatCategoryForwardChats"
        ],
        "TMeUrlType": [
            "TMeUrlTypeUser",
            "TMeUrlTypeSupergroup",
            "TMeUrlTypeChatInvite",
            "TMeUrlTypeStickerSet"
        ],
        "SuggestedAction": [
            "SuggestedActionEnableArchiveAndMuteNewChats",
            "SuggestedActionCheckPassword",
            "SuggestedActionCheckPhoneNumber",
            "SuggestedActionViewChecksHint",
            "SuggestedActionConvertToBroadcastGroup",
            "SuggestedActionSetPassword",
            "SuggestedActionUpgradePremium",
            "SuggestedActionRestorePremium",
            "SuggestedActionSubscribeToAnnualPremium",
            "SuggestedActionGiftPremiumForChristmas",
            "SuggestedActionSetBirthdate",
            "SuggestedActionExtendPremium",
            "SuggestedActionExtendStarSubscriptions"
        ],
        "TextParseMode": [
            "TextParseModeMarkdown",
            "TextParseModeHTML"
        ],
        "ProxyType": [
            "ProxyTypeSocks5",
            "ProxyTypeHttp",
            "ProxyTypeMtproto"
        ],
        "StatisticalGraph": [
            "StatisticalGraphData",
            "StatisticalGraphAsync",
            "StatisticalGraphError"
        ],
        "ChatStatisticsObjectType": [
            "ChatStatisticsObjectTypeMessage",
            "ChatStatisticsObjectTypeStory"
        ],
        "ChatStatistics": [
            "ChatStatisticsSupergroup",
            "ChatStatisticsChannel"
        ],
        "RevenueWithdrawalState": [
            "RevenueWithdrawalStatePending",
            "RevenueWithdrawalStateSucceeded",
            "RevenueWithdrawalStateFailed"
        ],
        "ChatRevenueTransactionType": [
            "ChatRevenueTransactionTypeEarnings",
            "ChatRevenueTransactionTypeWithdrawal",
            "ChatRevenueTransactionTypeRefund"
        ],
        "VectorPathCommand": [
            "VectorPathCommandLine",
            "VectorPathCommandCubicBezierCurve"
        ],
        "BotCommandScope": [
            "BotCommandScopeDefault",
            "BotCommandScopeAllPrivateChats",
            "BotCommandScopeAllGroupChats",
            "BotCommandScopeAllChatAdministrators",
            "BotCommandScopeChat",
            "BotCommandScopeChatAdministrators",
            "BotCommandScopeChatMember"
        ],
        "PhoneNumberCodeType": [
            "PhoneNumberCodeTypeChange",
            "PhoneNumberCodeTypeVerify",
            "PhoneNumberCodeTypeConfirmOwnership"
        ],
        "Update": [
            "UpdateAuthorizationState",
            "UpdateNewMessage",
            "UpdateMessageSendAcknowledged",
            "UpdateMessageSendSucceeded",
            "UpdateMessageSendFailed",
            "UpdateMessageContent",
            "UpdateMessageEdited",
            "UpdateMessageIsPinned",
            "UpdateMessageInteractionInfo",
            "UpdateMessageContentOpened",
            "UpdateMessageMentionRead",
            "UpdateMessageUnreadReactions",
            "UpdateMessageFactCheck",
            "UpdateMessageLiveLocationViewed",
            "UpdateNewChat",
            "UpdateChatTitle",
            "UpdateChatPhoto",
            "UpdateChatAccentColors",
            "UpdateChatPermissions",
            "UpdateChatLastMessage",
            "UpdateChatPosition",
            "UpdateChatAddedToList",
            "UpdateChatRemovedFromList",
            "UpdateChatReadInbox",
            "UpdateChatReadOutbox",
            "UpdateChatActionBar",
            "UpdateChatBusinessBotManageBar",
            "UpdateChatAvailableReactions",
            "UpdateChatDraftMessage",
            "UpdateChatEmojiStatus",
            "UpdateChatMessageSender",
            "UpdateChatMessageAutoDeleteTime",
            "UpdateChatNotificationSettings",
            "UpdateChatPendingJoinRequests",
            "UpdateChatReplyMarkup",
            "UpdateChatBackground",
            "UpdateChatTheme",
            "UpdateChatUnreadMentionCount",
            "UpdateChatUnreadReactionCount",
            "UpdateChatVideoChat",
            "UpdateChatDefaultDisableNotification",
            "UpdateChatHasProtectedContent",
            "UpdateChatIsTranslatable",
            "UpdateChatIsMarkedAsUnread",
            "UpdateChatViewAsTopics",
            "UpdateChatBlockList",
            "UpdateChatHasScheduledMessages",
            "UpdateChatFolders",
            "UpdateChatOnlineMemberCount",
            "UpdateSavedMessagesTopic",
            "UpdateSavedMessagesTopicCount",
            "UpdateQuickReplyShortcut",
            "UpdateQuickReplyShortcutDeleted",
            "UpdateQuickReplyShortcuts",
            "UpdateQuickReplyShortcutMessages",
            "UpdateForumTopicInfo",
            "UpdateScopeNotificationSettings",
            "UpdateReactionNotificationSettings",
            "UpdateNotification",
            "UpdateNotificationGroup",
            "UpdateActiveNotifications",
            "UpdateHavePendingNotifications",
            "UpdateDeleteMessages",
            "UpdateChatAction",
            "UpdateUserStatus",
            "UpdateUser",
            "UpdateBasicGroup",
            "UpdateSupergroup",
            "UpdateSecretChat",
            "UpdateUserFullInfo",
            "UpdateBasicGroupFullInfo",
            "UpdateSupergroupFullInfo",
            "UpdateServiceNotification",
            "UpdateFile",
            "UpdateFileGenerationStart",
            "UpdateFileGenerationStop",
            "UpdateFileDownloads",
            "UpdateFileAddedToDownloads",
            "UpdateFileDownload",
            "UpdateFileRemovedFromDownloads",
            "UpdateApplicationVerificationRequired",
            "UpdateCall",
            "UpdateGroupCall",
            "UpdateGroupCallParticipant",
            "UpdateNewCallSignalingData",
            "UpdateUserPrivacySettingRules",
            "UpdateUnreadMessageCount",
            "UpdateUnreadChatCount",
            "UpdateStory",
            "UpdateStoryDeleted",
            "UpdateStorySendSucceeded",
            "UpdateStorySendFailed",
            "UpdateChatActiveStories",
            "UpdateStoryListChatCount",
            "UpdateStoryStealthMode",
            "UpdateOption",
            "UpdateStickerSet",
            "UpdateInstalledStickerSets",
            "UpdateTrendingStickerSets",
            "UpdateRecentStickers",
            "UpdateFavoriteStickers",
            "UpdateSavedAnimations",
            "UpdateSavedNotificationSounds",
            "UpdateDefaultBackground",
            "UpdateChatThemes",
            "UpdateAccentColors",
            "UpdateProfileAccentColors",
            "UpdateLanguagePackStrings",
            "UpdateConnectionState",
            "UpdateTermsOfService",
            "UpdateUsersNearby",
            "UpdateUnconfirmedSession",
            "UpdateAttachmentMenuBots",
            "UpdateWebAppMessageSent",
            "UpdateActiveEmojiReactions",
            "UpdateAvailableMessageEffects",
            "UpdateDefaultReactionType",
            "UpdateSavedMessagesTags",
            "UpdateActiveLiveLocationMessages",
            "UpdateOwnedStarCount",
            "UpdateChatRevenueAmount",
            "UpdateStarRevenueStatus",
            "UpdateSpeechRecognitionTrial",
            "UpdateDiceEmojis",
            "UpdateAnimatedEmojiMessageClicked",
            "UpdateAnimationSearchParameters",
            "UpdateSuggestedActions",
            "UpdateSpeedLimitNotification",
            "UpdateContactCloseBirthdays",
            "UpdateAutosaveSettings",
            "UpdateBusinessConnection",
            "UpdateNewBusinessMessage",
            "UpdateBusinessMessageEdited",
            "UpdateBusinessMessagesDeleted",
            "UpdateNewInlineQuery",
            "UpdateNewChosenInlineResult",
            "UpdateNewCallbackQuery",
            "UpdateNewInlineCallbackQuery",
            "UpdateNewBusinessCallbackQuery",
            "UpdateNewShippingQuery",
            "UpdateNewPreCheckoutQuery",
            "UpdateNewCustomEvent",
            "UpdateNewCustomQuery",
            "UpdatePoll",
            "UpdatePollAnswer",
            "UpdateChatMember",
            "UpdateNewChatJoinRequest",
            "UpdateChatBoost",
            "UpdateMessageReaction",
            "UpdateMessageReactions"
        ],
        "LogStream": [
            "LogStreamDefault",
            "LogStreamFile",
            "LogStreamEmpty"
        ]
    }
}